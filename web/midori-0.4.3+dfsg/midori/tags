!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACTIVATE	midori-extension.c	/^    ACTIVATE,$/;"	e	enum:__anon36	file:
ACTIVATE_ACTION	midori-browser.c	/^    ACTIVATE_ACTION,$/;"	e	enum:__anon8	file:
ACTIVATE_ACTION	midori-view.c	/^    ACTIVATE_ACTION,$/;"	e	enum:__anon5	file:
ACTIVE_CHANGED	midori-locationaction.c	/^    ACTIVE_CHANGED,$/;"	e	enum:__anon11	file:
ADD_BOOKMARK	midori-view.c	/^    ADD_BOOKMARK,$/;"	e	enum:__anon5	file:
ADD_BROWSER	midori-app.c	/^    ADD_BROWSER,$/;"	e	enum:__anon9	file:
ADD_DOWNLOAD	midori-browser.c	/^    ADD_DOWNLOAD,$/;"	e	enum:__anon8	file:
ADD_SPEED_DIAL	midori-view.c	/^    ADD_SPEED_DIAL,$/;"	e	enum:__anon5	file:
ADD_TAB	midori-browser.c	/^    ADD_TAB,$/;"	e	enum:__anon8	file:
ATTACH_INSPECTOR	midori-view.c	/^    ATTACH_INSPECTOR,$/;"	e	enum:__anon5	file:
BACKGROUND_COL	midori-locationaction.c	/^    BACKGROUND_COL,$/;"	e	enum:__anon12	file:
BOOKMARK_FILE	main.c	48;"	d	file:
BOOKMARK_FILE	main.c	50;"	d	file:
BUFFSIZE	socket.c	67;"	d	file:
BUFSIZE	midori-browser.c	62;"	d	file:
CLOSE	midori-panel.c	/^    CLOSE,$/;"	e	enum:__anon28	file:
COMPLETION_DELAY	midori-locationaction.c	28;"	d	file:
CONN_ESTABLISHED	socket.h	/^	CONN_ESTABLISHED,$/;"	e	enum:__anon27
CONN_FAILED	socket.h	/^	CONN_FAILED$/;"	e	enum:__anon27
CONN_LOOKUPFAILED	socket.h	/^	CONN_LOOKUPFAILED,$/;"	e	enum:__anon27
CONN_LOOKUPSUCCESS	socket.h	/^	CONN_LOOKUPSUCCESS,$/;"	e	enum:__anon27
CONN_READY	socket.h	/^	CONN_READY,$/;"	e	enum:__anon27
CONSOLE_MESSAGE	midori-view.c	/^    CONSOLE_MESSAGE,$/;"	e	enum:__anon5	file:
ConnectionState	socket.h	/^} ConnectionState;$/;"	t	typeref:enum:__anon27
DEACTIVATE	midori-extension.c	/^    DEACTIVATE,$/;"	e	enum:__anon36	file:
DETACH_INSPECTOR	midori-view.c	/^    DETACH_INSPECTOR,$/;"	e	enum:__anon5	file:
DOWNLOAD_REQUESTED	midori-view.c	/^    DOWNLOAD_REQUESTED,$/;"	e	enum:__anon5	file:
EntryIconInfo	gtkiconentry.c	/^} EntryIconInfo;$/;"	t	typeref:struct:__anon16	file:
FAVICON_COL	midori-locationaction.c	/^    FAVICON_COL,$/;"	e	enum:__anon12	file:
FILLED_ADD	midori-preferences.c	288;"	d	file:
FOCUS_IN	midori-locationaction.c	/^    FOCUS_IN,$/;"	e	enum:__anon11	file:
FOCUS_OUT	midori-locationaction.c	/^    FOCUS_OUT,$/;"	e	enum:__anon11	file:
FOCUS_OUT	midori-searchaction.c	/^    FOCUS_OUT,$/;"	e	enum:__anon37	file:
FRAME_NEW	midori-preferences.c	286;"	d	file:
GTK_ICON_ENTRY	gtkiconentry.h	34;"	d
GTK_ICON_ENTRY_PRIMARY	gtkiconentry.h	32;"	d
GTK_ICON_ENTRY_SECONDARY	gtkiconentry.h	33;"	d
GTK_PARAM_READABLE	gtkiconentry.c	50;"	d	file:
GTK_PARAM_READWRITE	gtkiconentry.c	58;"	d	file:
GTK_PARAM_WRITABLE	gtkiconentry.c	54;"	d	file:
GTK_TYPE_ICON_ENTRY	gtkiconentry.h	35;"	d
G_CONST_RETURN	midori-app.c	47;"	d	file:
G_CONST_RETUTN	midori-app.c	51;"	d	file:
G_DEFINE_TYPE	midori-app.c	/^G_DEFINE_TYPE (MidoriApp, midori_app, G_TYPE_OBJECT)$/;"	f
G_DEFINE_TYPE	midori-browser.c	/^G_DEFINE_TYPE (MidoriBrowser, midori_browser, HILDON_TYPE_WINDOW)$/;"	f
G_DEFINE_TYPE	midori-locationaction.c	/^G_DEFINE_TYPE (MidoriLocationAction, midori_location_action, GTK_TYPE_ACTION)$/;"	f
G_DEFINE_TYPE	midori-panel.c	/^G_DEFINE_TYPE (MidoriPanel, midori_panel, GTK_TYPE_HBOX)$/;"	f
G_DEFINE_TYPE	midori-searchaction.c	/^G_DEFINE_TYPE (MidoriSearchAction, midori_search_action, GTK_TYPE_ACTION)$/;"	f
G_DEFINE_TYPE	midori-websettings.c	/^G_DEFINE_TYPE (MidoriWebSettings, midori_web_settings, WEBKIT_TYPE_WEB_SETTINGS)$/;"	f
GetProfileString	midori-browser.c	/^int GetProfileString(char *profile, char *AppName, char *KeyName, char *KeyVal )$/;"	f	signature:(char *profile, char *AppName, char *KeyName, char *KeyVal )
GetProfileString	midori-conf.c	/^int GetProfileString(char *profile, char *AppName, char *KeyName, char *KeyVal )$/;"	f	signature:(char *profile, char *AppName, char *KeyName, char *KeyVal )
GtkIconEntry	gtkiconentry.h	30;"	d
GtkIconEntryPosition	gtkiconentry.h	31;"	d
HAVE_GTK_INFO_BAR	midori-view.c	1190;"	d	file:
HAVE_OFFSCREEN	main.c	1444;"	d	file:
HAVE_OFFSCREEN	midori-view.c	1191;"	d	file:
ICON_MARGIN	gtkiconentry.c	63;"	d	file:
ICON_PRESSED	gtkiconentry.c	/^  ICON_PRESSED,$/;"	e	enum:__anon17	file:
ICON_RELEASED	gtkiconentry.c	/^  ICON_RELEASED,$/;"	e	enum:__anon17	file:
INDENTED_ADD	midori-preferences.c	290;"	d	file:
INVALID_SOCKET	socket.c	75;"	d	file:
IS_VALID_ICON_ENTRY_POSITION	gtkiconentry.c	66;"	d	file:
KEYVALLEN	midori-browser.c	61;"	d	file:
KEYVALLEN	midori-conf.c	7;"	d	file:
KatzeNetIconPriv	midori-view.c	/^} KatzeNetIconPriv;$/;"	t	typeref:struct:__anon6	file:
LAST_SIGNAL	gtkiconentry.c	/^  LAST_SIGNAL$/;"	e	enum:__anon17	file:
LAST_SIGNAL	midori-app.c	/^    LAST_SIGNAL$/;"	e	enum:__anon9	file:
LAST_SIGNAL	midori-browser.c	/^    LAST_SIGNAL$/;"	e	enum:__anon8	file:
LAST_SIGNAL	midori-extension.c	/^    LAST_SIGNAL$/;"	e	enum:__anon36	file:
LAST_SIGNAL	midori-locationaction.c	/^    LAST_SIGNAL$/;"	e	enum:__anon11	file:
LAST_SIGNAL	midori-panel.c	/^    LAST_SIGNAL$/;"	e	enum:__anon28	file:
LAST_SIGNAL	midori-searchaction.c	/^    LAST_SIGNAL$/;"	e	enum:__anon37	file:
LAST_SIGNAL	midori-view.c	/^    LAST_SIGNAL$/;"	e	enum:__anon5	file:
LAST_SIGNAL	midori-viewable.c	/^    LAST_SIGNAL$/;"	e	enum:__anon2	file:
LIBSOUP_USE_UNSTABLE_REQUEST_API	main.c	39;"	d	file:
LIBSOUP_USE_UNSTABLE_REQUEST_API	midori-preferences.c	21;"	d	file:
MAXHOSTS	sokoke.c	1432;"	d	file:
MAX_ICONS	gtkiconentry.c	64;"	d	file:
MAX_ITEMS	midori-locationaction.c	29;"	d	file:
MCE_SIGNAL_MATCH	midori-browser.c	48;"	d	file:
MESettingBoolean	midori-extension.c	/^} MESettingBoolean;$/;"	t	typeref:struct:__anon31	file:
MESettingInteger	midori-extension.c	/^} MESettingInteger;$/;"	t	typeref:struct:__anon32	file:
MESettingString	midori-extension.c	/^} MESettingString;$/;"	t	typeref:struct:__anon33	file:
MESettingStringList	midori-extension.c	/^} MESettingStringList;$/;"	t	typeref:struct:__anon34	file:
MIDORI_APP	midori-app.h	24;"	d
MIDORI_APP_CLASS	midori-app.h	26;"	d
MIDORI_APP_GET_CLASS	midori-app.h	32;"	d
MIDORI_BROWSER	midori-browser.h	27;"	d
MIDORI_BROWSER_CLASS	midori-browser.h	29;"	d
MIDORI_BROWSER_GET_CLASS	midori-browser.h	35;"	d
MIDORI_CHECK_VERSION	midori.h	32;"	d
MIDORI_CLEAR_COOKIES	midori-websettings.h	/^    MIDORI_CLEAR_COOKIES = 2, \/* deprecated *\/$/;"	e	enum:__anon19
MIDORI_CLEAR_FLASH_COOKIES	midori-websettings.h	/^    MIDORI_CLEAR_FLASH_COOKIES = 4, \/* deprecated *\/$/;"	e	enum:__anon19
MIDORI_CLEAR_HISTORY	midori-websettings.h	/^    MIDORI_CLEAR_HISTORY = 1,$/;"	e	enum:__anon19
MIDORI_CLEAR_NONE	midori-websettings.h	/^    MIDORI_CLEAR_NONE = 0,$/;"	e	enum:__anon19
MIDORI_CLEAR_ON_QUIT	midori-websettings.h	/^    MIDORI_CLEAR_ON_QUIT = 32,$/;"	e	enum:__anon19
MIDORI_CLEAR_SESSION	midori-websettings.h	/^    MIDORI_CLEAR_SESSION = 128,$/;"	e	enum:__anon19
MIDORI_CLEAR_TRASH	midori-websettings.h	/^    MIDORI_CLEAR_TRASH = 16, \/* deprecated *\/$/;"	e	enum:__anon19
MIDORI_CLEAR_WEBSITE_ICONS	midori-websettings.h	/^    MIDORI_CLEAR_WEBSITE_ICONS = 8, \/* deprecated *\/$/;"	e	enum:__anon19
MIDORI_CLEAR_WEB_CACHE	midori-websettings.h	/^    MIDORI_CLEAR_WEB_CACHE = 64, \/* deprecated *\/$/;"	e	enum:__anon19
MIDORI_DUMMY_VIEWABLE	midori-panel.c	954;"	d	file:
MIDORI_ENCODING_CHINESE	midori-websettings.h	/^    MIDORI_ENCODING_CHINESE,$/;"	e	enum:__anon22
MIDORI_ENCODING_CUSTOM	midori-websettings.h	/^    MIDORI_ENCODING_CUSTOM$/;"	e	enum:__anon22
MIDORI_ENCODING_JAPANESE	midori-websettings.h	/^    MIDORI_ENCODING_JAPANESE,$/;"	e	enum:__anon22
MIDORI_ENCODING_KOREAN	midori-websettings.h	/^    MIDORI_ENCODING_KOREAN,$/;"	e	enum:__anon22
MIDORI_ENCODING_RUSSIAN	midori-websettings.h	/^    MIDORI_ENCODING_RUSSIAN,$/;"	e	enum:__anon22
MIDORI_ENCODING_UNICODE	midori-websettings.h	/^    MIDORI_ENCODING_UNICODE,$/;"	e	enum:__anon22
MIDORI_ENCODING_WESTERN	midori-websettings.h	/^    MIDORI_ENCODING_WESTERN,$/;"	e	enum:__anon22
MIDORI_EVENT_CONTEXT_MENU	midori-platform.h	27;"	d
MIDORI_EVENT_CONTEXT_MENU	midori-platform.h	31;"	d
MIDORI_EVENT_NEW_TAB	midori-platform.h	35;"	d
MIDORI_EXTENSION	midori-extension.h	21;"	d
MIDORI_EXTENSION_CLASS	midori-extension.h	23;"	d
MIDORI_EXTENSION_GET_CLASS	midori-extension.h	29;"	d
MIDORI_IDENT_CUSTOM	midori-websettings.h	/^    MIDORI_IDENT_CUSTOM,$/;"	e	enum:__anon26
MIDORI_IDENT_EXPLORER	midori-websettings.h	/^    MIDORI_IDENT_EXPLORER,$/;"	e	enum:__anon26
MIDORI_IDENT_FIREFOX	midori-websettings.h	/^    MIDORI_IDENT_FIREFOX,$/;"	e	enum:__anon26
MIDORI_IDENT_GENUINE	midori-websettings.h	/^    MIDORI_IDENT_GENUINE \/* Midori *\/,$/;"	e	enum:__anon26
MIDORI_IDENT_IPHONE	midori-websettings.h	/^    MIDORI_IDENT_IPHONE,$/;"	e	enum:__anon26
MIDORI_IDENT_MIDORI	midori-websettings.h	/^    MIDORI_IDENT_MIDORI \/* Automatic *\/,$/;"	e	enum:__anon26
MIDORI_IDENT_SAFARI	midori-websettings.h	/^    MIDORI_IDENT_SAFARI,$/;"	e	enum:__anon26
MIDORI_IS_APP	midori-app.h	28;"	d
MIDORI_IS_APP_CLASS	midori-app.h	30;"	d
MIDORI_IS_BROWSER	midori-browser.h	31;"	d
MIDORI_IS_BROWSER_CLASS	midori-browser.h	33;"	d
MIDORI_IS_DUMMY_VIEWABLE	midori-panel.c	956;"	d	file:
MIDORI_IS_EXTENSION	midori-extension.h	25;"	d
MIDORI_IS_EXTENSION_CLASS	midori-extension.h	27;"	d
MIDORI_IS_LOCATION_ACTION	midori-locationaction.h	26;"	d
MIDORI_IS_LOCATION_ACTION_CLASS	midori-locationaction.h	28;"	d
MIDORI_IS_PANED_ACTION	midori-panedaction.h	25;"	d
MIDORI_IS_PANED_ACTION_CLASS	midori-panedaction.h	27;"	d
MIDORI_IS_PANEL	midori-panel.h	29;"	d
MIDORI_IS_PANEL_CLASS	midori-panel.h	31;"	d
MIDORI_IS_PREFERENCES	midori-preferences.h	27;"	d
MIDORI_IS_PREFERENCES_CLASS	midori-preferences.h	29;"	d
MIDORI_IS_SEARCH_ACTION	midori-searchaction.h	25;"	d
MIDORI_IS_SEARCH_ACTION_CLASS	midori-searchaction.h	27;"	d
MIDORI_IS_VIEW	midori-view.h	60;"	d
MIDORI_IS_VIEWABLE	midori-viewable.h	23;"	d
MIDORI_IS_VIEW_CLASS	midori-view.h	62;"	d
MIDORI_IS_WEB_SETTINGS	midori-websettings.h	27;"	d
MIDORI_IS_WEB_SETTINGS_CLASS	midori-websettings.h	29;"	d
MIDORI_KEYS_MODIFIER_MASK	midori-view.c	1659;"	d	file:
MIDORI_LOAD_COMMITTED	midori-view.h	22;"	d
MIDORI_LOAD_FINISHED	midori-view.h	23;"	d
MIDORI_LOAD_PROVISIONAL	midori-view.h	21;"	d
MIDORI_LOCATION_ACTION	midori-locationaction.h	22;"	d
MIDORI_LOCATION_ACTION_CLASS	midori-locationaction.h	24;"	d
MIDORI_LOCATION_ACTION_GET_CLASS	midori-locationaction.h	30;"	d
MIDORI_MODULE_PREFIX	midori-platform.h	41;"	d
MIDORI_MODULE_PREFIX	midori-platform.h	43;"	d
MIDORI_MOD_BACKGROUND	midori-platform.h	23;"	d
MIDORI_MOD_NEW_TAB	midori-platform.h	22;"	d
MIDORI_MOD_NEW_WINDOW	midori-platform.h	21;"	d
MIDORI_MOD_SCROLL	midori-platform.h	24;"	d
MIDORI_NEW_PAGE_CURRENT	midori-websettings.h	/^    MIDORI_NEW_PAGE_CURRENT$/;"	e	enum:__anon23
MIDORI_NEW_PAGE_TAB	midori-websettings.h	/^    MIDORI_NEW_PAGE_TAB,$/;"	e	enum:__anon23
MIDORI_NEW_PAGE_WINDOW	midori-websettings.h	/^    MIDORI_NEW_PAGE_WINDOW,$/;"	e	enum:__anon23
MIDORI_NEW_VIEW_BACKGROUND	midori-view.h	/^    MIDORI_NEW_VIEW_BACKGROUND,$/;"	e	enum:__anon13
MIDORI_NEW_VIEW_TAB	midori-view.h	/^    MIDORI_NEW_VIEW_TAB,$/;"	e	enum:__anon13
MIDORI_NEW_VIEW_WINDOW	midori-view.h	/^    MIDORI_NEW_VIEW_WINDOW$/;"	e	enum:__anon13
MIDORI_PANED_ACTION	midori-panedaction.h	21;"	d
MIDORI_PANED_ACTION_CLASS	midori-panedaction.h	23;"	d
MIDORI_PANED_ACTION_GET_CLASS	midori-panedaction.h	29;"	d
MIDORI_PANEL	midori-panel.h	25;"	d
MIDORI_PANEL_CLASS	midori-panel.h	27;"	d
MIDORI_PANEL_GET_CLASS	midori-panel.h	33;"	d
MIDORI_PARAM_DELAY_SAVING	midori-websettings.h	37;"	d
MIDORI_PREFERENCES	midori-preferences.h	23;"	d
MIDORI_PREFERENCES_CLASS	midori-preferences.h	25;"	d
MIDORI_PREFERENCES_GET_CLASS	midori-preferences.h	31;"	d
MIDORI_PROXY_AUTOMATIC	midori-websettings.h	/^    MIDORI_PROXY_AUTOMATIC,$/;"	e	enum:__anon25
MIDORI_PROXY_HTTP	midori-websettings.h	/^    MIDORI_PROXY_HTTP,$/;"	e	enum:__anon25
MIDORI_PROXY_NONE	midori-websettings.h	/^    MIDORI_PROXY_NONE$/;"	e	enum:__anon25
MIDORI_SEARCH_ACTION	midori-searchaction.h	21;"	d
MIDORI_SEARCH_ACTION_CLASS	midori-searchaction.h	23;"	d
MIDORI_SEARCH_ACTION_GET_CLASS	midori-searchaction.h	29;"	d
MIDORI_SECURITY_NONE	midori-view.h	/^    MIDORI_SECURITY_NONE, \/* The connection is neither encrypted nor verified. *\/$/;"	e	enum:__anon14
MIDORI_SECURITY_TRUSTED	midori-view.h	/^    MIDORI_SECURITY_TRUSTED \/* The security is validated and trusted. *\/$/;"	e	enum:__anon14
MIDORI_SECURITY_UNKNOWN	midori-view.h	/^    MIDORI_SECURITY_UNKNOWN, \/* The security is unknown, due to lack of validation. *\/$/;"	e	enum:__anon14
MIDORI_STARTUP_BLANK_PAGE	midori-websettings.h	/^    MIDORI_STARTUP_BLANK_PAGE, \/* One blank tab or speed dial is opened *\/$/;"	e	enum:__anon21
MIDORI_STARTUP_DELAYED_PAGES	midori-websettings.h	/^    MIDORI_STARTUP_DELAYED_PAGES \/* The session is saved, loading pages is delayed *\/$/;"	e	enum:__anon21
MIDORI_STARTUP_HOMEPAGE	midori-websettings.h	/^    MIDORI_STARTUP_HOMEPAGE, \/* One homepage tab is opened *\/$/;"	e	enum:__anon21
MIDORI_STARTUP_LAST_OPEN_PAGES	midori-websettings.h	/^    MIDORI_STARTUP_LAST_OPEN_PAGES, \/* The session is loaded and saved *\/$/;"	e	enum:__anon21
MIDORI_TOOLBAR_BOTH	midori-websettings.h	/^    MIDORI_TOOLBAR_BOTH,$/;"	e	enum:__anon24
MIDORI_TOOLBAR_BOTH_HORIZ	midori-websettings.h	/^    MIDORI_TOOLBAR_BOTH_HORIZ$/;"	e	enum:__anon24
MIDORI_TOOLBAR_DEFAULT	midori-websettings.h	/^    MIDORI_TOOLBAR_DEFAULT,$/;"	e	enum:__anon24
MIDORI_TOOLBAR_ICONS	midori-websettings.h	/^    MIDORI_TOOLBAR_ICONS,$/;"	e	enum:__anon24
MIDORI_TOOLBAR_SMALL_ICONS	midori-websettings.h	/^    MIDORI_TOOLBAR_SMALL_ICONS,$/;"	e	enum:__anon24
MIDORI_TOOLBAR_TEXT	midori-websettings.h	/^    MIDORI_TOOLBAR_TEXT,$/;"	e	enum:__anon24
MIDORI_TYPE_APP	midori-app.h	22;"	d
MIDORI_TYPE_BROWSER	midori-browser.h	25;"	d
MIDORI_TYPE_DUMMY_VIEWABLE	midori-panel.c	953;"	d	file:
MIDORI_TYPE_EXTENSION	midori-extension.h	19;"	d
MIDORI_TYPE_IDENTITY	midori-websettings.h	154;"	d
MIDORI_TYPE_LOAD_STATUS	midori-view.h	25;"	d
MIDORI_TYPE_LOCATION_ACTION	midori-locationaction.h	20;"	d
MIDORI_TYPE_NEW_PAGE	midori-websettings.h	108;"	d
MIDORI_TYPE_NEW_VIEW	midori-view.h	37;"	d
MIDORI_TYPE_PANED_ACTION	midori-panedaction.h	19;"	d
MIDORI_TYPE_PANEL	midori-panel.h	23;"	d
MIDORI_TYPE_PREFERENCES	midori-preferences.h	21;"	d
MIDORI_TYPE_PREFERRED_ENCODING	midori-websettings.h	95;"	d
MIDORI_TYPE_PROXY	midori-websettings.h	137;"	d
MIDORI_TYPE_SEARCH_ACTION	midori-searchaction.h	19;"	d
MIDORI_TYPE_SECURITY	midori-view.h	53;"	d
MIDORI_TYPE_STARTUP	midori-websettings.h	78;"	d
MIDORI_TYPE_TOOLBAR_STYLE	midori-websettings.h	124;"	d
MIDORI_TYPE_VIEW	midori-view.h	40;"	d
MIDORI_TYPE_VIEWABLE	midori-viewable.h	19;"	d
MIDORI_TYPE_WEB_SETTINGS	midori-websettings.h	21;"	d
MIDORI_TYPE_WINDOW_STATE	midori-websettings.h	63;"	d
MIDORI_UNIQUE_COMMAND	midori-app.c	53;"	d	file:
MIDORI_URI_FILTER_H	midori-uri-filter.h	2;"	d
MIDORI_VIEW	midori-view.h	56;"	d
MIDORI_VIEWABLE	midori-viewable.h	21;"	d
MIDORI_VIEWABLE_GET_IFACE	midori-viewable.h	25;"	d
MIDORI_VIEW_CLASS	midori-view.h	58;"	d
MIDORI_VIEW_GET_CLASS	midori-view.h	64;"	d
MIDORI_WEB_SETTINGS	midori-websettings.h	23;"	d
MIDORI_WEB_SETTINGS_CLASS	midori-websettings.h	25;"	d
MIDORI_WEB_SETTINGS_GET_CLASS	midori-websettings.h	31;"	d
MIDORI_WINDOW_FULLSCREEN	midori-websettings.h	/^    MIDORI_WINDOW_FULLSCREEN,$/;"	e	enum:__anon20
MIDORI_WINDOW_MAXIMIZED	midori-websettings.h	/^    MIDORI_WINDOW_MAXIMIZED,$/;"	e	enum:__anon20
MIDORI_WINDOW_MINIMIZED	midori-websettings.h	/^    MIDORI_WINDOW_MINIMIZED,$/;"	e	enum:__anon20
MIDORI_WINDOW_NORMAL	midori-websettings.h	/^    MIDORI_WINDOW_NORMAL,$/;"	e	enum:__anon20
MOVE_TAB	midori-browser.c	/^    MOVE_TAB,$/;"	e	enum:__anon8	file:
MidoriApp	midori-app.h	/^typedef struct _MidoriApp                MidoriApp;$/;"	t	typeref:struct:_MidoriApp
MidoriAppClass	midori-app.h	/^typedef struct _MidoriAppClass           MidoriAppClass;$/;"	t	typeref:struct:_MidoriAppClass
MidoriAppInstance	midori-app.c	/^    typedef gint MidoriAppInstance;$/;"	t	file:
MidoriAppInstance	midori-app.c	/^    typedef gpointer MidoriAppInstance;$/;"	t	file:
MidoriAppInstance	midori-app.c	/^    typedef osso_context_t* MidoriAppInstance;$/;"	t	file:
MidoriAppInstanceNull	midori-app.c	42;"	d	file:
MidoriAppInstanceNull	midori-app.c	45;"	d	file:
MidoriAppInstanceNull	midori-app.c	56;"	d	file:
MidoriBrowser	midori-browser.h	/^typedef struct _MidoriBrowser                MidoriBrowser;$/;"	t	typeref:struct:_MidoriBrowser
MidoriBrowserClass	midori-browser.h	/^typedef struct _MidoriBrowserClass           MidoriBrowserClass;$/;"	t	typeref:struct:_MidoriBrowserClass
MidoriDummyViewable	midori-panel.c	/^} MidoriDummyViewable;$/;"	t	typeref:struct:__anon29	file:
MidoriDummyViewableClass	midori-panel.c	/^}  MidoriDummyViewableClass;$/;"	t	typeref:struct:__anon30	file:
MidoriExtension	midori-extension.h	/^typedef struct _MidoriExtension                MidoriExtension;$/;"	t	typeref:struct:_MidoriExtension
MidoriExtensionClass	midori-extension.h	/^typedef struct _MidoriExtensionClass           MidoriExtensionClass;$/;"	t	typeref:struct:_MidoriExtensionClass
MidoriExtensionPrivate	midori-extension.h	/^typedef struct _MidoriExtensionPrivate         MidoriExtensionPrivate;$/;"	t	typeref:struct:_MidoriExtensionPrivate
MidoriIdentity	midori-websettings.h	/^} MidoriIdentity;$/;"	t	typeref:enum:__anon26
MidoriInactivityTimeout	main.c	/^} MidoriInactivityTimeout;$/;"	t	typeref:struct:__anon1	file:
MidoriLoadStatus	midori-view.h	24;"	d
MidoriLocationAction	midori-locationaction.h	/^typedef struct _MidoriLocationAction         MidoriLocationAction;$/;"	t	typeref:struct:_MidoriLocationAction
MidoriLocationActionClass	midori-locationaction.h	/^typedef struct _MidoriLocationActionClass    MidoriLocationActionClass;$/;"	t	typeref:struct:_MidoriLocationActionClass
MidoriNewPage	midori-websettings.h	/^} MidoriNewPage;$/;"	t	typeref:enum:__anon23
MidoriNewView	midori-view.h	/^} MidoriNewView;$/;"	t	typeref:enum:__anon13
MidoriPanedAction	midori-panedaction.h	/^typedef struct _MidoriPanedAction                  MidoriPanedAction;$/;"	t	typeref:struct:_MidoriPanedAction
MidoriPanedActionClass	midori-panedaction.h	/^typedef struct _MidoriPanedActionClass             MidoriPanedActionClass;$/;"	t	typeref:struct:_MidoriPanedActionClass
MidoriPanel	midori-panel.h	/^typedef struct _MidoriPanel                MidoriPanel;$/;"	t	typeref:struct:_MidoriPanel
MidoriPanelClass	midori-panel.h	/^typedef struct _MidoriPanelClass           MidoriPanelClass;$/;"	t	typeref:struct:_MidoriPanelClass
MidoriPreferences	midori-preferences.h	/^typedef struct _MidoriPreferences                MidoriPreferences;$/;"	t	typeref:struct:_MidoriPreferences
MidoriPreferencesClass	midori-preferences.h	/^typedef struct _MidoriPreferencesClass           MidoriPreferencesClass;$/;"	t	typeref:struct:_MidoriPreferencesClass
MidoriPreferredEncoding	midori-websettings.h	/^} MidoriPreferredEncoding;$/;"	t	typeref:enum:__anon22
MidoriProxy	midori-websettings.h	/^} MidoriProxy;$/;"	t	typeref:enum:__anon25
MidoriSearchAction	midori-searchaction.h	/^typedef struct _MidoriSearchAction         MidoriSearchAction;$/;"	t	typeref:struct:_MidoriSearchAction
MidoriSearchActionClass	midori-searchaction.h	/^typedef struct _MidoriSearchActionClass    MidoriSearchActionClass;$/;"	t	typeref:struct:_MidoriSearchActionClass
MidoriSecurity	midori-view.h	/^} MidoriSecurity;$/;"	t	typeref:enum:__anon14
MidoriStartup	midori-websettings.h	/^} MidoriStartup;$/;"	t	typeref:enum:__anon21
MidoriToolbarStyle	midori-websettings.h	/^} MidoriToolbarStyle;$/;"	t	typeref:enum:__anon24
MidoriView	midori-view.h	/^typedef struct _MidoriView                MidoriView;$/;"	t	typeref:struct:_MidoriView
MidoriViewClass	midori-view.h	/^typedef struct _MidoriViewClass           MidoriViewClass;$/;"	t	typeref:struct:_MidoriViewClass
MidoriViewable	midori-viewable.h	/^typedef struct _MidoriViewable                MidoriViewable;$/;"	t	typeref:struct:_MidoriViewable
MidoriViewableIface	midori-viewable.h	/^typedef struct _MidoriViewableIface           MidoriViewableIface;$/;"	t	typeref:struct:_MidoriViewableIface
MidoriWebSettings	midori-websettings.h	/^typedef struct _MidoriWebSettings                MidoriWebSettings;$/;"	t	typeref:struct:_MidoriWebSettings
MidoriWebSettingsClass	midori-websettings.h	/^typedef struct _MidoriWebSettingsClass           MidoriWebSettingsClass;$/;"	t	typeref:struct:_MidoriWebSettingsClass
MidoriWindowState	midori-websettings.h	/^} MidoriWindowState;$/;"	t	typeref:enum:__anon20
NEW_TAB	midori-view.c	/^    NEW_TAB,$/;"	e	enum:__anon5	file:
NEW_VIEW	midori-view.c	/^    NEW_VIEW,$/;"	e	enum:__anon5	file:
NEW_WINDOW	midori-browser.c	/^    NEW_WINDOW,$/;"	e	enum:__anon8	file:
NEW_WINDOW	midori-view.c	/^    NEW_WINDOW,$/;"	e	enum:__anon5	file:
NOTIFY_CHECK_VERSION	midori-app.c	63;"	d	file:
NUM	midori-uri-filter.h	6;"	d
N_COLS	midori-locationaction.c	/^    N_COLS$/;"	e	enum:__anon12	file:
OPEN_PREFERENCES	midori-extension.c	/^    OPEN_PREFERENCES,$/;"	e	enum:__anon36	file:
PAGE_NEW	midori-preferences.c	284;"	d	file:
POPULATE_OPTION_MENU	midori-viewable.c	/^    POPULATE_OPTION_MENU,$/;"	e	enum:__anon2	file:
POPULATE_TOOLBAR_MENU	midori-browser.c	/^    POPULATE_TOOLBAR_MENU,$/;"	e	enum:__anon8	file:
POPULATE_TOOL_MENU	midori-browser.c	/^    POPULATE_TOOL_MENU,$/;"	e	enum:__anon8	file:
PROP_0	gtkiconentry.c	/^  PROP_0,$/;"	e	enum:__anon18	file:
PROP_0	midori-extension.c	/^    PROP_0,$/;"	e	enum:__anon35	file:
PROP_0	midori-preferences.c	/^    PROP_0,$/;"	e	enum:__anon3	file:
PROP_0	midori-view.c	/^    PROP_0,$/;"	e	enum:__anon4	file:
PROP_AUTHORS	midori-extension.c	/^    PROP_AUTHORS,$/;"	e	enum:__anon35	file:
PROP_DESCRIPTION	midori-extension.c	/^    PROP_DESCRIPTION,$/;"	e	enum:__anon35	file:
PROP_GICON_PRIMARY	gtkiconentry.c	/^  PROP_GICON_PRIMARY,$/;"	e	enum:__anon18	file:
PROP_GICON_SECONDARY	gtkiconentry.c	/^  PROP_GICON_SECONDARY,$/;"	e	enum:__anon18	file:
PROP_ICON	midori-view.c	/^    PROP_ICON,$/;"	e	enum:__anon4	file:
PROP_ICON_NAME_PRIMARY	gtkiconentry.c	/^  PROP_ICON_NAME_PRIMARY,$/;"	e	enum:__anon18	file:
PROP_ICON_NAME_SECONDARY	gtkiconentry.c	/^  PROP_ICON_NAME_SECONDARY,$/;"	e	enum:__anon18	file:
PROP_LOAD_STATUS	midori-view.c	/^    PROP_LOAD_STATUS,$/;"	e	enum:__anon4	file:
PROP_MIME_TYPE	midori-view.c	/^    PROP_MIME_TYPE,$/;"	e	enum:__anon4	file:
PROP_MINIMIZED	midori-view.c	/^    PROP_MINIMIZED,$/;"	e	enum:__anon4	file:
PROP_NAME	midori-extension.c	/^    PROP_NAME,$/;"	e	enum:__anon35	file:
PROP_NEWS_FEEDS	midori-view.c	/^    PROP_NEWS_FEEDS,$/;"	e	enum:__anon4	file:
PROP_PIXBUF_PRIMARY	gtkiconentry.c	/^  PROP_PIXBUF_PRIMARY,$/;"	e	enum:__anon18	file:
PROP_PIXBUF_SECONDARY	gtkiconentry.c	/^  PROP_PIXBUF_SECONDARY,$/;"	e	enum:__anon18	file:
PROP_PROGRESS	midori-view.c	/^    PROP_PROGRESS,$/;"	e	enum:__anon4	file:
PROP_SECURITY	midori-view.c	/^    PROP_SECURITY,$/;"	e	enum:__anon4	file:
PROP_SENSITIVITY_PRIMARY	gtkiconentry.c	/^  PROP_SENSITIVITY_PRIMARY,$/;"	e	enum:__anon18	file:
PROP_SENSITIVITY_SECONDARY	gtkiconentry.c	/^  PROP_SENSITIVITY_SECONDARY$/;"	e	enum:__anon18	file:
PROP_SETTINGS	midori-preferences.c	/^    PROP_SETTINGS$/;"	e	enum:__anon3	file:
PROP_SETTINGS	midori-view.c	/^    PROP_SETTINGS$/;"	e	enum:__anon4	file:
PROP_STATUSBAR_TEXT	midori-view.c	/^    PROP_STATUSBAR_TEXT,$/;"	e	enum:__anon4	file:
PROP_STOCK_PRIMARY	gtkiconentry.c	/^  PROP_STOCK_PRIMARY,$/;"	e	enum:__anon18	file:
PROP_STOCK_SECONDARY	gtkiconentry.c	/^  PROP_STOCK_SECONDARY,$/;"	e	enum:__anon18	file:
PROP_TITLE	midori-view.c	/^    PROP_TITLE,$/;"	e	enum:__anon4	file:
PROP_URI	midori-view.c	/^    PROP_URI,$/;"	e	enum:__anon4	file:
PROP_VERSION	midori-extension.c	/^    PROP_VERSION,$/;"	e	enum:__anon35	file:
PROP_WEBSITE	midori-extension.c	/^    PROP_WEBSITE$/;"	e	enum:__anon35	file:
PROP_ZOOM_LEVEL	midori-view.c	/^    PROP_ZOOM_LEVEL,$/;"	e	enum:__anon4	file:
P_	gtkiconentry.c	61;"	d	file:
QUIT	midori-app.c	/^    QUIT,$/;"	e	enum:__anon9	file:
QUIT	midori-browser.c	/^    QUIT,$/;"	e	enum:__anon8	file:
REMOVE_BROWSER	midori-app.c	/^    REMOVE_BROWSER,$/;"	e	enum:__anon9	file:
REMOVE_TAB	midori-browser.c	/^    REMOVE_TAB,$/;"	e	enum:__anon8	file:
RESET_URI	midori-locationaction.c	/^    RESET_URI,$/;"	e	enum:__anon11	file:
SAVE_AS	midori-view.c	/^    SAVE_AS,$/;"	e	enum:__anon5	file:
SEARCH_TEXT	midori-view.c	/^    SEARCH_TEXT,$/;"	e	enum:__anon5	file:
SECONDARY_ICON_RELEASED	midori-locationaction.c	/^    SECONDARY_ICON_RELEASED,$/;"	e	enum:__anon11	file:
SEND_NOTIFICATION	midori-browser.c	/^    SEND_NOTIFICATION,$/;"	e	enum:__anon8	file:
SHOW_PREFERENCES	midori-browser.c	/^    SHOW_PREFERENCES,$/;"	e	enum:__anon8	file:
SOCKET_IS_VALID	socket.c	71;"	d	file:
SOCKET_IS_VALID	socket.c	74;"	d	file:
SOKOKE_DESKTOP_OSX	sokoke.c	/^    SOKOKE_DESKTOP_OSX,$/;"	e	enum:__anon10	file:
SOKOKE_DESKTOP_UNKNOWN	sokoke.c	/^    SOKOKE_DESKTOP_UNKNOWN$/;"	e	enum:__anon10	file:
SOKOKE_DESKTOP_UNTESTED	sokoke.c	/^    SOKOKE_DESKTOP_UNTESTED,$/;"	e	enum:__anon10	file:
SOKOKE_DESKTOP_XFCE	sokoke.c	/^    SOKOKE_DESKTOP_XFCE,$/;"	e	enum:__anon10	file:
SPANNED_ADD	midori-preferences.c	292;"	d	file:
STOCK_BOOKMARK	midori-stock.h	20;"	d
STOCK_BOOKMARKS	midori-stock.h	21;"	d
STOCK_BOOKMARKS	midori-stock.h	45;"	d
STOCK_BOOKMARKS	midori-stock.h	46;"	d
STOCK_BOOKMARK_ADD	midori-stock.h	33;"	d
STOCK_CONSOLE	midori-stock.h	22;"	d
STOCK_EXTENSION	midori-stock.h	23;"	d
STOCK_EXTENSIONS	midori-stock.h	24;"	d
STOCK_HISTORY	midori-stock.h	25;"	d
STOCK_HOMEPAGE	midori-stock.h	34;"	d
STOCK_IMAGE	midori-stock.h	35;"	d
STOCK_NETWORK_OFFLINE	midori-stock.h	36;"	d
STOCK_NEWS_FEED	midori-stock.h	27;"	d
STOCK_NEWS_FEED	midori-stock.h	47;"	d
STOCK_NEWS_FEED	midori-stock.h	48;"	d
STOCK_PLUGINS	midori-stock.h	31;"	d
STOCK_SCRIPT	midori-stock.h	37;"	d
STOCK_SCRIPTS	midori-stock.h	38;"	d
STOCK_SEND	midori-stock.h	39;"	d
STOCK_STYLE	midori-stock.h	28;"	d
STOCK_TAB_NEW	midori-stock.h	40;"	d
STOCK_TRANSFER	midori-stock.h	29;"	d
STOCK_TRANSFERS	midori-stock.h	30;"	d
STOCK_USER_TRASH	midori-stock.h	41;"	d
STOCK_WEB_BROWSER	midori-stock.h	26;"	d
STOCK_WEB_BROWSER	midori-stock.h	49;"	d
STOCK_WEB_BROWSER	midori-stock.h	50;"	d
STOCK_WINDOW_NEW	midori-stock.h	42;"	d
STR_NON_NULL	midori-searchaction.c	/^STR_NON_NULL (const gchar* string)$/;"	f	file:	signature:(const gchar* string)
STYLE_COL	midori-locationaction.c	/^    STYLE_COL,$/;"	e	enum:__anon12	file:
SUBMIT	midori-searchaction.c	/^    SUBMIT,$/;"	e	enum:__anon37	file:
SUBMIT_URI	midori-locationaction.c	/^    SUBMIT_URI,$/;"	e	enum:__anon11	file:
SWITCH_PAGE	midori-panel.c	/^    SWITCH_PAGE,$/;"	e	enum:__anon28	file:
SockAddrData	socket.c	/^typedef struct _SockAddrData	SockAddrData;$/;"	t	typeref:struct:_SockAddrData	file:
SockAddrFunc	socket.c	/^typedef gint (*SockAddrFunc)	(GList		*addr_list,$/;"	t	file:
SockConnectData	socket.c	/^typedef struct _SockConnectData	SockConnectData;$/;"	t	typeref:struct:_SockConnectData	file:
SockConnectFunc	socket.h	/^typedef gint (*SockConnectFunc)		(SockInfo	*sock,$/;"	t
SockDesc	socket.c	70;"	d	file:
SockDesc	socket.c	73;"	d	file:
SockFunc	socket.h	/^typedef gboolean (*SockFunc)		(SockInfo	*sock,$/;"	t
SockInfo	socket.h	/^typedef struct _SockInfo	SockInfo;$/;"	t	typeref:struct:_SockInfo
SockLookupData	socket.c	/^typedef struct _SockLookupData	SockLookupData;$/;"	t	typeref:struct:_SockLookupData	file:
SockSource	socket.c	/^typedef struct _SockSource	SockSource;$/;"	t	typeref:struct:_SockSource	file:
SokokeDesktop	sokoke.c	/^} SokokeDesktop;$/;"	t	typeref:enum:__anon10	file:
SokokePrivacyItem	sokoke.h	/^} SokokePrivacyItem;$/;"	t	typeref:struct:__anon15
TITLE_COL	midori-locationaction.c	/^    TITLE_COL,$/;"	e	enum:__anon12	file:
URI_COL	midori-locationaction.c	/^    URI_COL,$/;"	e	enum:__anon12	file:
VISIBLE_COL	midori-locationaction.c	/^    VISIBLE_COL,$/;"	e	enum:__anon12	file:
VISITS_COL	midori-locationaction.c	/^    VISITS_COL,$/;"	e	enum:__anon12	file:
YALIGN_COL	midori-locationaction.c	/^    YALIGN_COL,$/;"	e	enum:__anon12	file:
_GTK_IMAGE_GICON	gtkiconentry.c	44;"	d	file:
_GTK_IMAGE_GICON	gtkiconentry.c	46;"	d	file:
_GtkIconEntryPrivate	gtkiconentry.c	/^struct _GtkIconEntryPrivate$/;"	s	file:
_GtkIconEntryPrivate::fraction	gtkiconentry.c	/^  gdouble fraction;$/;"	m	struct:_GtkIconEntryPrivate	file:	access:public
_GtkIconEntryPrivate::icon_released_id	gtkiconentry.c	/^  gulong icon_released_id;$/;"	m	struct:_GtkIconEntryPrivate	file:	access:public
_GtkIconEntryPrivate::icons	gtkiconentry.c	/^  EntryIconInfo icons[MAX_ICONS];$/;"	m	struct:_GtkIconEntryPrivate	file:	access:public
_MidoriApp	midori-app.c	/^struct _MidoriApp$/;"	s	file:
_MidoriApp::accel_group	midori-app.c	/^    GtkAccelGroup* accel_group;$/;"	m	struct:_MidoriApp	file:	access:public
_MidoriApp::bookmarks	midori-app.c	/^    KatzeArray* bookmarks;$/;"	m	struct:_MidoriApp	file:	access:public
_MidoriApp::browser	midori-app.c	/^    MidoriBrowser* browser;$/;"	m	struct:_MidoriApp	file:	access:public
_MidoriApp::browsers	midori-app.c	/^    KatzeArray* browsers;$/;"	m	struct:_MidoriApp	file:	access:public
_MidoriApp::extensions	midori-app.c	/^    KatzeArray* extensions;$/;"	m	struct:_MidoriApp	file:	access:public
_MidoriApp::history	midori-app.c	/^    KatzeArray* history;$/;"	m	struct:_MidoriApp	file:	access:public
_MidoriApp::instance	midori-app.c	/^    MidoriAppInstance instance;$/;"	m	struct:_MidoriApp	file:	access:public
_MidoriApp::name	midori-app.c	/^    gchar* name;$/;"	m	struct:_MidoriApp	file:	access:public
_MidoriApp::parent_instance	midori-app.c	/^    GObject parent_instance;$/;"	m	struct:_MidoriApp	file:	access:public
_MidoriApp::program_notify_send	midori-app.c	/^    gchar* program_notify_send;$/;"	m	struct:_MidoriApp	file:	access:public
_MidoriApp::search_engines	midori-app.c	/^    KatzeArray* search_engines;$/;"	m	struct:_MidoriApp	file:	access:public
_MidoriApp::settings	midori-app.c	/^    MidoriWebSettings* settings;$/;"	m	struct:_MidoriApp	file:	access:public
_MidoriApp::speeddial	midori-app.c	/^    GKeyFile* speeddial;$/;"	m	struct:_MidoriApp	file:	access:public
_MidoriApp::trash	midori-app.c	/^    KatzeArray* trash;$/;"	m	struct:_MidoriApp	file:	access:public
_MidoriAppClass	midori-app.c	/^struct _MidoriAppClass$/;"	s	file:
_MidoriAppClass::add_browser	midori-app.c	/^    (*add_browser)            (MidoriApp*     app,$/;"	m	struct:_MidoriAppClass	file:	access:public
_MidoriAppClass::parent_class	midori-app.c	/^    GObjectClass parent_class;$/;"	m	struct:_MidoriAppClass	file:	access:public
_MidoriAppClass::quit	midori-app.c	/^    (*quit)                   (MidoriApp*     app);$/;"	m	struct:_MidoriAppClass	file:	access:public
_MidoriAppClass::remove_browser	midori-app.c	/^    (*remove_browser)         (MidoriApp*     app,$/;"	m	struct:_MidoriAppClass	file:	access:public
_MidoriBrowser	midori-browser.c	/^struct _MidoriBrowser$/;"	s	file:
_MidoriBrowser::action_group	midori-browser.c	/^    GtkActionGroup* action_group;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::alloc_timeout	midori-browser.c	/^    guint alloc_timeout;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::bookmarkbar	midori-browser.c	/^    GtkWidget* bookmarkbar;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::bookmarks	midori-browser.c	/^    KatzeArray* bookmarks;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::clear_private_data	midori-browser.c	/^    gint clear_private_data;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::find	midori-browser.c	/^    GtkWidget* find;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::history	midori-browser.c	/^    KatzeArray* history;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::inspector	midori-browser.c	/^    GtkWidget* inspector;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::inspector_view	midori-browser.c	/^    GtkWidget* inspector_view;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::last_tab_size	midori-browser.c	/^    gint last_tab_size;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::last_web_search	midori-browser.c	/^    guint last_web_search;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::last_window_height	midori-browser.c	/^    gint last_window_width, last_window_height;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::last_window_width	midori-browser.c	/^    gint last_window_width, last_window_height;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::location_entry_search	midori-browser.c	/^    gchar* location_entry_search;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::maximum_history_age	midori-browser.c	/^    guint maximum_history_age;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::menu_tools	midori-browser.c	/^    GtkWidget* menu_tools;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::menubar	midori-browser.c	/^    GtkWidget* menubar;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::navigationbar	midori-browser.c	/^    GtkWidget* navigationbar;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::news_aggregator	midori-browser.c	/^    gchar* news_aggregator;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::notebook	midori-browser.c	/^    GtkWidget* notebook;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::panel	midori-browser.c	/^    GtkWidget* panel;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::panel_timeout	midori-browser.c	/^    guint panel_timeout;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::parent_instance	midori-browser.c	/^    HildonWindow parent_instance;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::proxy_array	midori-browser.c	/^    KatzeArray* proxy_array;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::search_engines	midori-browser.c	/^    KatzeArray* search_engines;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::settings	midori-browser.c	/^    MidoriWebSettings* settings;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::show_navigationbar	midori-browser.c	/^    gboolean show_navigationbar;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::show_statusbar	midori-browser.c	/^    gboolean show_statusbar;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::show_tabs	midori-browser.c	/^    gboolean show_tabs;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::speeddial	midori-browser.c	/^    GKeyFile* speeddial;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::statusbar	midori-browser.c	/^    GtkWidget* statusbar;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::statusbar_contents	midori-browser.c	/^    GtkWidget* statusbar_contents;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::statusbar_text	midori-browser.c	/^    gchar* statusbar_text;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::throbber	midori-browser.c	/^    GtkWidget* throbber;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::transferbar	midori-browser.c	/^    GtkWidget* transferbar;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowser::trash	midori-browser.c	/^    KatzeArray* trash;$/;"	m	struct:_MidoriBrowser	file:	access:public
_MidoriBrowserClass	midori-browser.h	/^struct _MidoriBrowserClass$/;"	s
_MidoriBrowserClass::activate_action	midori-browser.h	/^    (*activate_action)         (MidoriBrowser*       browser,$/;"	m	struct:_MidoriBrowserClass	access:public
_MidoriBrowserClass::add_tab	midori-browser.h	/^    (*add_tab)                 (MidoriBrowser*       browser,$/;"	m	struct:_MidoriBrowserClass	access:public
_MidoriBrowserClass::element_motion	midori-browser.h	/^    (*element_motion)          (MidoriBrowser*       browser,$/;"	m	struct:_MidoriBrowserClass	access:public
_MidoriBrowserClass::new_window	midori-browser.h	/^    (*new_window)              (MidoriBrowser*       browser,$/;"	m	struct:_MidoriBrowserClass	access:public
_MidoriBrowserClass::parent_class	midori-browser.h	/^    HildonWindowClass parent_class;$/;"	m	struct:_MidoriBrowserClass	access:public
_MidoriBrowserClass::quit	midori-browser.h	/^    (*quit)                    (MidoriBrowser*       browser);$/;"	m	struct:_MidoriBrowserClass	access:public
_MidoriBrowserClass::remove_tab	midori-browser.h	/^    (*remove_tab)              (MidoriBrowser*       browser,$/;"	m	struct:_MidoriBrowserClass	access:public
_MidoriBrowserClass::statusbar_text_changed	midori-browser.h	/^    (*statusbar_text_changed)  (MidoriBrowser*       browser,$/;"	m	struct:_MidoriBrowserClass	access:public
_MidoriBrowserClass::window_object_cleared	midori-browser.h	/^    (*window_object_cleared)   (MidoriBrowser*       browser,$/;"	m	struct:_MidoriBrowserClass	access:public
_MidoriExtension	midori-extension.h	/^struct _MidoriExtension$/;"	s
_MidoriExtension::parent_instance	midori-extension.h	/^    GObject parent_instance;$/;"	m	struct:_MidoriExtension	access:public
_MidoriExtension::priv	midori-extension.h	/^    MidoriExtensionPrivate* priv;$/;"	m	struct:_MidoriExtension	access:public
_MidoriExtensionClass	midori-extension.h	/^struct _MidoriExtensionClass$/;"	s
_MidoriExtensionClass::parent_class	midori-extension.h	/^    GObjectClass parent_class;$/;"	m	struct:_MidoriExtensionClass	access:public
_MidoriExtensionPrivate	midori-extension.c	/^struct _MidoriExtensionPrivate$/;"	s	file:
_MidoriExtensionPrivate::active	midori-extension.c	/^    gint active;$/;"	m	struct:_MidoriExtensionPrivate	file:	access:public
_MidoriExtensionPrivate::app	midori-extension.c	/^    MidoriApp* app;$/;"	m	struct:_MidoriExtensionPrivate	file:	access:public
_MidoriExtensionPrivate::authors	midori-extension.c	/^    gchar* authors;$/;"	m	struct:_MidoriExtensionPrivate	file:	access:public
_MidoriExtensionPrivate::config_dir	midori-extension.c	/^    gchar* config_dir;$/;"	m	struct:_MidoriExtensionPrivate	file:	access:public
_MidoriExtensionPrivate::description	midori-extension.c	/^    gchar* description;$/;"	m	struct:_MidoriExtensionPrivate	file:	access:public
_MidoriExtensionPrivate::key_file	midori-extension.c	/^    GKeyFile* key_file;$/;"	m	struct:_MidoriExtensionPrivate	file:	access:public
_MidoriExtensionPrivate::lsettings	midori-extension.c	/^    GList* lsettings;$/;"	m	struct:_MidoriExtensionPrivate	file:	access:public
_MidoriExtensionPrivate::name	midori-extension.c	/^    gchar* name;$/;"	m	struct:_MidoriExtensionPrivate	file:	access:public
_MidoriExtensionPrivate::settings	midori-extension.c	/^    GHashTable* settings;$/;"	m	struct:_MidoriExtensionPrivate	file:	access:public
_MidoriExtensionPrivate::version	midori-extension.c	/^    gchar* version;$/;"	m	struct:_MidoriExtensionPrivate	file:	access:public
_MidoriExtensionPrivate::website	midori-extension.c	/^    gchar* website;$/;"	m	struct:_MidoriExtensionPrivate	file:	access:public
_MidoriLocationAction	midori-locationaction.c	/^struct _MidoriLocationAction$/;"	s	file:
_MidoriLocationAction::completion_index	midori-locationaction.c	/^    gint completion_index;$/;"	m	struct:_MidoriLocationAction	file:	access:public
_MidoriLocationAction::completion_model	midori-locationaction.c	/^    GtkTreeModel* completion_model;$/;"	m	struct:_MidoriLocationAction	file:	access:public
_MidoriLocationAction::completion_timeout	midori-locationaction.c	/^    guint completion_timeout;$/;"	m	struct:_MidoriLocationAction	file:	access:public
_MidoriLocationAction::default_icon	midori-locationaction.c	/^    GdkPixbuf* default_icon;$/;"	m	struct:_MidoriLocationAction	file:	access:public
_MidoriLocationAction::entry	midori-locationaction.c	/^    GtkWidget* entry;$/;"	m	struct:_MidoriLocationAction	file:	access:public
_MidoriLocationAction::history	midori-locationaction.c	/^    KatzeArray* history;$/;"	m	struct:_MidoriLocationAction	file:	access:public
_MidoriLocationAction::key	midori-locationaction.c	/^    gchar* key;$/;"	m	struct:_MidoriLocationAction	file:	access:public
_MidoriLocationAction::parent_instance	midori-locationaction.c	/^    GtkAction parent_instance;$/;"	m	struct:_MidoriLocationAction	file:	access:public
_MidoriLocationAction::popup	midori-locationaction.c	/^    GtkWidget* popup;$/;"	m	struct:_MidoriLocationAction	file:	access:public
_MidoriLocationAction::progress	midori-locationaction.c	/^    gdouble progress;$/;"	m	struct:_MidoriLocationAction	file:	access:public
_MidoriLocationAction::search_engines	midori-locationaction.c	/^    KatzeArray* search_engines;$/;"	m	struct:_MidoriLocationAction	file:	access:public
_MidoriLocationAction::secondary_icon	midori-locationaction.c	/^    gchar* secondary_icon;$/;"	m	struct:_MidoriLocationAction	file:	access:public
_MidoriLocationAction::text	midori-locationaction.c	/^    gchar* text;$/;"	m	struct:_MidoriLocationAction	file:	access:public
_MidoriLocationAction::treeview	midori-locationaction.c	/^    GtkWidget* treeview;$/;"	m	struct:_MidoriLocationAction	file:	access:public
_MidoriLocationAction::uri	midori-locationaction.c	/^    gchar* uri;$/;"	m	struct:_MidoriLocationAction	file:	access:public
_MidoriLocationActionClass	midori-locationaction.c	/^struct _MidoriLocationActionClass$/;"	s	file:
_MidoriLocationActionClass::parent_class	midori-locationaction.c	/^    GtkActionClass parent_class;$/;"	m	struct:_MidoriLocationActionClass	file:	access:public
_MidoriPanedAction	midori-panedaction.c	/^struct _MidoriPanedAction$/;"	s	file:
_MidoriPanedAction::child1	midori-panedaction.c	/^    struct _MidoriPanedActionChild child1;$/;"	m	struct:_MidoriPanedAction	typeref:struct:_MidoriPanedAction::_MidoriPanedActionChild	file:	access:public
_MidoriPanedAction::child2	midori-panedaction.c	/^    struct _MidoriPanedActionChild child2;$/;"	m	struct:_MidoriPanedAction	typeref:struct:_MidoriPanedAction::_MidoriPanedActionChild	file:	access:public
_MidoriPanedAction::hpaned	midori-panedaction.c	/^    GtkWidget* hpaned;$/;"	m	struct:_MidoriPanedAction	file:	access:public
_MidoriPanedAction::parent_instance	midori-panedaction.c	/^    GtkAction parent_instance;$/;"	m	struct:_MidoriPanedAction	file:	access:public
_MidoriPanedAction::toolitem	midori-panedaction.c	/^    GtkWidget* toolitem;$/;"	m	struct:_MidoriPanedAction	file:	access:public
_MidoriPanedActionChild	midori-panedaction.c	/^struct _MidoriPanedActionChild$/;"	s	file:
_MidoriPanedActionChild::name	midori-panedaction.c	/^    gchar* name;$/;"	m	struct:_MidoriPanedActionChild	file:	access:public
_MidoriPanedActionChild::resize	midori-panedaction.c	/^    gboolean resize;$/;"	m	struct:_MidoriPanedActionChild	file:	access:public
_MidoriPanedActionChild::shrink	midori-panedaction.c	/^    gboolean shrink;$/;"	m	struct:_MidoriPanedActionChild	file:	access:public
_MidoriPanedActionChild::widget	midori-panedaction.c	/^    GtkWidget* widget;$/;"	m	struct:_MidoriPanedActionChild	file:	access:public
_MidoriPanedActionClass	midori-panedaction.c	/^struct _MidoriPanedActionClass$/;"	s	file:
_MidoriPanedActionClass::parent_class	midori-panedaction.c	/^    GtkActionClass parent_class;$/;"	m	struct:_MidoriPanedActionClass	file:	access:public
_MidoriPanel	midori-panel.c	/^struct _MidoriPanel$/;"	s	file:
_MidoriPanel::action_group	midori-panel.c	/^    GtkActionGroup* action_group;$/;"	m	struct:_MidoriPanel	file:	access:public
_MidoriPanel::button_align	midori-panel.c	/^    GtkToolItem* button_align;$/;"	m	struct:_MidoriPanel	file:	access:public
_MidoriPanel::frame	midori-panel.c	/^    GtkWidget* frame;$/;"	m	struct:_MidoriPanel	file:	access:public
_MidoriPanel::labelbar	midori-panel.c	/^    GtkWidget* labelbar;$/;"	m	struct:_MidoriPanel	file:	access:public
_MidoriPanel::notebook	midori-panel.c	/^    GtkWidget* notebook;$/;"	m	struct:_MidoriPanel	file:	access:public
_MidoriPanel::open_panels_in_windows	midori-panel.c	/^    gboolean open_panels_in_windows;$/;"	m	struct:_MidoriPanel	file:	access:public
_MidoriPanel::parent_instance	midori-panel.c	/^    GtkHBox parent_instance;$/;"	m	struct:_MidoriPanel	file:	access:public
_MidoriPanel::right_aligned	midori-panel.c	/^    gboolean right_aligned;$/;"	m	struct:_MidoriPanel	file:	access:public
_MidoriPanel::show_controls	midori-panel.c	/^    gboolean show_controls;$/;"	m	struct:_MidoriPanel	file:	access:public
_MidoriPanel::show_titles	midori-panel.c	/^    gboolean show_titles;$/;"	m	struct:_MidoriPanel	file:	access:public
_MidoriPanel::toolbar	midori-panel.c	/^    GtkWidget* toolbar;$/;"	m	struct:_MidoriPanel	file:	access:public
_MidoriPanel::toolbar_label	midori-panel.c	/^    GtkWidget* toolbar_label;$/;"	m	struct:_MidoriPanel	file:	access:public
_MidoriPanel::toolbook	midori-panel.c	/^    GtkWidget* toolbook;$/;"	m	struct:_MidoriPanel	file:	access:public
_MidoriPanelClass	midori-panel.c	/^struct _MidoriPanelClass$/;"	s	file:
_MidoriPanelClass::close	midori-panel.c	/^    (*close)                  (MidoriPanel*   panel);$/;"	m	struct:_MidoriPanelClass	file:	access:public
_MidoriPanelClass::parent_class	midori-panel.c	/^    GtkHBoxClass parent_class;$/;"	m	struct:_MidoriPanelClass	file:	access:public
_MidoriPreferences	midori-preferences.c	/^struct _MidoriPreferences$/;"	s	file:
_MidoriPreferences::parent_instance	midori-preferences.c	/^    KatzePreferences parent_instance;$/;"	m	struct:_MidoriPreferences	file:	access:public
_MidoriPreferences::settings	midori-preferences.c	/^    gpointer settings;$/;"	m	struct:_MidoriPreferences	file:	access:public
_MidoriPreferencesClass	midori-preferences.h	/^struct _MidoriPreferencesClass$/;"	s
_MidoriPreferencesClass::parent_class	midori-preferences.h	/^    KatzePreferencesClass parent_class;$/;"	m	struct:_MidoriPreferencesClass	access:public
_MidoriSearchAction	midori-searchaction.c	/^struct _MidoriSearchAction$/;"	s	file:
_MidoriSearchAction::current_item	midori-searchaction.c	/^    KatzeItem* current_item;$/;"	m	struct:_MidoriSearchAction	file:	access:public
_MidoriSearchAction::default_button	midori-searchaction.c	/^    GtkWidget* default_button;$/;"	m	struct:_MidoriSearchAction	file:	access:public
_MidoriSearchAction::default_item	midori-searchaction.c	/^    KatzeItem* default_item;$/;"	m	struct:_MidoriSearchAction	file:	access:public
_MidoriSearchAction::dialog	midori-searchaction.c	/^    GtkWidget* dialog;$/;"	m	struct:_MidoriSearchAction	file:	access:public
_MidoriSearchAction::edit_button	midori-searchaction.c	/^    GtkWidget* edit_button;$/;"	m	struct:_MidoriSearchAction	file:	access:public
_MidoriSearchAction::last_proxy	midori-searchaction.c	/^    GtkWidget* last_proxy;$/;"	m	struct:_MidoriSearchAction	file:	access:public
_MidoriSearchAction::parent_instance	midori-searchaction.c	/^    GtkAction parent_instance;$/;"	m	struct:_MidoriSearchAction	file:	access:public
_MidoriSearchAction::remove_button	midori-searchaction.c	/^    GtkWidget* remove_button;$/;"	m	struct:_MidoriSearchAction	file:	access:public
_MidoriSearchAction::search_engines	midori-searchaction.c	/^    KatzeArray* search_engines;$/;"	m	struct:_MidoriSearchAction	file:	access:public
_MidoriSearchAction::text	midori-searchaction.c	/^    gchar* text;$/;"	m	struct:_MidoriSearchAction	file:	access:public
_MidoriSearchAction::treeview	midori-searchaction.c	/^    GtkWidget* treeview;$/;"	m	struct:_MidoriSearchAction	file:	access:public
_MidoriSearchActionClass	midori-searchaction.c	/^struct _MidoriSearchActionClass$/;"	s	file:
_MidoriSearchActionClass::parent_class	midori-searchaction.c	/^    GtkActionClass parent_class;$/;"	m	struct:_MidoriSearchActionClass	file:	access:public
_MidoriView	midori-view.c	/^struct _MidoriView$/;"	s	file:
_MidoriView::alerts	midori-view.c	/^    gint alerts;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::back_forward_set	midori-view.c	/^    gboolean back_forward_set;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::close_buttons_on_tabs	midori-view.c	/^    gboolean close_buttons_on_tabs;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::find_links	midori-view.c	/^    gint find_links;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::has_selection	midori-view.c	/^    gboolean has_selection;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::hit_test	midori-view.c	/^    WebKitHitTestResult* hit_test;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::icon	midori-view.c	/^    GdkPixbuf* icon;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::icon_uri	midori-view.c	/^    gchar* icon_uri;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::item	midori-view.c	/^    KatzeItem* item;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::link_uri	midori-view.c	/^    gchar* link_uri;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::load_status	midori-view.c	/^    MidoriLoadStatus load_status;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::memory	midori-view.c	/^    GHashTable* memory;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::menu_item	midori-view.c	/^    GtkWidget* menu_item;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::middle_click_opens_selection	midori-view.c	/^    gboolean middle_click_opens_selection;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::mime_type	midori-view.c	/^    gchar* mime_type;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::minimized	midori-view.c	/^    gboolean minimized;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::news_feeds	midori-view.c	/^    KatzeArray* news_feeds;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::open_new_pages_in	midori-view.c	/^    MidoriNewPage open_new_pages_in;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::open_tabs_in_the_background	midori-view.c	/^    gboolean open_tabs_in_the_background;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::parent_instance	midori-view.c	/^    GtkVBox parent_instance;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::progress	midori-view.c	/^    gdouble progress;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::scrolled_window	midori-view.c	/^    GtkWidget* scrolled_window;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::scrollh	midori-view.c	/^    gint scrollh, scrollv;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::scrollv	midori-view.c	/^    gint scrollh, scrollv;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::security	midori-view.c	/^    MidoriSecurity security;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::selected_text	midori-view.c	/^    gchar* selected_text;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::settings	midori-view.c	/^    MidoriWebSettings* settings;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::special	midori-view.c	/^    gboolean special;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::statusbar_text	midori-view.c	/^    gchar* statusbar_text;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::tab_close	midori-view.c	/^    GtkWidget* tab_close;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::tab_icon	midori-view.c	/^    GtkWidget* tab_icon;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::tab_label	midori-view.c	/^    GtkWidget* tab_label;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::tab_title	midori-view.c	/^    GtkWidget* tab_title;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::title	midori-view.c	/^    gchar* title;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::uri	midori-view.c	/^    gchar* uri;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriView::web_view	midori-view.c	/^    GtkWidget* web_view;$/;"	m	struct:_MidoriView	file:	access:public
_MidoriViewClass	midori-view.c	/^struct _MidoriViewClass$/;"	s	file:
_MidoriViewClass::parent_class	midori-view.c	/^    GtkVBoxClass parent_class;$/;"	m	struct:_MidoriViewClass	file:	access:public
_MidoriViewableIface	midori-viewable.h	/^struct _MidoriViewableIface$/;"	s
_MidoriViewableIface::base_iface	midori-viewable.h	/^    GTypeInterface base_iface;$/;"	m	struct:_MidoriViewableIface	access:public
_MidoriViewableIface::get_label	midori-viewable.h	/^    (*get_label)              (MidoriViewable*             viewable);$/;"	m	struct:_MidoriViewableIface	access:public
_MidoriViewableIface::get_stock_id	midori-viewable.h	/^    (*get_stock_id)           (MidoriViewable*             viewable);$/;"	m	struct:_MidoriViewableIface	access:public
_MidoriViewableIface::get_toolbar	midori-viewable.h	/^    (*get_toolbar)            (MidoriViewable*             viewable);$/;"	m	struct:_MidoriViewableIface	access:public
_MidoriWebSettings	midori-websettings.c	/^struct _MidoriWebSettings$/;"	s	file:
_MidoriWebSettings::always_show_tabbar	midori-websettings.c	/^    gboolean always_show_tabbar : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::clear_data	midori-websettings.c	/^    gchar* clear_data;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::clear_private_data	midori-websettings.c	/^    gint clear_private_data;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::close_buttons_left	midori-websettings.c	/^    gint close_buttons_left;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::close_buttons_on_tabs	midori-websettings.c	/^    gboolean close_buttons_on_tabs : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::compact_sidepanel	midori-websettings.c	/^    gboolean compact_sidepanel : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::download_folder	midori-websettings.c	/^    gchar* download_folder;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::enable_dns_prefetching	midori-websettings.c	/^    gboolean enable_dns_prefetching;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::enforce_font_family	midori-websettings.c	/^    gboolean enforce_font_family;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::find_while_typing	midori-websettings.c	/^    gboolean find_while_typing : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::first_party_cookies_only	midori-websettings.c	/^    gboolean first_party_cookies_only : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::flash_window_on_bg_tabs	midori-websettings.c	/^    gboolean flash_window_on_bg_tabs;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::homepage	midori-websettings.c	/^    gchar* homepage;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::http_accept_language	midori-websettings.c	/^    gchar* http_accept_language;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::http_proxy	midori-websettings.c	/^    gchar* http_proxy;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::http_proxy_port	midori-websettings.c	/^    gint http_proxy_port;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::ident_string	midori-websettings.c	/^    gchar* ident_string;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::identify_as	midori-websettings.c	/^    MidoriIdentity identify_as : 3;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::kinetic_scrolling	midori-websettings.c	/^    gboolean kinetic_scrolling : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::last_panel_page	midori-websettings.c	/^    gint last_panel_page;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::last_panel_position	midori-websettings.c	/^    gint last_panel_position;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::last_web_search	midori-websettings.c	/^    gint last_web_search;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::last_window_height	midori-websettings.c	/^    gint last_window_height;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::last_window_state	midori-websettings.c	/^    MidoriWindowState last_window_state : 2;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::last_window_width	midori-websettings.c	/^    gint last_window_width;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::load_on_startup	midori-websettings.c	/^    MidoriStartup load_on_startup : 2;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::location_entry_search	midori-websettings.c	/^    gchar* location_entry_search;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::maximum_cache_size	midori-websettings.c	/^    gint maximum_cache_size;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::maximum_cookie_age	midori-websettings.c	/^    gint maximum_cookie_age;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::maximum_history_age	midori-websettings.c	/^    gint maximum_history_age;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::middle_click_opens_selection	midori-websettings.c	/^    gboolean middle_click_opens_selection : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::news_aggregator	midori-websettings.c	/^    gchar* news_aggregator;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::open_new_pages_in	midori-websettings.c	/^    MidoriNewPage open_new_pages_in : 2;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::open_panels_in_windows	midori-websettings.c	/^    gboolean open_panels_in_windows : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::open_popups_in_tabs	midori-websettings.c	/^    gboolean open_popups_in_tabs : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::open_tabs_in_the_background	midori-websettings.c	/^    gboolean open_tabs_in_the_background : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::open_tabs_next_to_current	midori-websettings.c	/^    gboolean open_tabs_next_to_current : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::parent_instance	midori-websettings.c	/^    WebKitWebSettings parent_instance;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::preferred_encoding	midori-websettings.c	/^    MidoriPreferredEncoding preferred_encoding : 3;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::proxy_type	midori-websettings.c	/^    MidoriProxy proxy_type : 2;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::remember_last_visited_pages	midori-websettings.c	/^    gboolean remember_last_visited_pages : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::remember_last_window_size	midori-websettings.c	/^    gboolean remember_last_window_size : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::right_align_sidepanel	midori-websettings.c	/^    gboolean right_align_sidepanel : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::search_width	midori-websettings.c	/^    gint search_width;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::show_bookmarkbar	midori-websettings.c	/^    gboolean show_bookmarkbar : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::show_crash_dialog	midori-websettings.c	/^    gboolean show_crash_dialog : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::show_menubar	midori-websettings.c	/^    gboolean show_menubar : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::show_navigationbar	midori-websettings.c	/^    gboolean show_navigationbar : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::show_panel	midori-websettings.c	/^    gboolean show_panel : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::show_statusbar	midori-websettings.c	/^    gboolean show_statusbar : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::strip_referer	midori-websettings.c	/^    gboolean strip_referer;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::text_editor	midori-websettings.c	/^    gchar* text_editor;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::toolbar_items	midori-websettings.c	/^    gchar* toolbar_items;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::toolbar_style	midori-websettings.c	/^    MidoriToolbarStyle toolbar_style : 3;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::user_stylesheet_uri	midori-websettings.c	/^    gchar* user_stylesheet_uri;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::user_stylesheet_uri_cached	midori-websettings.c	/^    gchar* user_stylesheet_uri_cached;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::user_stylesheets	midori-websettings.c	/^    GHashTable* user_stylesheets;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettings::zoom_text_and_images	midori-websettings.c	/^    gboolean zoom_text_and_images : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
_MidoriWebSettingsClass	midori-websettings.c	/^struct _MidoriWebSettingsClass$/;"	s	file:
_MidoriWebSettingsClass::parent_class	midori-websettings.c	/^    WebKitWebSettingsClass parent_class;$/;"	m	struct:_MidoriWebSettingsClass	file:	access:public
_SockAddrData	socket.c	/^struct _SockAddrData {$/;"	s	file:
_SockAddrData::addr	socket.c	/^	struct sockaddr *addr;$/;"	m	struct:_SockAddrData	typeref:struct:_SockAddrData::sockaddr	file:	access:public
_SockAddrData::addr_len	socket.c	/^	gint addr_len;$/;"	m	struct:_SockAddrData	file:	access:public
_SockAddrData::family	socket.c	/^	gint family;$/;"	m	struct:_SockAddrData	file:	access:public
_SockAddrData::protocol	socket.c	/^	gint protocol;$/;"	m	struct:_SockAddrData	file:	access:public
_SockAddrData::socktype	socket.c	/^	gint socktype;$/;"	m	struct:_SockAddrData	file:	access:public
_SockConnectData	socket.c	/^struct _SockConnectData {$/;"	s	file:
_SockConnectData::addr_list	socket.c	/^	GList *addr_list;$/;"	m	struct:_SockConnectData	file:	access:public
_SockConnectData::channel	socket.c	/^	GIOChannel *channel;$/;"	m	struct:_SockConnectData	file:	access:public
_SockConnectData::cur_addr	socket.c	/^	GList *cur_addr;$/;"	m	struct:_SockConnectData	file:	access:public
_SockConnectData::data	socket.c	/^	gpointer data;$/;"	m	struct:_SockConnectData	file:	access:public
_SockConnectData::func	socket.c	/^	SockConnectFunc func;$/;"	m	struct:_SockConnectData	file:	access:public
_SockConnectData::hostname	socket.c	/^	gchar *hostname;$/;"	m	struct:_SockConnectData	file:	access:public
_SockConnectData::id	socket.c	/^	gint id;$/;"	m	struct:_SockConnectData	file:	access:public
_SockConnectData::io_tag	socket.c	/^	guint io_tag;$/;"	m	struct:_SockConnectData	file:	access:public
_SockConnectData::lookup_data	socket.c	/^	SockLookupData *lookup_data;$/;"	m	struct:_SockConnectData	file:	access:public
_SockConnectData::port	socket.c	/^	gushort port;$/;"	m	struct:_SockConnectData	file:	access:public
_SockInfo	socket.h	/^struct _SockInfo$/;"	s
_SockInfo::callback	socket.h	/^	SockFunc callback;$/;"	m	struct:_SockInfo	access:public
_SockInfo::condition	socket.h	/^	GIOCondition condition;$/;"	m	struct:_SockInfo	access:public
_SockInfo::data	socket.h	/^	gpointer data;$/;"	m	struct:_SockInfo	access:public
_SockInfo::hostname	socket.h	/^	gchar *hostname;$/;"	m	struct:_SockInfo	access:public
_SockInfo::nonblock	socket.h	/^	gboolean nonblock;$/;"	m	struct:_SockInfo	access:public
_SockInfo::port	socket.h	/^	gushort port;$/;"	m	struct:_SockInfo	access:public
_SockInfo::sock	socket.h	/^	gint sock;$/;"	m	struct:_SockInfo	access:public
_SockInfo::sock_ch	socket.h	/^	GIOChannel *sock_ch;$/;"	m	struct:_SockInfo	access:public
_SockInfo::ssl	socket.h	/^	SSL *ssl;$/;"	m	struct:_SockInfo	access:public
_SockInfo::ssl	socket.h	/^	gpointer ssl;$/;"	m	struct:_SockInfo	access:public
_SockInfo::state	socket.h	/^	ConnectionState state;$/;"	m	struct:_SockInfo	access:public
_SockLookupData	socket.c	/^struct _SockLookupData {$/;"	s	file:
_SockLookupData::channel	socket.c	/^	GIOChannel *channel;$/;"	m	struct:_SockLookupData	file:	access:public
_SockLookupData::child_pid	socket.c	/^	pid_t child_pid;$/;"	m	struct:_SockLookupData	file:	access:public
_SockLookupData::data	socket.c	/^	gpointer data;$/;"	m	struct:_SockLookupData	file:	access:public
_SockLookupData::func	socket.c	/^	SockAddrFunc func;$/;"	m	struct:_SockLookupData	file:	access:public
_SockLookupData::hostname	socket.c	/^	gchar *hostname;$/;"	m	struct:_SockLookupData	file:	access:public
_SockLookupData::io_tag	socket.c	/^	guint io_tag;$/;"	m	struct:_SockLookupData	file:	access:public
_SockSource	socket.c	/^struct _SockSource {$/;"	s	file:
_SockSource::parent	socket.c	/^	GSource parent;$/;"	m	struct:_SockSource	file:	access:public
_SockSource::sock	socket.c	/^	SockInfo *sock;$/;"	m	struct:_SockSource	file:	access:public
_WIN32_WINNT	midori-app.c	14;"	d	file:
__GTK_ICON_ENTRY_H__	gtkiconentry.h	22;"	d
__MIDORI_APP_H__	midori-app.h	13;"	d
__MIDORI_ARRAY_H__	midori-array.h	13;"	d
__MIDORI_BROWSER_H__	midori-browser.h	13;"	d
__MIDORI_EXTENSION_H__	midori-extension.h	13;"	d
__MIDORI_H__	midori.h	13;"	d
__MIDORI_LOCATION_ACTION_H__	midori-locationaction.h	13;"	d
__MIDORI_PANED_ACTION_H__	midori-panedaction.h	13;"	d
__MIDORI_PANEL_H__	midori-panel.h	13;"	d
__MIDORI_PLATFORM_H__	midori-platform.h	13;"	d
__MIDORI_PREFERENCES_H__	midori-preferences.h	13;"	d
__MIDORI_SEARCH_ACTION_H__	midori-searchaction.h	13;"	d
__MIDORI_STOCK_H__	midori-stock.h	13;"	d
__MIDORI_VIEWABLE_H__	midori-viewable.h	13;"	d
__MIDORI_VIEW_H__	midori-view.h	13;"	d
__MIDORI_WEB_SETTINGS_H__	midori-websettings.h	13;"	d
__SOKOKE_H__	sokoke.h	14;"	d
__SYLPH_SOCKET_H__	socket.h	13;"	d
__anon15::clear	sokoke.h	/^    GCallback clear;$/;"	m	struct:__anon15	access:public
__anon15::label	sokoke.h	/^    gchar* label;$/;"	m	struct:__anon15	access:public
__anon15::name	sokoke.h	/^    gchar* name;$/;"	m	struct:__anon15	access:public
__anon16::cursor_type	gtkiconentry.c	/^  GdkCursorType cursor_type;$/;"	m	struct:__anon16	file:	access:public
__anon16::custom_cursor	gtkiconentry.c	/^  gboolean custom_cursor;$/;"	m	struct:__anon16	file:	access:public
__anon16::gicon	gtkiconentry.c	/^  GIcon *gicon;$/;"	m	struct:__anon16	file:	access:public
__anon16::highlight	gtkiconentry.c	/^  gboolean highlight;$/;"	m	struct:__anon16	file:	access:public
__anon16::hovered	gtkiconentry.c	/^  gboolean hovered;$/;"	m	struct:__anon16	file:	access:public
__anon16::icon_name	gtkiconentry.c	/^  gchar *icon_name;$/;"	m	struct:__anon16	file:	access:public
__anon16::insensitive	gtkiconentry.c	/^  gboolean insensitive;$/;"	m	struct:__anon16	file:	access:public
__anon16::pixbuf	gtkiconentry.c	/^  GdkPixbuf *pixbuf;$/;"	m	struct:__anon16	file:	access:public
__anon16::storage_type	gtkiconentry.c	/^  GtkImageType storage_type;$/;"	m	struct:__anon16	file:	access:public
__anon16::tooltip_text	gtkiconentry.c	/^  gchar *tooltip_text;$/;"	m	struct:__anon16	file:	access:public
__anon16::window	gtkiconentry.c	/^  GdkWindow *window;$/;"	m	struct:__anon16	file:	access:public
__anon1::browser	main.c	/^     MidoriBrowser* browser;$/;"	m	struct:__anon1	file:	access:public
__anon1::timeout	main.c	/^     guint timeout;$/;"	m	struct:__anon1	file:	access:public
__anon1::uri	main.c	/^     gchar* uri;$/;"	m	struct:__anon1	file:	access:public
__anon29::label	midori-panel.c	/^    gchar* label;$/;"	m	struct:__anon29	file:	access:public
__anon29::parent_instance	midori-panel.c	/^    GtkAlignment parent_instance;$/;"	m	struct:__anon29	file:	access:public
__anon29::stock_id	midori-panel.c	/^    gchar* stock_id;$/;"	m	struct:__anon29	file:	access:public
__anon29::toolbar	midori-panel.c	/^    GtkWidget* toolbar;$/;"	m	struct:__anon29	file:	access:public
__anon30::parent_class	midori-panel.c	/^    GtkAlignmentClass parent_class;$/;"	m	struct:__anon30	file:	access:public
__anon31::default_value	midori-extension.c	/^    gboolean default_value;$/;"	m	struct:__anon31	file:	access:public
__anon31::name	midori-extension.c	/^    gchar* name;$/;"	m	struct:__anon31	file:	access:public
__anon31::type	midori-extension.c	/^    GType type;$/;"	m	struct:__anon31	file:	access:public
__anon31::value	midori-extension.c	/^    gboolean value;$/;"	m	struct:__anon31	file:	access:public
__anon32::default_value	midori-extension.c	/^    gint default_value;$/;"	m	struct:__anon32	file:	access:public
__anon32::name	midori-extension.c	/^    gchar* name;$/;"	m	struct:__anon32	file:	access:public
__anon32::type	midori-extension.c	/^    GType type;$/;"	m	struct:__anon32	file:	access:public
__anon32::value	midori-extension.c	/^    gint value;$/;"	m	struct:__anon32	file:	access:public
__anon33::default_value	midori-extension.c	/^    gchar* default_value;$/;"	m	struct:__anon33	file:	access:public
__anon33::name	midori-extension.c	/^    gchar* name;$/;"	m	struct:__anon33	file:	access:public
__anon33::type	midori-extension.c	/^    GType type;$/;"	m	struct:__anon33	file:	access:public
__anon33::value	midori-extension.c	/^    gchar* value;$/;"	m	struct:__anon33	file:	access:public
__anon34::default_length	midori-extension.c	/^    gsize default_length;$/;"	m	struct:__anon34	file:	access:public
__anon34::default_value	midori-extension.c	/^    gchar** default_value;$/;"	m	struct:__anon34	file:	access:public
__anon34::length	midori-extension.c	/^    gsize length;$/;"	m	struct:__anon34	file:	access:public
__anon34::name	midori-extension.c	/^    gchar* name;$/;"	m	struct:__anon34	file:	access:public
__anon34::type	midori-extension.c	/^    GType type;$/;"	m	struct:__anon34	file:	access:public
__anon34::value	midori-extension.c	/^    gchar** value;$/;"	m	struct:__anon34	file:	access:public
__anon6::icon_file	midori-view.c	/^    gchar* icon_file;$/;"	m	struct:__anon6	file:	access:public
__anon6::icon_uri	midori-view.c	/^    gchar* icon_uri;$/;"	m	struct:__anon6	file:	access:public
__anon6::view	midori-view.c	/^    MidoriView* view;$/;"	m	struct:__anon6	file:	access:public
_action_add_desktop_shortcut_activate	midori-browser.c	/^_action_add_desktop_shortcut_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_add_news_feed_activate	midori-browser.c	/^_action_add_news_feed_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_add_speed_dial_activate	midori-browser.c	/^_action_add_speed_dial_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_bookmarkbar_activate	midori-browser.c	/^_action_bookmarkbar_activate (GtkToggleAction* action,$/;"	f	file:	signature:(GtkToggleAction* action, MidoriBrowser* browser)
_action_bookmarks_populate_folder	midori-browser.c	/^_action_bookmarks_populate_folder (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, GtkMenuShell* menu, KatzeArray* folder, MidoriBrowser* browser)
_action_by_name	midori-browser.c	364;"	d	file:
_action_caret_browsing_activate	midori-browser.c	/^_action_caret_browsing_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_compact_add_activate	midori-browser.c	/^_action_compact_add_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_compact_add_response_cb	midori-browser.c	/^_action_compact_add_response_cb (GtkWidget* dialog,$/;"	f	file:	signature:(GtkWidget* dialog, gint response, gpointer data)
_action_compact_menu_populate_popup	midori-browser.c	/^_action_compact_menu_populate_popup (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, GtkWidget* menu, MidoriBrowser* browser)
_action_copy_activate	midori-browser.c	/^_action_copy_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_cut_activate	midori-browser.c	/^_action_cut_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_delete_activate	midori-browser.c	/^_action_delete_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_edit_activate	midori-browser.c	/^_action_edit_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_find_activate	midori-browser.c	/^_action_find_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_find_next_activate	midori-browser.c	/^_action_find_next_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_find_previous_activate	midori-browser.c	/^_action_find_previous_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_fullscreen_activate	midori-browser.c	/^_action_fullscreen_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_location_activate	midori-browser.c	/^_action_location_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_location_focus_in	midori-browser.c	/^_action_location_focus_in (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_location_focus_out	midori-browser.c	/^_action_location_focus_out (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_location_reset_uri	midori-browser.c	/^_action_location_reset_uri (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_location_submit_uri	midori-browser.c	/^_action_location_submit_uri (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, const gchar* uri, gboolean new_tab, MidoriBrowser* browser)
_action_menubar_activate	midori-browser.c	/^_action_menubar_activate (GtkToggleAction* menubar_action,$/;"	f	file:	signature:(GtkToggleAction* menubar_action, MidoriBrowser* browser)
_action_navigation_activate	midori-browser.c	/^_action_navigation_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_navigationbar_activate	midori-browser.c	/^_action_navigationbar_activate (GtkToggleAction* action,$/;"	f	file:	signature:(GtkToggleAction* action, MidoriBrowser* browser)
_action_open_activate	midori-browser.c	/^_action_open_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_paste_activate	midori-browser.c	/^_action_paste_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_preferences_activate	midori-browser.c	/^_action_preferences_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_print_activate	midori-browser.c	/^_action_print_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_private_browsing_activate	midori-browser.c	/^_action_private_browsing_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_quit_activate	midori-browser.c	/^_action_quit_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_redo_activate	midori-browser.c	/^_action_redo_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_reload_stop_activate	midori-browser.c	/^_action_reload_stop_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_save_as_activate	midori-browser.c	/^_action_save_as_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_scroll_somewhere_activate	midori-browser.c	/^_action_scroll_somewhere_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_select_all_activate	midori-browser.c	/^_action_select_all_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_set_active	midori-browser.c	370;"	d	file:
_action_set_sensitive	midori-browser.c	366;"	d	file:
_action_set_visible	midori-browser.c	368;"	d	file:
_action_source_view_activate	midori-browser.c	/^_action_source_view_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_statusbar_activate	midori-browser.c	/^_action_statusbar_activate (GtkToggleAction* action,$/;"	f	file:	signature:(GtkToggleAction* action, MidoriBrowser* browser)
_action_tab_close_activate	midori-browser.c	/^_action_tab_close_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_tab_new_activate	midori-browser.c	/^_action_tab_new_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_tools_populate_popup	midori-browser.c	/^_action_tools_populate_popup (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, GtkMenu* menu, MidoriBrowser* browser)
_action_trash_activate_item_alt	midori-browser.c	/^_action_trash_activate_item_alt (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, KatzeItem* item, guint button, MidoriBrowser* browser)
_action_trash_populate_popup	midori-browser.c	/^_action_trash_populate_popup (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, GtkMenu* menu, MidoriBrowser* browser)
_action_undo_activate	midori-browser.c	/^_action_undo_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_view_encoding_activate	midori-browser.c	/^_action_view_encoding_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, GtkAction* current, MidoriBrowser* browser)
_action_window_activate_item_alt	midori-browser.c	/^_action_window_activate_item_alt (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, KatzeItem* item, gint button, MidoriBrowser* browser)
_action_window_close_activate	midori-browser.c	/^_action_window_close_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_window_new_activate	midori-browser.c	/^_action_window_new_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_action_window_populate_popup	midori-browser.c	/^_action_window_populate_popup (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, GtkMenu* menu, MidoriBrowser* browser)
_action_zoom_activate	midori-browser.c	/^_action_zoom_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
_gtk_entry_effective_inner_border	gtkiconentry.c	/^_gtk_entry_effective_inner_border (GtkEntry  *entry,$/;"	f	file:	signature:(GtkEntry *entry, GtkBorder *border)
_midori_app_add_browser	midori-app.c	/^_midori_app_add_browser (MidoriApp*     app,$/;"	f	file:	signature:(MidoriApp* app, MidoriBrowser* browser)
_midori_app_quit	midori-app.c	/^_midori_app_quit (MidoriApp* app)$/;"	f	file:	signature:(MidoriApp* app)
_midori_browser_activate_action	midori-browser.c	/^_midori_browser_activate_action (MidoriBrowser* browser,$/;"	f	file:	signature:(MidoriBrowser* browser, const gchar* name)
_midori_browser_add_tab	midori-browser.c	/^_midori_browser_add_tab (MidoriBrowser* browser,$/;"	f	file:	signature:(MidoriBrowser* browser, GtkWidget* view)
_midori_browser_quit	midori-browser.c	/^_midori_browser_quit (MidoriBrowser* browser)$/;"	f	file:	signature:(MidoriBrowser* browser)
_midori_browser_remove_tab	midori-browser.c	/^_midori_browser_remove_tab (MidoriBrowser* browser,$/;"	f	file:	signature:(MidoriBrowser* browser, GtkWidget* view)
_midori_browser_set_statusbar_text	midori-browser.c	/^_midori_browser_set_statusbar_text (MidoriBrowser* browser,$/;"	f	file:	signature:(MidoriBrowser* browser, const gchar* text)
_midori_browser_set_toolbar_style	midori-browser.c	/^_midori_browser_set_toolbar_style (MidoriBrowser*     browser,$/;"	p	file:	signature:(MidoriBrowser* browser, MidoriToolbarStyle toolbar_style)
_midori_browser_update_actions	midori-browser.c	/^_midori_browser_update_actions (MidoriBrowser* browser)$/;"	f	file:	signature:(MidoriBrowser* browser)
_midori_browser_update_interface	midori-browser.c	/^_midori_browser_update_interface (MidoriBrowser* browser)$/;"	f	file:	signature:(MidoriBrowser* browser)
_midori_browser_update_progress	midori-browser.c	/^_midori_browser_update_progress (MidoriBrowser* browser,$/;"	f	file:	signature:(MidoriBrowser* browser, MidoriView* view)
_midori_panel_child_for_scrolled	midori-panel.c	/^_midori_panel_child_for_scrolled (MidoriPanel* panel,$/;"	f	file:	signature:(MidoriPanel* panel, GtkWidget* scrolled)
_midori_panel_child_for_scrolled	midori-panel.c	/^_midori_panel_child_for_scrolled (MidoriPanel* panel,$/;"	p	file:	signature:(MidoriPanel* panel, GtkWidget* scrolled)
_midori_panel_scrolled_for_child	midori-panel.c	/^_midori_panel_scrolled_for_child (MidoriPanel* panel,$/;"	f	file:	signature:(MidoriPanel* panel, GtkWidget* child)
_midori_search_action_move_index	midori-searchaction.c	/^_midori_search_action_move_index (MidoriSearchAction* search_action,$/;"	f	file:	signature:(MidoriSearchAction* search_action, guint n)
_midori_view_set_settings	midori-view.c	/^_midori_view_set_settings (MidoriView*        view,$/;"	f	file:	signature:(MidoriView* view, MidoriWebSettings* settings)
_midori_view_set_settings	midori-view.c	/^_midori_view_set_settings (MidoriView*        view,$/;"	p	file:	signature:(MidoriView* view, MidoriWebSettings* settings)
_midori_web_view_load_icon	midori-view.c	/^_midori_web_view_load_icon (MidoriView* view)$/;"	f	file:	signature:(MidoriView* view)
_toggle_tabbar_smartly	midori-browser.c	/^_toggle_tabbar_smartly (MidoriBrowser* browser,$/;"	f	file:	signature:(MidoriBrowser* browser, gboolean ignore_fullscreen)
a_trim	midori-browser.c	/^char * a_trim(char * szOutput, const char * szInput)$/;"	f	signature:(char * szOutput, const char * szInput)
a_trim	midori-conf.c	/^char * a_trim(char * szOutput, const char * szInput)$/;"	f	signature:(char * szOutput, const char * szInput)
accel_group	midori-app.c	/^    GtkAccelGroup* accel_group;$/;"	m	struct:_MidoriApp	file:	access:public
accel_map_changed_cb	main.c	/^accel_map_changed_cb (GtkAccelMap*    accel_map,$/;"	f	file:	signature:(GtkAccelMap* accel_map, gchar* accel_path, guint accel_key, GdkModifierType accel_mods)
action_group	midori-browser.c	/^    GtkActionGroup* action_group;$/;"	m	struct:_MidoriBrowser	file:	access:public
action_group	midori-panel.c	/^    GtkActionGroup* action_group;$/;"	m	struct:_MidoriPanel	file:	access:public
activate_action	midori-browser.h	/^    (*activate_action)         (MidoriBrowser*       browser,$/;"	m	struct:_MidoriBrowserClass	access:public
active	midori-extension.c	/^    gint active;$/;"	m	struct:_MidoriExtensionPrivate	file:	access:public
add_browser	midori-app.c	/^    (*add_browser)            (MidoriApp*     app,$/;"	m	struct:_MidoriAppClass	file:	access:public
add_tab	midori-browser.h	/^    (*add_tab)                 (MidoriBrowser*       browser,$/;"	m	struct:_MidoriBrowserClass	access:public
addr	socket.c	/^	struct sockaddr *addr;$/;"	m	struct:_SockAddrData	typeref:struct:_SockAddrData::sockaddr	file:	access:public
addr_len	socket.c	/^	gint addr_len;$/;"	m	struct:_SockAddrData	file:	access:public
addr_list	socket.c	/^	GList *addr_list;$/;"	m	struct:_SockConnectData	file:	access:public
alerts	midori-view.c	/^    gint alerts;$/;"	m	struct:_MidoriView	file:	access:public
alloc_timeout	midori-browser.c	/^    guint alloc_timeout;$/;"	m	struct:_MidoriBrowser	file:	access:public
always_show_tabbar	midori-websettings.c	/^    gboolean always_show_tabbar : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
app	midori-extension.c	/^    MidoriApp* app;$/;"	m	struct:_MidoriExtensionPrivate	file:	access:public
authors	midori-extension.c	/^    gchar* authors;$/;"	m	struct:_MidoriExtensionPrivate	file:	access:public
back_forward_set	midori-view.c	/^    gboolean back_forward_set;$/;"	m	struct:_MidoriView	file:	access:public
base64_space_pad	midori-websettings.c	/^base64_space_pad (gchar* base64,$/;"	f	file:	signature:(gchar* base64, guint len)
base64_space_pad	midori-websettings.c	/^base64_space_pad (gchar* base64,$/;"	p	file:	signature:(gchar* base64, guint len)
base_iface	midori-viewable.h	/^    GTypeInterface base_iface;$/;"	m	struct:_MidoriViewableIface	access:public
bookmarkbar	midori-browser.c	/^    GtkWidget* bookmarkbar;$/;"	m	struct:_MidoriBrowser	file:	access:public
bookmarks	midori-app.c	/^    KatzeArray* bookmarks;$/;"	m	struct:_MidoriApp	file:	access:public
bookmarks	midori-browser.c	/^    KatzeArray* bookmarks;$/;"	m	struct:_MidoriBrowser	file:	access:public
browser	main.c	/^     MidoriBrowser* browser;$/;"	m	struct:__anon1	file:	access:public
browser	midori-app.c	/^    MidoriBrowser* browser;$/;"	m	struct:_MidoriApp	file:	access:public
browsers	midori-app.c	/^    KatzeArray* browsers;$/;"	m	struct:_MidoriApp	file:	access:public
build_config_filename	main.c	/^build_config_filename (const gchar* filename)$/;"	f	file:	signature:(const gchar* filename)
button_align	midori-panel.c	/^    GtkToolItem* button_align;$/;"	m	struct:_MidoriPanel	file:	access:public
button_disable_extensions_clicked_cb	main.c	/^button_disable_extensions_clicked_cb (GtkWidget* button,$/;"	f	file:	signature:(GtkWidget* button, MidoriApp* app)
button_modify_preferences_clicked_cb	main.c	/^button_modify_preferences_clicked_cb (GtkWidget*         button,$/;"	f	file:	signature:(GtkWidget* button, MidoriWebSettings* settings)
call_other_browser	midori-browser.c	/^static void call_other_browser(const gchar *usr_data);$/;"	p	file:	signature:(const gchar *usr_data)
callback	socket.h	/^	SockFunc callback;$/;"	m	struct:_SockInfo	access:public
can_do	midori-view.c	/^can_do (reload)$/;"	f
can_do	midori-view.c	4923;"	d	file:
channel	socket.c	/^	GIOChannel *channel;$/;"	m	struct:_SockConnectData	file:	access:public
channel	socket.c	/^	GIOChannel *channel;$/;"	m	struct:_SockLookupData	file:	access:public
child1	midori-panedaction.c	/^    struct _MidoriPanedActionChild child1;$/;"	m	struct:_MidoriPanedAction	typeref:struct:_MidoriPanedAction::_MidoriPanedActionChild	file:	access:public
child2	midori-panedaction.c	/^    struct _MidoriPanedActionChild child2;$/;"	m	struct:_MidoriPanedAction	typeref:struct:_MidoriPanedAction::_MidoriPanedActionChild	file:	access:public
child_pid	socket.c	/^	pid_t child_pid;$/;"	m	struct:_SockLookupData	file:	access:public
clear	sokoke.h	/^    GCallback clear;$/;"	m	struct:__anon15	access:public
clear_data	midori-websettings.c	/^    gchar* clear_data;$/;"	m	struct:_MidoriWebSettings	file:	access:public
clear_private_data	midori-browser.c	/^    gint clear_private_data;$/;"	m	struct:_MidoriBrowser	file:	access:public
clear_private_data	midori-websettings.c	/^    gint clear_private_data;$/;"	m	struct:_MidoriWebSettings	file:	access:public
close	midori-panel.c	/^    (*close)                  (MidoriPanel*   panel);$/;"	m	struct:_MidoriPanelClass	file:	access:public
close_buttons_left	midori-websettings.c	/^    gint close_buttons_left;$/;"	m	struct:_MidoriWebSettings	file:	access:public
close_buttons_on_tabs	midori-view.c	/^    gboolean close_buttons_on_tabs;$/;"	m	struct:_MidoriView	file:	access:public
close_buttons_on_tabs	midori-websettings.c	/^    gboolean close_buttons_on_tabs : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
colorshift_pixbuf	gtkiconentry.c	/^colorshift_pixbuf (GdkPixbuf *dest, GdkPixbuf *src, int shift)$/;"	f	file:	signature:(GdkPixbuf *dest, GdkPixbuf *src, int shift)
compact_sidepanel	midori-websettings.c	/^    gboolean compact_sidepanel : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
completion_index	midori-locationaction.c	/^    gint completion_index;$/;"	m	struct:_MidoriLocationAction	file:	access:public
completion_model	midori-locationaction.c	/^    GtkTreeModel* completion_model;$/;"	m	struct:_MidoriLocationAction	file:	access:public
completion_timeout	midori-locationaction.c	/^    guint completion_timeout;$/;"	m	struct:_MidoriLocationAction	file:	access:public
condition	socket.h	/^	GIOCondition condition;$/;"	m	struct:_SockInfo	access:public
config_dir	midori-extension.c	/^    gchar* config_dir;$/;"	m	struct:_MidoriExtensionPrivate	file:	access:public
creatUrllist	midori-browser.c	/^static urllistFilter *creatUrllist(void);$/;"	p	file:	signature:(void)
cur_addr	socket.c	/^	GList *cur_addr;$/;"	m	struct:_SockConnectData	file:	access:public
current_item	midori-searchaction.c	/^    KatzeItem* current_item;$/;"	m	struct:_MidoriSearchAction	file:	access:public
cursor_type	gtkiconentry.c	/^  GdkCursorType cursor_type;$/;"	m	struct:__anon16	file:	access:public
custom_cursor	gtkiconentry.c	/^  gboolean custom_cursor;$/;"	m	struct:__anon16	file:	access:public
data	socket.c	/^	gpointer data;$/;"	m	struct:_SockConnectData	file:	access:public
data	socket.c	/^	gpointer data;$/;"	m	struct:_SockLookupData	file:	access:public
data	socket.h	/^	gpointer data;$/;"	m	struct:_SockInfo	access:public
debug_print	socket.c	62;"	d	file:
debug_print	socket.c	64;"	d	file:
default_button	midori-searchaction.c	/^    GtkWidget* default_button;$/;"	m	struct:_MidoriSearchAction	file:	access:public
default_icon	midori-locationaction.c	/^    GdkPixbuf* default_icon;$/;"	m	struct:_MidoriLocationAction	file:	access:public
default_item	midori-searchaction.c	/^    KatzeItem* default_item;$/;"	m	struct:_MidoriSearchAction	file:	access:public
default_length	midori-extension.c	/^    gsize default_length;$/;"	m	struct:__anon34	file:	access:public
default_value	midori-extension.c	/^    gboolean default_value;$/;"	m	struct:__anon31	file:	access:public
default_value	midori-extension.c	/^    gchar* default_value;$/;"	m	struct:__anon33	file:	access:public
default_value	midori-extension.c	/^    gchar** default_value;$/;"	m	struct:__anon34	file:	access:public
default_value	midori-extension.c	/^    gint default_value;$/;"	m	struct:__anon32	file:	access:public
delete	midori-browser.c	/^static urllistFilter * delete(urllistFilter *h , gchar *data);$/;"	p	file:	signature:(urllistFilter *h , gchar *data)
description	midori-extension.c	/^    gchar* description;$/;"	m	struct:_MidoriExtensionPrivate	file:	access:public
dialog	midori-searchaction.c	/^    GtkWidget* dialog;$/;"	m	struct:_MidoriSearchAction	file:	access:public
download_folder	midori-websettings.c	/^    gchar* download_folder;$/;"	m	struct:_MidoriWebSettings	file:	access:public
draw_icon	gtkiconentry.c	/^draw_icon (GtkWidget *widget, GtkIconEntryPosition icon_pos)$/;"	f	file:	signature:(GtkWidget *widget, GtkIconEntryPosition icon_pos)
edit_button	midori-searchaction.c	/^    GtkWidget* edit_button;$/;"	m	struct:_MidoriSearchAction	file:	access:public
element_motion	midori-browser.h	/^    (*element_motion)          (MidoriBrowser*       browser,$/;"	m	struct:_MidoriBrowserClass	access:public
enable_dns_prefetching	midori-websettings.c	/^    gboolean enable_dns_prefetching;$/;"	m	struct:_MidoriWebSettings	file:	access:public
enforce_font_family	midori-websettings.c	/^    gboolean enforce_font_family;$/;"	m	struct:_MidoriWebSettings	file:	access:public
entry	midori-locationaction.c	/^    GtkWidget* entry;$/;"	m	struct:_MidoriLocationAction	file:	access:public
entry_expose_event	gtkiconentry.c	/^entry_expose_event (GtkWidget*      entry,$/;"	f	file:	signature:(GtkWidget* entry, GdkEventExpose* event, GtkIconEntry* icon_entry)
extension_activate_cb	main.c	/^extension_activate_cb (MidoriExtension* extension,$/;"	f	file:	signature:(MidoriExtension* extension, MidoriApp* app)
extensions	midori-app.c	/^    KatzeArray* extensions;$/;"	m	struct:_MidoriApp	file:	access:public
family	socket.c	/^	gint family;$/;"	m	struct:_SockAddrData	file:	access:public
fd_accept	socket.c	/^gint fd_accept(gint sock)$/;"	f	signature:(gint sock)
fd_accept	socket.h	/^gint fd_accept		(gint sock);$/;"	p	signature:(gint sock)
fd_check_io	socket.c	/^static gint fd_check_io(gint fd, GIOCondition cond)$/;"	f	file:	signature:(gint fd, GIOCondition cond)
fd_close	socket.c	/^gint fd_close(gint fd)$/;"	f	signature:(gint fd)
fd_close	socket.h	/^gint fd_close		(gint sock);$/;"	p	signature:(gint sock)
fd_connect_inet	socket.c	/^gint fd_connect_inet(gushort port)$/;"	f	signature:(gushort port)
fd_connect_inet	socket.h	/^gint fd_connect_inet	(gushort port);$/;"	p	signature:(gushort port)
fd_connect_unix	socket.c	/^gint fd_connect_unix(const gchar *path)$/;"	f	signature:(const gchar *path)
fd_connect_unix	socket.h	/^gint fd_connect_unix	(const gchar *path);$/;"	p	signature:(const gchar *path)
fd_getline	socket.c	/^gint fd_getline(gint fd, gchar **line)$/;"	f	signature:(gint fd, gchar **line)
fd_getline	socket.h	/^gint fd_getline		(gint sock, gchar **line);$/;"	p	signature:(gint sock, gchar **line)
fd_gets	socket.c	/^gint fd_gets(gint fd, gchar *buf, gint len)$/;"	f	signature:(gint fd, gchar *buf, gint len)
fd_gets	socket.h	/^gint fd_gets		(gint sock, gchar *buf, gint len);$/;"	p	signature:(gint sock, gchar *buf, gint len)
fd_open_inet	socket.c	/^gint fd_open_inet(gushort port)$/;"	f	signature:(gushort port)
fd_open_inet	socket.h	/^gint fd_open_inet	(gushort port);$/;"	p	signature:(gushort port)
fd_open_unix	socket.c	/^gint fd_open_unix(const gchar *path)$/;"	f	signature:(const gchar *path)
fd_open_unix	socket.h	/^gint fd_open_unix	(const gchar *path);$/;"	p	signature:(const gchar *path)
fd_read	socket.c	/^gint fd_read(gint fd, gchar *buf, gint len)$/;"	f	signature:(gint fd, gchar *buf, gint len)
fd_read	socket.h	/^gint fd_read		(gint sock, gchar *buf, gint len);$/;"	p	signature:(gint sock, gchar *buf, gint len)
fd_recv	socket.c	/^gint fd_recv				(gint		 fd,$/;"	p	file:	signature:(gint fd, gchar *buf, gint len, gint flags)
fd_recv	socket.c	/^gint fd_recv(gint fd, gchar *buf, gint len, gint flags)$/;"	f	signature:(gint fd, gchar *buf, gint len, gint flags)
fd_write	socket.c	/^gint fd_write(gint fd, const gchar *buf, gint len)$/;"	f	signature:(gint fd, const gchar *buf, gint len)
fd_write	socket.h	/^gint fd_write		(gint sock, const gchar *buf, gint len);$/;"	p	signature:(gint sock, const gchar *buf, gint len)
fd_write_all	socket.c	/^gint fd_write_all(gint fd, const gchar *buf, gint len)$/;"	f	signature:(gint fd, const gchar *buf, gint len)
fd_write_all	socket.h	/^gint fd_write_all	(gint sock, const gchar *buf, gint len);$/;"	p	signature:(gint sock, const gchar *buf, gint len)
find	midori-browser.c	/^    GtkWidget* find;$/;"	m	struct:_MidoriBrowser	file:	access:public
find_links	midori-view.c	/^    gint find_links;$/;"	m	struct:_MidoriView	file:	access:public
find_while_typing	midori-websettings.c	/^    gboolean find_while_typing : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
first_party_cookies_only	midori-websettings.c	/^    gboolean first_party_cookies_only : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
flash_window_on_bg_tabs	midori-websettings.c	/^    gboolean flash_window_on_bg_tabs;$/;"	m	struct:_MidoriWebSettings	file:	access:public
foreachUrllist	midori-browser.c	/^static urllistFilter * foreachUrllist(urllistFilter *h, gchar * data);$/;"	p	file:	signature:(urllistFilter *h, gchar * data)
fraction	gtkiconentry.c	/^  gdouble fraction;$/;"	m	struct:_GtkIconEntryPrivate	file:	access:public
frame	midori-panel.c	/^    GtkWidget* frame;$/;"	m	struct:_MidoriPanel	file:	access:public
func	socket.c	/^	SockAddrFunc func;$/;"	m	struct:_SockLookupData	file:	access:public
func	socket.c	/^	SockConnectFunc func;$/;"	m	struct:_SockConnectData	file:	access:public
gai_strerror	socket.c	/^const gchar *gai_strerror(gint errcode)$/;"	f	signature:(gint errcode)
gai_strerror	socket.c	826;"	d	file:
generate_ident_string	midori-websettings.c	/^generate_ident_string (MidoriWebSettings* web_settings,$/;"	f	file:	signature:(MidoriWebSettings* web_settings, MidoriIdentity identify_as)
get_borders	gtkiconentry.c	/^get_borders (GtkIconEntry *entry, gint *xborder, gint *yborder)$/;"	f	file:	signature:(GtkIconEntry *entry, gint *xborder, gint *yborder)
get_core_uri	midori-uri-filter.c	/^char *get_core_uri(char *uri_Input)$/;"	f	signature:(char *uri_Input)
get_core_uri	midori-uri-filter.h	/^char *get_core_uri(char *uri_Input);$/;"	p	signature:(char *uri_Input)
get_icon_allocation	gtkiconentry.c	/^get_icon_allocation (GtkIconEntry *icon_entry,$/;"	f	file:	signature:(GtkIconEntry *icon_entry, gboolean left, GtkAllocation *widget_alloc, GtkAllocation *text_area_alloc, GtkAllocation *allocation, GtkIconEntryPosition *icon_pos)
get_icon_width	gtkiconentry.c	/^get_icon_width (GtkIconEntry *entry, GtkIconEntryPosition icon_pos)$/;"	f	file:	signature:(GtkIconEntry *entry, GtkIconEntryPosition icon_pos)
get_label	midori-viewable.h	/^    (*get_label)              (MidoriViewable*             viewable);$/;"	m	struct:_MidoriViewableIface	access:public
get_layout_position	gtkiconentry.c	/^get_layout_position (GtkEntry *entry,$/;"	f	file:	signature:(GtkEntry *entry, gint *x, gint *y)
get_pixbuf_from_icon	gtkiconentry.c	/^get_pixbuf_from_icon (GtkIconEntry *entry, GtkIconEntryPosition icon_pos)$/;"	f	file:	signature:(GtkIconEntry *entry, GtkIconEntryPosition icon_pos)
get_stock_id	midori-viewable.h	/^    (*get_stock_id)           (MidoriViewable*             viewable);$/;"	m	struct:_MidoriViewableIface	access:public
get_sys_name	midori-websettings.c	/^get_sys_name (gchar** architecture)$/;"	f	file:	signature:(gchar** architecture)
get_text_area_size	gtkiconentry.c	/^get_text_area_size (GtkIconEntry *entry, GtkAllocation *alloc)$/;"	f	file:	signature:(GtkIconEntry *entry, GtkAllocation *alloc)
get_toolbar	midori-viewable.h	/^    (*get_toolbar)            (MidoriViewable*             viewable);$/;"	m	struct:_MidoriViewableIface	access:public
gicon	gtkiconentry.c	/^  GIcon *gicon;$/;"	m	struct:__anon16	file:	access:public
gtk_box_repack	midori-view.c	/^gtk_box_repack (GtkBox*    box,$/;"	f	file:	signature:(GtkBox* box, GtkWidget* child)
gtk_entry_borders	gtkiconentry.c	/^gtk_entry_borders (GtkEntry* entry,$/;"	f	file:	signature:(GtkEntry* entry, gint* xborder, gint* yborder, gboolean* interior_focus, gint* focus_width)
gtk_entry_draw_text	gtkiconentry.c	/^gtk_entry_draw_text (GtkEntry *entry)$/;"	f	file:	signature:(GtkEntry *entry)
gtk_entry_get_pixel_ranges	gtkiconentry.c	/^gtk_entry_get_pixel_ranges (GtkEntry  *entry,$/;"	f	file:	signature:(GtkEntry *entry, gint **ranges, gint *n_ranges)
gtk_entry_get_text_area_size	gtkiconentry.c	/^gtk_entry_get_text_area_size (GtkEntry *entry,$/;"	f	file:	signature:(GtkEntry *entry, gint *x, gint *y, gint *width, gint *height)
gtk_icon_entry_button_press	gtkiconentry.c	/^gtk_icon_entry_button_press (GtkWidget *widget, GdkEventButton *event)$/;"	f	file:	signature:(GtkWidget *widget, GdkEventButton *event)
gtk_icon_entry_button_press	gtkiconentry.c	/^static gint gtk_icon_entry_button_press      (GtkWidget            *widget,$/;"	p	file:	signature:(GtkWidget *widget, GdkEventButton *event)
gtk_icon_entry_button_release	gtkiconentry.c	/^gtk_icon_entry_button_release (GtkWidget *widget, GdkEventButton *event)$/;"	f	file:	signature:(GtkWidget *widget, GdkEventButton *event)
gtk_icon_entry_button_release	gtkiconentry.c	/^static gint gtk_icon_entry_button_release    (GtkWidget            *widget,$/;"	p	file:	signature:(GtkWidget *widget, GdkEventButton *event)
gtk_icon_entry_class_init	gtkiconentry.c	/^gtk_icon_entry_class_init (GtkIconEntryClass *klass)$/;"	f	file:	signature:(GtkIconEntryClass *klass)
gtk_icon_entry_dispose	gtkiconentry.c	/^gtk_icon_entry_dispose (GObject *obj)$/;"	f	file:	signature:(GObject *obj)
gtk_icon_entry_dispose	gtkiconentry.c	/^static void gtk_icon_entry_dispose           (GObject              *obj);$/;"	p	file:	signature:(GObject *obj)
gtk_icon_entry_editable_init	gtkiconentry.c	/^gtk_icon_entry_editable_init (GtkEditableClass *iface)$/;"	f	file:	signature:(GtkEditableClass *iface)
gtk_icon_entry_editable_init	gtkiconentry.c	/^static void gtk_icon_entry_editable_init     (GtkEditableClass     *iface);$/;"	p	file:	signature:(GtkEditableClass *iface)
gtk_icon_entry_enter_notify	gtkiconentry.c	/^gtk_icon_entry_enter_notify (GtkWidget *widget, GdkEventCrossing *event)$/;"	f	file:	signature:(GtkWidget *widget, GdkEventCrossing *event)
gtk_icon_entry_enter_notify	gtkiconentry.c	/^static gint gtk_icon_entry_enter_notify      (GtkWidget            *widget,$/;"	p	file:	signature:(GtkWidget *widget, GdkEventCrossing *event)
gtk_icon_entry_expose	gtkiconentry.c	/^gtk_icon_entry_expose (GtkWidget *widget, GdkEventExpose *event)$/;"	f	file:	signature:(GtkWidget *widget, GdkEventExpose *event)
gtk_icon_entry_expose	gtkiconentry.c	/^static gint gtk_icon_entry_expose            (GtkWidget            *widget,$/;"	p	file:	signature:(GtkWidget *widget, GdkEventExpose *event)
gtk_icon_entry_finalize	gtkiconentry.c	/^gtk_icon_entry_finalize (GObject *obj)$/;"	f	file:	signature:(GObject *obj)
gtk_icon_entry_finalize	gtkiconentry.c	/^static void gtk_icon_entry_finalize          (GObject              *obj);$/;"	p	file:	signature:(GObject *obj)
gtk_icon_entry_get_gicon	gtkiconentry.c	/^gtk_icon_entry_get_gicon (const GtkIconEntry *entry,$/;"	f	signature:(const GtkIconEntry *entry, GtkIconEntryPosition icon_pos)
gtk_icon_entry_get_icon_highlight	gtkiconentry.c	/^gtk_icon_entry_get_icon_highlight (const GtkIconEntry *entry,$/;"	f	signature:(const GtkIconEntry *entry, GtkIconEntryPosition icon_pos)
gtk_icon_entry_get_pixbuf	gtkiconentry.c	/^gtk_icon_entry_get_pixbuf (const GtkIconEntry *entry,$/;"	f	signature:(const GtkIconEntry *entry, GtkIconEntryPosition icon_pos)
gtk_icon_entry_get_property	gtkiconentry.c	/^gtk_icon_entry_get_property (GObject      *object,$/;"	f	file:	signature:(GObject *object, guint prop_id, GValue *value, GParamSpec *pspec)
gtk_icon_entry_get_property	gtkiconentry.c	/^static void gtk_icon_entry_get_property      (GObject              *object,$/;"	p	file:	signature:(GObject *object, guint prop_id, GValue *value, GParamSpec *pspec)
gtk_icon_entry_init	gtkiconentry.c	/^gtk_icon_entry_init (GtkIconEntry *entry)$/;"	f	file:	signature:(GtkIconEntry *entry)
gtk_icon_entry_leave_notify	gtkiconentry.c	/^gtk_icon_entry_leave_notify (GtkWidget *widget, GdkEventCrossing *event)$/;"	f	file:	signature:(GtkWidget *widget, GdkEventCrossing *event)
gtk_icon_entry_leave_notify	gtkiconentry.c	/^static gint gtk_icon_entry_leave_notify      (GtkWidget            *widget,$/;"	p	file:	signature:(GtkWidget *widget, GdkEventCrossing *event)
gtk_icon_entry_map	gtkiconentry.c	/^gtk_icon_entry_map (GtkWidget *widget)$/;"	f	file:	signature:(GtkWidget *widget)
gtk_icon_entry_map	gtkiconentry.c	/^static void gtk_icon_entry_map               (GtkWidget            *widget);$/;"	p	file:	signature:(GtkWidget *widget)
gtk_icon_entry_new	gtkiconentry.c	/^gtk_icon_entry_new (void)$/;"	f	signature:(void)
gtk_icon_entry_new	gtkiconentry.h	36;"	d
gtk_icon_entry_realize	gtkiconentry.c	/^gtk_icon_entry_realize (GtkWidget *widget)$/;"	f	file:	signature:(GtkWidget *widget)
gtk_icon_entry_realize	gtkiconentry.c	/^static void gtk_icon_entry_realize           (GtkWidget            *widget);$/;"	p	file:	signature:(GtkWidget *widget)
gtk_icon_entry_set_cursor	gtkiconentry.c	/^gtk_icon_entry_set_cursor (const GtkIconEntry *entry,$/;"	f	signature:(const GtkIconEntry *entry, GtkIconEntryPosition icon_pos, GdkCursorType cursor_type)
gtk_icon_entry_set_icon_from_gicon	gtkiconentry.c	/^gtk_icon_entry_set_icon_from_gicon (const GtkIconEntry *entry,$/;"	f	signature:(const GtkIconEntry *entry, GtkIconEntryPosition icon_pos, GIcon *icon)
gtk_icon_entry_set_icon_from_icon_name	gtkiconentry.c	/^gtk_icon_entry_set_icon_from_icon_name (GtkIconEntry *entry,$/;"	f	signature:(GtkIconEntry *entry, GtkIconEntryPosition icon_pos, const gchar *icon_name)
gtk_icon_entry_set_icon_from_icon_name	gtkiconentry.h	38;"	d
gtk_icon_entry_set_icon_from_pixbuf	gtkiconentry.c	/^gtk_icon_entry_set_icon_from_pixbuf (GtkEntry*            entry,$/;"	f	signature:(GtkEntry* entry, GtkEntryIconPosition position, GdkPixbuf* pixbuf)
gtk_icon_entry_set_icon_from_pixbuf	gtkiconentry.c	/^gtk_icon_entry_set_icon_from_pixbuf (GtkIconEntry *entry,$/;"	f	signature:(GtkIconEntry *entry, GtkIconEntryPosition icon_pos, GdkPixbuf *pixbuf)
gtk_icon_entry_set_icon_from_pixbuf	gtkiconentry.h	/^    gtk_icon_entry_set_icon_from_pixbuf (GtkEntry*            entry,$/;"	p	signature:(GtkEntry* entry, GtkEntryIconPosition position, GdkPixbuf* pixbuf)
gtk_icon_entry_set_icon_from_stock	gtkiconentry.c	/^gtk_icon_entry_set_icon_from_stock (GtkIconEntry *entry,$/;"	f	signature:(GtkIconEntry *entry, GtkIconEntryPosition icon_pos, const gchar *stock_id)
gtk_icon_entry_set_icon_from_stock	gtkiconentry.h	37;"	d
gtk_icon_entry_set_icon_highlight	gtkiconentry.c	/^gtk_icon_entry_set_icon_highlight (const GtkIconEntry *entry,$/;"	f	signature:(const GtkIconEntry *entry, GtkIconEntryPosition icon_pos, gboolean highlight)
gtk_icon_entry_set_icon_highlight	gtkiconentry.h	45;"	d
gtk_icon_entry_set_icon_internal	gtkiconentry.c	/^gtk_icon_entry_set_icon_internal (GtkIconEntry *entry,$/;"	f	file:	signature:(GtkIconEntry *entry, GtkIconEntryPosition icon_pos, GdkPixbuf *pixbuf)
gtk_icon_entry_set_icon_internal	gtkiconentry.c	/^static void gtk_icon_entry_set_icon_internal (GtkIconEntry         *entry,$/;"	p	file:	signature:(GtkIconEntry *entry, GtkIconEntryPosition icon_pos, GdkPixbuf *pixbuf)
gtk_icon_entry_set_icon_sensitive	gtkiconentry.c	/^gtk_icon_entry_set_icon_sensitive (const GtkIconEntry *icon_entry,$/;"	f	signature:(const GtkIconEntry *icon_entry, GtkIconEntryPosition icon_pos, gboolean sensitive)
gtk_icon_entry_set_progress_fraction	gtkiconentry.c	/^gtk_icon_entry_set_progress_fraction (GtkIconEntry *icon_entry,$/;"	f	signature:(GtkIconEntry *icon_entry, gdouble fraction)
gtk_icon_entry_set_progress_fraction	gtkiconentry.h	46;"	d
gtk_icon_entry_set_property	gtkiconentry.c	/^gtk_icon_entry_set_property (GObject      *object,$/;"	f	file:	signature:(GObject *object, guint prop_id, const GValue *value, GParamSpec *pspec)
gtk_icon_entry_set_property	gtkiconentry.c	/^static void gtk_icon_entry_set_property      (GObject              *object,$/;"	p	file:	signature:(GObject *object, guint prop_id, const GValue *value, GParamSpec *pspec)
gtk_icon_entry_set_tooltip	gtkiconentry.c	/^gtk_icon_entry_set_tooltip (const GtkIconEntry *entry,$/;"	f	signature:(const GtkIconEntry *entry, GtkIconEntryPosition icon_pos, const gchar *text)
gtk_icon_entry_set_tooltip	gtkiconentry.h	44;"	d
gtk_icon_entry_size_allocate	gtkiconentry.c	/^gtk_icon_entry_size_allocate (GtkWidget *widget, GtkAllocation *allocation)$/;"	f	file:	signature:(GtkWidget *widget, GtkAllocation *allocation)
gtk_icon_entry_size_allocate	gtkiconentry.c	/^static void gtk_icon_entry_size_allocate     (GtkWidget            *widget,$/;"	p	file:	signature:(GtkWidget *widget, GtkAllocation *allocation)
gtk_icon_entry_size_request	gtkiconentry.c	/^gtk_icon_entry_size_request (GtkWidget *widget, GtkRequisition *requisition)$/;"	f	file:	signature:(GtkWidget *widget, GtkRequisition *requisition)
gtk_icon_entry_size_request	gtkiconentry.c	/^static void gtk_icon_entry_size_request      (GtkWidget            *widget,$/;"	p	file:	signature:(GtkWidget *widget, GtkRequisition *requisition)
gtk_icon_entry_style_set	gtkiconentry.c	/^gtk_icon_entry_style_set (GtkWidget *widget, GtkStyle *prev_style)$/;"	f	file:	signature:(GtkWidget *widget, GtkStyle *prev_style)
gtk_icon_entry_style_set	gtkiconentry.c	/^static void gtk_icon_entry_style_set         (GtkWidget            *widget,$/;"	p	file:	signature:(GtkWidget *widget, GtkStyle *prev_style)
gtk_icon_entry_unmap	gtkiconentry.c	/^gtk_icon_entry_unmap (GtkWidget *widget)$/;"	f	file:	signature:(GtkWidget *widget)
gtk_icon_entry_unmap	gtkiconentry.c	/^static void gtk_icon_entry_unmap             (GtkWidget            *widget);$/;"	p	file:	signature:(GtkWidget *widget)
gtk_icon_entry_unrealize	gtkiconentry.c	/^gtk_icon_entry_unrealize (GtkWidget *widget)$/;"	f	file:	signature:(GtkWidget *widget)
gtk_icon_entry_unrealize	gtkiconentry.c	/^static void gtk_icon_entry_unrealize         (GtkWidget            *widget);$/;"	p	file:	signature:(GtkWidget *widget)
gtk_widget_button_press_event_cb	midori-view.c	/^gtk_widget_button_press_event_cb (WebKitWebView*  web_view,$/;"	f	file:	signature:(WebKitWebView* web_view, GdkEventButton* event, MidoriView* view)
gtk_widget_key_press_event_cb	midori-view.c	/^gtk_widget_key_press_event_cb (WebKitWebView* web_view,$/;"	f	file:	signature:(WebKitWebView* web_view, GdkEventKey* event, MidoriView* view)
gtk_widget_scroll_event_cb	midori-view.c	/^gtk_widget_scroll_event_cb (WebKitWebView*  web_view,$/;"	f	file:	signature:(WebKitWebView* web_view, GdkEventScroll* event, MidoriView* view)
has_selection	midori-view.c	/^    gboolean has_selection;$/;"	m	struct:_MidoriView	file:	access:public
highlight	gtkiconentry.c	/^  gboolean highlight;$/;"	m	struct:__anon16	file:	access:public
history	midori-app.c	/^    KatzeArray* history;$/;"	m	struct:_MidoriApp	file:	access:public
history	midori-browser.c	/^    KatzeArray* history;$/;"	m	struct:_MidoriBrowser	file:	access:public
history	midori-locationaction.c	/^    KatzeArray* history;$/;"	m	struct:_MidoriLocationAction	file:	access:public
hit_test	midori-view.c	/^    WebKitHitTestResult* hit_test;$/;"	m	struct:_MidoriView	file:	access:public
homepage	midori-websettings.c	/^    gchar* homepage;$/;"	m	struct:_MidoriWebSettings	file:	access:public
hostname	socket.c	/^	gchar *hostname;$/;"	m	struct:_SockConnectData	file:	access:public
hostname	socket.c	/^	gchar *hostname;$/;"	m	struct:_SockLookupData	file:	access:public
hostname	socket.h	/^	gchar *hostname;$/;"	m	struct:_SockInfo	access:public
hovered	gtkiconentry.c	/^  gboolean hovered;$/;"	m	struct:__anon16	file:	access:public
hpaned	midori-panedaction.c	/^    GtkWidget* hpaned;$/;"	m	struct:_MidoriPanedAction	file:	access:public
http_accept_language	midori-websettings.c	/^    gchar* http_accept_language;$/;"	m	struct:_MidoriWebSettings	file:	access:public
http_proxy	midori-websettings.c	/^    gchar* http_proxy;$/;"	m	struct:_MidoriWebSettings	file:	access:public
http_proxy_port	midori-websettings.c	/^    gint http_proxy_port;$/;"	m	struct:_MidoriWebSettings	file:	access:public
icon	midori-view.c	/^    GdkPixbuf* icon;$/;"	m	struct:_MidoriView	file:	access:public
icon_file	midori-view.c	/^    gchar* icon_file;$/;"	m	struct:__anon6	file:	access:public
icon_name	gtkiconentry.c	/^  gchar *icon_name;$/;"	m	struct:__anon16	file:	access:public
icon_released_id	gtkiconentry.c	/^  gulong icon_released_id;$/;"	m	struct:_GtkIconEntryPrivate	file:	access:public
icon_theme_changed	gtkiconentry.c	/^icon_theme_changed (GtkIconEntry *entry)$/;"	f	file:	signature:(GtkIconEntry *entry)
icon_theme_changed	gtkiconentry.c	/^static void icon_theme_changed               (GtkIconEntry         *entry);$/;"	p	file:	signature:(GtkIconEntry *entry)
icon_uri	midori-view.c	/^    gchar* icon_uri;$/;"	m	struct:_MidoriView	file:	access:public
icon_uri	midori-view.c	/^    gchar* icon_uri;$/;"	m	struct:__anon6	file:	access:public
icons	gtkiconentry.c	/^  EntryIconInfo icons[MAX_ICONS];$/;"	m	struct:_GtkIconEntryPrivate	file:	access:public
id	socket.c	/^	gint id;$/;"	m	struct:_SockConnectData	file:	access:public
ident_string	midori-websettings.c	/^    gchar* ident_string;$/;"	m	struct:_MidoriWebSettings	file:	access:public
identify_as	midori-websettings.c	/^    MidoriIdentity identify_as : 3;$/;"	m	struct:_MidoriWebSettings	file:	access:public
insensitive	gtkiconentry.c	/^  gboolean insensitive;$/;"	m	struct:__anon16	file:	access:public
insertUrllist	midori-browser.c	/^static urllistFilter *insertUrllist(urllistFilter *h);$/;"	p	file:	signature:(urllistFilter *h)
inspector	midori-browser.c	/^    GtkWidget* inspector;$/;"	m	struct:_MidoriBrowser	file:	access:public
inspector_view	midori-browser.c	/^    GtkWidget* inspector_view;$/;"	m	struct:_MidoriBrowser	file:	access:public
instance	midori-app.c	/^    MidoriAppInstance instance;$/;"	m	struct:_MidoriApp	file:	access:public
io_tag	socket.c	/^	guint io_tag;$/;"	m	struct:_SockConnectData	file:	access:public
io_tag	socket.c	/^	guint io_tag;$/;"	m	struct:_SockLookupData	file:	access:public
io_timeout	socket.c	/^static guint io_timeout = 60;$/;"	v	file:
is_nonblocking_mode	socket.c	/^static gboolean is_nonblocking_mode(gint fd)$/;"	f	file:	signature:(gint fd)
item	midori-view.c	/^    KatzeItem* item;$/;"	m	struct:_MidoriView	file:	access:public
jmpenv	socket.c	/^static sigjmp_buf jmpenv;$/;"	v	file:
katze_array_from_netscape_file	midori-array.c	/^katze_array_from_netscape_file (KatzeArray* array,$/;"	f	file:	signature:(KatzeArray* array, const gchar* filename)
katze_array_from_opera_file	midori-array.c	/^katze_array_from_opera_file (KatzeArray* array,$/;"	f	file:	signature:(KatzeArray* array, const gchar* filename)
katze_array_from_sqlite	midori-array.c	/^katze_array_from_sqlite (sqlite3*     db,$/;"	f	signature:(sqlite3* db, const gchar* sqlcmd)
katze_array_from_sqlite	midori-array.h	/^katze_array_from_sqlite (sqlite3*     db,$/;"	p	signature:(sqlite3* db, const gchar* sqlcmd)
katze_array_from_statement	midori-array.c	/^katze_array_from_statement (sqlite3_stmt* stmt)$/;"	f	signature:(sqlite3_stmt* stmt)
katze_array_from_statement	midori-array.h	/^katze_array_from_statement (sqlite3_stmt* stmt);$/;"	p	signature:(sqlite3_stmt* stmt)
katze_array_from_xmlDocPtr	midori-array.c	/^katze_array_from_xmlDocPtr (KatzeArray* array,$/;"	f	file:	signature:(KatzeArray* array, xmlDocPtr doc)
katze_array_from_xmlNodePtr	midori-array.c	/^katze_array_from_xmlNodePtr (xmlNodePtr cur)$/;"	f	file:	signature:(xmlNodePtr cur)
katze_array_to_netscape_html	midori-array.c	/^katze_array_to_netscape_html (KatzeArray* array,$/;"	f	file:	signature:(KatzeArray* array, GError** error)
katze_array_to_xbel	midori-array.c	/^katze_array_to_xbel (KatzeArray* array,$/;"	f	file:	signature:(KatzeArray* array, GError** error)
katze_item_from_xmlNodePtr	midori-array.c	/^katze_item_from_xmlNodePtr (xmlNodePtr cur)$/;"	f	file:	signature:(xmlNodePtr cur)
katze_item_metadata_to_xbel	midori-array.c	/^katze_item_metadata_to_xbel (KatzeItem* item)$/;"	f	file:	signature:(KatzeItem* item)
katze_item_metadata_to_xbel	midori-array.c	/^katze_item_metadata_to_xbel (KatzeItem* item);$/;"	p	file:	signature:(KatzeItem* item)
katze_item_set_value_from_column	midori-array.c	/^katze_item_set_value_from_column (sqlite3_stmt* stmt,$/;"	f	file:	signature:(sqlite3_stmt* stmt, gint column, KatzeItem* item)
katze_net_icon_priv_free	midori-view.c	/^katze_net_icon_priv_free (KatzeNetIconPriv* priv)$/;"	f	file:	signature:(KatzeNetIconPriv* priv)
katze_net_icon_status_cb	midori-view.c	/^katze_net_icon_status_cb (KatzeNetRequest*  request,$/;"	f	file:	signature:(KatzeNetRequest* request, KatzeNetIconPriv* priv)
katze_net_icon_transfer_cb	midori-view.c	/^katze_net_icon_transfer_cb (KatzeNetRequest*  request,$/;"	f	file:	signature:(KatzeNetRequest* request, KatzeNetIconPriv* priv)
katze_net_object_maybe_unref	midori-view.c	/^katze_net_object_maybe_unref (gpointer object)$/;"	f	file:	signature:(gpointer object)
katze_str_equal	midori-array.c	31;"	d	file:
katze_unescape_html	midori-array.c	/^katze_unescape_html (const gchar* text)$/;"	f	file:	signature:(const gchar* text)
katze_xbel_parse_info	midori-array.c	/^katze_xbel_parse_info (KatzeItem* item,$/;"	f	file:	signature:(KatzeItem* item, xmlNodePtr cur)
katze_xbel_parse_info	midori-array.c	/^katze_xbel_parse_info (KatzeItem* item,$/;"	p	file:	signature:(KatzeItem* item, xmlNodePtr cur)
key	midori-locationaction.c	/^    gchar* key;$/;"	m	struct:_MidoriLocationAction	file:	access:public
key_file	midori-extension.c	/^    GKeyFile* key_file;$/;"	m	struct:_MidoriExtensionPrivate	file:	access:public
kinetic_scrolling	midori-websettings.c	/^    gboolean kinetic_scrolling : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
l_trim	midori-browser.c	/^char * l_trim(char * szOutput, const char *szInput)$/;"	f	signature:(char * szOutput, const char *szInput)
l_trim	midori-conf.c	/^char * l_trim(char * szOutput, const char *szInput)$/;"	f	signature:(char * szOutput, const char *szInput)
label	midori-panel.c	/^    gchar* label;$/;"	m	struct:__anon29	file:	access:public
label	sokoke.h	/^    gchar* label;$/;"	m	struct:__anon15	access:public
labelbar	midori-panel.c	/^    GtkWidget* labelbar;$/;"	m	struct:_MidoriPanel	file:	access:public
last_panel_page	midori-websettings.c	/^    gint last_panel_page;$/;"	m	struct:_MidoriWebSettings	file:	access:public
last_panel_position	midori-websettings.c	/^    gint last_panel_position;$/;"	m	struct:_MidoriWebSettings	file:	access:public
last_proxy	midori-searchaction.c	/^    GtkWidget* last_proxy;$/;"	m	struct:_MidoriSearchAction	file:	access:public
last_tab_size	midori-browser.c	/^    gint last_tab_size;$/;"	m	struct:_MidoriBrowser	file:	access:public
last_web_search	midori-browser.c	/^    guint last_web_search;$/;"	m	struct:_MidoriBrowser	file:	access:public
last_web_search	midori-websettings.c	/^    gint last_web_search;$/;"	m	struct:_MidoriWebSettings	file:	access:public
last_window_height	midori-browser.c	/^    gint last_window_width, last_window_height;$/;"	m	struct:_MidoriBrowser	file:	access:public
last_window_height	midori-websettings.c	/^    gint last_window_height;$/;"	m	struct:_MidoriWebSettings	file:	access:public
last_window_state	midori-websettings.c	/^    MidoriWindowState last_window_state : 2;$/;"	m	struct:_MidoriWebSettings	file:	access:public
last_window_width	midori-browser.c	/^    gint last_window_width, last_window_height;$/;"	m	struct:_MidoriBrowser	file:	access:public
last_window_width	midori-websettings.c	/^    gint last_window_width;$/;"	m	struct:_MidoriWebSettings	file:	access:public
length	midori-extension.c	/^    gsize length;$/;"	m	struct:__anon34	file:	access:public
link_uri	midori-view.c	/^    gchar* link_uri;$/;"	m	struct:_MidoriView	file:	access:public
list_netscape_plugins	midori-view.c	/^static gchar* list_netscape_plugins ()$/;"	f	file:
list_video_formats	midori-view.c	/^list_video_formats ()$/;"	f	file:
load_on_startup	midori-websettings.c	/^    MidoriStartup load_on_startup : 2;$/;"	m	struct:_MidoriWebSettings	file:	access:public
load_status	midori-view.c	/^    MidoriLoadStatus load_status;$/;"	m	struct:_MidoriView	file:	access:public
location_entry_search	midori-browser.c	/^    gchar* location_entry_search;$/;"	m	struct:_MidoriBrowser	file:	access:public
location_entry_search	midori-websettings.c	/^    gchar* location_entry_search;$/;"	m	struct:_MidoriWebSettings	file:	access:public
lookup_data	socket.c	/^	SockLookupData *lookup_data;$/;"	m	struct:_SockConnectData	file:	access:public
lsettings	midori-extension.c	/^    GList* lsettings;$/;"	m	struct:_MidoriExtensionPrivate	file:	access:public
main	main.c	/^main (int    argc,$/;"	f	signature:(int argc, char** argv)
main	midori-conf.c	/^void main()$/;"	f
maximum_cache_size	midori-websettings.c	/^    gint maximum_cache_size;$/;"	m	struct:_MidoriWebSettings	file:	access:public
maximum_cookie_age	midori-websettings.c	/^    gint maximum_cookie_age;$/;"	m	struct:_MidoriWebSettings	file:	access:public
maximum_history_age	midori-browser.c	/^    guint maximum_history_age;$/;"	m	struct:_MidoriBrowser	file:	access:public
maximum_history_age	midori-websettings.c	/^    gint maximum_history_age;$/;"	m	struct:_MidoriWebSettings	file:	access:public
me_setting_free	midori-extension.c	/^void me_setting_free (gpointer setting)$/;"	f	signature:(gpointer setting)
me_setting_install	midori-extension.c	104;"	d	file:
me_setting_type	midori-extension.c	114;"	d	file:
memory	midori-view.c	/^    GHashTable* memory;$/;"	m	struct:_MidoriView	file:	access:public
menu_item	midori-view.c	/^    GtkWidget* menu_item;$/;"	m	struct:_MidoriView	file:	access:public
menu_tools	midori-browser.c	/^    GtkWidget* menu_tools;$/;"	m	struct:_MidoriBrowser	file:	access:public
menubar	midori-browser.c	/^    GtkWidget* menubar;$/;"	m	struct:_MidoriBrowser	file:	access:public
middle_click_opens_selection	midori-view.c	/^    gboolean middle_click_opens_selection;$/;"	m	struct:_MidoriView	file:	access:public
middle_click_opens_selection	midori-websettings.c	/^    gboolean middle_click_opens_selection : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
midori_app_add_browser	midori-app.c	/^midori_app_add_browser (MidoriApp*     app,$/;"	f	signature:(MidoriApp* app, MidoriBrowser* browser)
midori_app_add_browser	midori-app.h	/^midori_app_add_browser            (MidoriApp*         app,$/;"	p	signature:(MidoriApp* app, MidoriBrowser* browser)
midori_app_add_browser_cb	main.c	/^midori_app_add_browser_cb (MidoriApp*     app,$/;"	f	file:	signature:(MidoriApp* app, MidoriBrowser* browser, KatzeNet* net)
midori_app_class_init	midori-app.c	/^midori_app_class_init (MidoriAppClass* class)$/;"	f	file:	signature:(MidoriAppClass* class)
midori_app_command_received	midori-app.c	/^midori_app_command_received (MidoriApp*   app,$/;"	f	file:	signature:(MidoriApp* app, const gchar* command, gchar** uris, GdkScreen* screen)
midori_app_create_browser	midori-app.c	/^midori_app_create_browser (MidoriApp* app)$/;"	f	signature:(MidoriApp* app)
midori_app_create_browser	midori-app.h	/^midori_app_create_browser         (MidoriApp*         app);$/;"	p	signature:(MidoriApp* app)
midori_app_create_instance	midori-app.c	/^midori_app_create_instance (MidoriApp* app)$/;"	f	file:	signature:(MidoriApp* app)
midori_app_finalize	midori-app.c	/^midori_app_finalize (GObject* object)$/;"	f	file:	signature:(GObject* object)
midori_app_finalize	midori-app.c	/^midori_app_finalize (GObject* object);$/;"	p	file:	signature:(GObject* object)
midori_app_get_browser	midori-app.c	/^midori_app_get_browser (MidoriApp* app)$/;"	f	signature:(MidoriApp* app)
midori_app_get_browser	midori-app.h	/^midori_app_get_browser            (MidoriApp*         app);$/;"	p	signature:(MidoriApp* app)
midori_app_get_browsers	midori-app.c	/^midori_app_get_browsers (MidoriApp* app)$/;"	f	signature:(MidoriApp* app)
midori_app_get_browsers	midori-app.h	/^midori_app_get_browsers           (MidoriApp*         app);$/;"	p	signature:(MidoriApp* app)
midori_app_get_property	midori-app.c	/^midori_app_get_property (GObject*    object,$/;"	f	file:	signature:(GObject* object, guint prop_id, GValue* value, GParamSpec* pspec)
midori_app_get_property	midori-app.c	/^midori_app_get_property (GObject*    object,$/;"	p	file:	signature:(GObject* object, guint prop_id, GValue* value, GParamSpec* pspec)
midori_app_init	midori-app.c	/^midori_app_init (MidoriApp* app)$/;"	f	file:	signature:(MidoriApp* app)
midori_app_instance_is_running	midori-app.c	/^midori_app_instance_is_running (MidoriApp* app)$/;"	f	signature:(MidoriApp* app)
midori_app_instance_is_running	midori-app.h	/^midori_app_instance_is_running    (MidoriApp*         app);$/;"	p	signature:(MidoriApp* app)
midori_app_instance_send_activate	midori-app.c	/^midori_app_instance_send_activate (MidoriApp* app)$/;"	f	signature:(MidoriApp* app)
midori_app_instance_send_activate	midori-app.h	/^midori_app_instance_send_activate (MidoriApp*         app);$/;"	p	signature:(MidoriApp* app)
midori_app_instance_send_new_browser	midori-app.c	/^midori_app_instance_send_new_browser (MidoriApp* app)$/;"	f	signature:(MidoriApp* app)
midori_app_instance_send_new_browser	midori-app.h	/^midori_app_instance_send_new_browser (MidoriApp*      app);$/;"	p	signature:(MidoriApp* app)
midori_app_instance_send_uris	midori-app.c	/^midori_app_instance_send_uris (MidoriApp* app,$/;"	f	signature:(MidoriApp* app, gchar** uris)
midori_app_instance_send_uris	midori-app.h	/^midori_app_instance_send_uris     (MidoriApp*         app,$/;"	p	signature:(MidoriApp* app, gchar** uris)
midori_app_io_channel_watch_cb	midori-app.c	/^midori_app_io_channel_watch_cb (GIOChannel*  channel,$/;"	f	file:	signature:(GIOChannel* channel, GIOCondition condition, MidoriApp* app)
midori_app_new	midori-app.c	/^midori_app_new (void)$/;"	f	signature:(void)
midori_app_new	midori-app.h	/^midori_app_new                    (void);$/;"	p	signature:(void)
midori_app_osso_rpc_handler_cb	midori-app.c	/^midori_app_osso_rpc_handler_cb (const gchar* interface,$/;"	f	file:	signature:(const gchar* interface, const gchar* method, GArray* arguments, gpointer data, osso_rpc_t * retval)
midori_app_quit	midori-app.c	/^midori_app_quit (MidoriApp* app)$/;"	f	signature:(MidoriApp* app)
midori_app_quit	midori-app.h	/^midori_app_quit                   (MidoriApp*         app);$/;"	p	signature:(MidoriApp* app)
midori_app_quit_cb	main.c	/^midori_app_quit_cb (MidoriBrowser* browser,$/;"	f	file:	signature:(MidoriBrowser* browser, KatzeArray* session)
midori_app_raise_window	midori-app.c	/^midori_app_raise_window (GtkWindow* window,$/;"	f	file:	signature:(GtkWindow* window, GdkScreen* screen)
midori_app_send_command	midori-app.c	/^midori_app_send_command (MidoriApp* app,$/;"	f	signature:(MidoriApp* app, gchar** command)
midori_app_send_command	midori-app.h	/^midori_app_send_command           (MidoriApp*         app,$/;"	p	signature:(MidoriApp* app, gchar** command)
midori_app_send_notification	midori-app.c	/^midori_app_send_notification (MidoriApp*   app,$/;"	f	signature:(MidoriApp* app, const gchar* title, const gchar* message)
midori_app_send_notification	midori-app.h	/^midori_app_send_notification      (MidoriApp*         app,$/;"	p	signature:(MidoriApp* app, const gchar* title, const gchar* message)
midori_app_set_property	midori-app.c	/^midori_app_set_property (GObject*      object,$/;"	f	file:	signature:(GObject* object, guint prop_id, const GValue* value, GParamSpec* pspec)
midori_app_set_property	midori-app.c	/^midori_app_set_property (GObject*      object,$/;"	p	file:	signature:(GObject* object, guint prop_id, const GValue* value, GParamSpec* pspec)
midori_app_setup	midori-app.c	/^midori_app_setup (gchar** argument_vector)$/;"	f	signature:(gchar** argument_vector)
midori_app_setup	midori-app.h	/^midori_app_setup                  (gchar**            argument_vector);$/;"	p	signature:(gchar** argument_vector)
midori_array_from_file	midori-array.c	/^midori_array_from_file (KatzeArray*  array,$/;"	f	signature:(KatzeArray* array, const gchar* filename, const gchar* format, GError** error)
midori_array_from_file	midori-array.h	/^midori_array_from_file (KatzeArray*  array,$/;"	p	signature:(KatzeArray* array, const gchar* filename, const gchar* format, GError** error)
midori_array_query	midori-array.c	/^midori_array_query (KatzeArray*  bookmarks,$/;"	f	signature:(KatzeArray* bookmarks, const gchar* fields, const gchar* condition, const gchar* value)
midori_array_query	midori-array.h	/^midori_array_query     (KatzeArray*  array,$/;"	p	signature:(KatzeArray* array, const gchar* fields, const gchar* condition, const gchar* value)
midori_array_to_file	midori-array.c	/^midori_array_to_file (KatzeArray*  array,$/;"	f	signature:(KatzeArray* array, const gchar* filename, const gchar* format, GError** error)
midori_array_to_file	midori-array.h	/^midori_array_to_file   (KatzeArray*  array,$/;"	p	signature:(KatzeArray* array, const gchar* filename, const gchar* format, GError** error)
midori_array_to_file_format	midori-array.c	/^midori_array_to_file_format (KatzeArray*  array,$/;"	f	file:	signature:(KatzeArray* array, const gchar* filename, const gchar* format, GError** error)
midori_bookmark_folder_button_get_active	midori-browser.c	/^midori_bookmark_folder_button_get_active (GtkWidget* combo)$/;"	f	file:	signature:(GtkWidget* combo)
midori_bookmark_folder_button_new	midori-browser.c	/^midori_bookmark_folder_button_new (KatzeArray*  array,$/;"	f	file:	signature:(KatzeArray* array, gboolean new_bookmark, const gchar* selected)
midori_bookmarkbar_activate_item_alt	midori-browser.c	/^midori_bookmarkbar_activate_item_alt (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, KatzeItem* item, guint button, MidoriBrowser* browser)
midori_bookmarkbar_clear	midori-browser.c	/^midori_bookmarkbar_clear (GtkWidget* toolbar);$/;"	p	file:	signature:(GtkWidget* toolbar)
midori_bookmarkbar_populate	midori-browser.c	/^midori_bookmarkbar_populate (MidoriBrowser* browser);$/;"	p	file:	signature:(MidoriBrowser* browser)
midori_bookmarks_add_item_cb	main.c	/^midori_bookmarks_add_item_cb (KatzeArray* array,$/;"	f	file:	signature:(KatzeArray* array, KatzeItem* item, sqlite3* db)
midori_bookmarks_export_array_db	midori-browser.c	/^midori_bookmarks_export_array_db (sqlite3*     db,$/;"	p	file:	signature:(sqlite3* db, KatzeArray* array, const gchar* folder)
midori_bookmarks_import	main.c	/^midori_bookmarks_import (const gchar* filename,$/;"	f	file:	signature:(const gchar* filename, sqlite3* db)
midori_bookmarks_import_array_db	midori-browser.c	/^midori_bookmarks_import_array_db (sqlite3*    db,$/;"	p	file:	signature:(sqlite3* db, KatzeArray* array, gchar* folder)
midori_bookmarks_initialize	main.c	/^midori_bookmarks_initialize (KatzeArray*  array,$/;"	f	file:	signature:(KatzeArray* array, const gchar* filename, char** errmsg)
midori_bookmarks_remove_item_cb	main.c	/^midori_bookmarks_remove_item_cb (KatzeArray* array,$/;"	f	file:	signature:(KatzeArray* array, KatzeItem* item, sqlite3* db)
midori_browser_action_last_session_activate_cb	main.c	/^midori_browser_action_last_session_activate_cb (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
midori_browser_activate_action	midori-browser.h	/^midori_browser_activate_action        (MidoriBrowser*     browser,$/;"	p	signature:(MidoriBrowser* browser, const gchar* name)
midori_browser_add_item	midori-browser.h	/^midori_browser_add_item               (MidoriBrowser*     browser,$/;"	p	signature:(MidoriBrowser* browser, KatzeItem* item)
midori_browser_add_speed_dial	midori-browser.c	/^midori_browser_add_speed_dial (MidoriBrowser* browser)$/;"	f	file:	signature:(MidoriBrowser* browser)
midori_browser_add_speed_dial	midori-browser.c	/^midori_browser_add_speed_dial (MidoriBrowser* browser);$/;"	p	file:	signature:(MidoriBrowser* browser)
midori_browser_add_tab	midori-browser.h	/^midori_browser_add_tab                (MidoriBrowser*     browser,$/;"	p	signature:(MidoriBrowser* browser, GtkWidget* widget)
midori_browser_add_uri	midori-browser.h	/^midori_browser_add_uri                (MidoriBrowser*     browser,$/;"	p	signature:(MidoriBrowser* browser, const gchar* uri)
midori_browser_block_action	midori-browser.h	/^midori_browser_block_action           (MidoriBrowser*     browser,$/;"	p	signature:(MidoriBrowser* browser, GtkAction* action)
midori_browser_bookmark_popup	midori-browser.c	/^midori_browser_bookmark_popup (GtkWidget*      widget,$/;"	p	file:	signature:(GtkWidget* widget, GdkEventButton* event, KatzeItem* item, MidoriBrowser* browser)
midori_browser_class_init	midori-browser.c	/^midori_browser_class_init (MidoriBrowserClass* class)$/;"	f	file:	signature:(MidoriBrowserClass* class)
midori_browser_delete_event	midori-browser.c	/^midori_browser_delete_event (GtkWidget*   widget,$/;"	f	file:	signature:(GtkWidget* widget, GdkEventAny* event)
midori_browser_delete_event_cb	midori-app.c	/^midori_browser_delete_event_cb (MidoriBrowser* browser,$/;"	f	file:	signature:(MidoriBrowser* browser, GdkEvent* event, MidoriApp* app)
midori_browser_destroy_cb	midori-app.c	/^midori_browser_destroy_cb (MidoriBrowser* browser,$/;"	f	file:	signature:(MidoriBrowser* browser, MidoriApp* app)
midori_browser_dispose	midori-browser.c	/^midori_browser_dispose (GObject* object);$/;"	p	file:	signature:(GObject* object)
midori_browser_edit_bookmark_add_speed_dial_cb	midori-browser.c	/^midori_browser_edit_bookmark_add_speed_dial_cb (GtkWidget* button,$/;"	f	file:	signature:(GtkWidget* button, KatzeItem* bookmark)
midori_browser_edit_bookmark_dialog_new	midori-browser.c	/^midori_browser_edit_bookmark_dialog_new (MidoriBrowser* browser,$/;"	f	signature:(MidoriBrowser* browser, KatzeItem* bookmark, gboolean new_bookmark, gboolean is_folder)
midori_browser_edit_bookmark_title_changed_cb	midori-browser.c	/^midori_browser_edit_bookmark_title_changed_cb (GtkEntry*      entry,$/;"	f	file:	signature:(GtkEntry* entry, GtkDialog* dialog)
midori_browser_finalize	midori-browser.c	/^midori_browser_finalize (GObject* object);$/;"	p	file:	signature:(GObject* object)
midori_browser_focus_in_event_cb	midori-app.c	/^midori_browser_focus_in_event_cb (MidoriBrowser* browser,$/;"	f	file:	signature:(MidoriBrowser* browser, GdkEventFocus* event, MidoriApp* app)
midori_browser_foreach	midori-browser.c	/^midori_browser_foreach (MidoriBrowser* browser,$/;"	f	signature:(MidoriBrowser* browser, GtkCallback callback, gpointer callback_data)
midori_browser_foreach	midori-browser.h	/^midori_browser_foreach                (MidoriBrowser*     browser,$/;"	p	signature:(MidoriBrowser* browser, GtkCallback callback, gpointer callback_data)
midori_browser_get_action_group	midori-browser.h	/^midori_browser_get_action_group       (MidoriBrowser*     browser);$/;"	p	signature:(MidoriBrowser* browser)
midori_browser_get_current_page	midori-browser.h	/^midori_browser_get_current_page       (MidoriBrowser*     browser);$/;"	p	signature:(MidoriBrowser* browser)
midori_browser_get_current_tab	midori-browser.c	/^    gtk_widget_grab_focus (midori_browser_get_current_tab (browser));$/;"	p	file:
midori_browser_get_current_tab	midori-browser.h	/^midori_browser_get_current_tab        (MidoriBrowser*     browser);$/;"	p	signature:(MidoriBrowser* browser)
midori_browser_get_current_uri	midori-browser.h	/^midori_browser_get_current_uri        (MidoriBrowser*     browser);$/;"	p	signature:(MidoriBrowser* browser)
midori_browser_get_for_widget	midori-browser.h	/^midori_browser_get_for_widget         (GtkWidget*         widget);$/;"	p	signature:(GtkWidget* widget)
midori_browser_get_nth_tab	midori-browser.h	/^midori_browser_get_nth_tab            (MidoriBrowser*     browser,$/;"	p	signature:(MidoriBrowser* browser, gint n)
midori_browser_get_property	midori-browser.c	/^midori_browser_get_property (GObject*    object,$/;"	p	file:	signature:(GObject* object, guint prop_id, GValue* value, GParamSpec* pspec)
midori_browser_get_proxy_array	midori-browser.h	/^midori_browser_get_proxy_array        (MidoriBrowser*     browser);$/;"	p	signature:(MidoriBrowser* browser)
midori_browser_get_proxy_items	midori-browser.h	/^midori_browser_get_proxy_items        (MidoriBrowser*     browser);$/;"	p	signature:(MidoriBrowser* browser)
midori_browser_get_settings	midori-browser.c	/^midori_browser_get_settings (MidoriBrowser* browser)$/;"	f	signature:(MidoriBrowser* browser)
midori_browser_get_settings	midori-browser.h	/^midori_browser_get_settings           (MidoriBrowser*     browser);$/;"	p	signature:(MidoriBrowser* browser)
midori_browser_get_tab	midori-browser.h	153;"	d
midori_browser_get_tabs	midori-browser.h	/^midori_browser_get_tabs               (MidoriBrowser*     browser);$/;"	p	signature:(MidoriBrowser* browser)
midori_browser_get_toolbar_actions	midori-browser.c	/^midori_browser_get_toolbar_actions (MidoriBrowser* browser)$/;"	f	signature:(MidoriBrowser* browser)
midori_browser_get_toolbar_actions	midori-browser.h	/^midori_browser_get_toolbar_actions    (MidoriBrowser*     browser);$/;"	p	signature:(MidoriBrowser* browser)
midori_browser_get_uri_extension	midori-browser.c	/^midori_browser_get_uri_extension (const gchar* uri)$/;"	f	file:	signature:(const gchar* uri)
midori_browser_is_fullscreen	midori-browser.c	/^midori_browser_is_fullscreen (MidoriBrowser* browser)$/;"	f	file:	signature:(MidoriBrowser* browser)
midori_browser_key_press_event	midori-browser.c	/^midori_browser_key_press_event (GtkWidget*   widget,$/;"	f	file:	signature:(GtkWidget* widget, GdkEventKey* event)
midori_browser_message_received_cb	midori-app.c	/^midori_browser_message_received_cb (UniqueApp*         instance,$/;"	f	file:	signature:(UniqueApp* instance, gint command, UniqueMessageData* message, guint timestamp, MidoriApp* app)
midori_browser_navigationbar_notify_style_cb	midori-browser.c	/^midori_browser_navigationbar_notify_style_cb (GObject*       object,$/;"	f	file:	signature:(GObject* object, GParamSpec* arg1, MidoriBrowser* browser)
midori_browser_new	midori-browser.h	/^midori_browser_new                    (void);$/;"	p	signature:(void)
midori_browser_new_history_item	midori-browser.c	/^midori_browser_new_history_item (MidoriBrowser* browser,$/;"	p	file:	signature:(MidoriBrowser* browser, KatzeItem* item)
midori_browser_new_window_cb	midori-app.c	/^midori_browser_new_window_cb (MidoriBrowser* browser,$/;"	f	file:	signature:(MidoriBrowser* browser, MidoriBrowser* new_browser, MidoriApp* app)
midori_browser_notebook_resize	midori-browser.c	/^midori_browser_notebook_resize (MidoriBrowser* browser,$/;"	f	file:	signature:(MidoriBrowser* browser, GdkRectangle* allocation)
midori_browser_notebook_size_allocate_cb	midori-browser.c	/^midori_browser_notebook_size_allocate_cb (GtkWidget*     notebook,$/;"	p	file:	signature:(GtkWidget* notebook, GdkRectangle* allocation, MidoriBrowser* browser)
midori_browser_notebook_size_allocate_cb	midori-browser.c	/^midori_browser_notebook_size_allocate_cb (GtkWidget*     widget,$/;"	f	file:	signature:(GtkWidget* widget, GdkRectangle* allocation, MidoriBrowser* browser)
midori_browser_notify_new_tab	midori-browser.c	/^midori_browser_notify_new_tab (MidoriBrowser *browser)$/;"	f	file:	signature:(MidoriBrowser *browser)
midori_browser_notify_new_tab_timeout_cb	midori-browser.c	/^midori_browser_notify_new_tab_timeout_cb (MidoriBrowser *browser)$/;"	f	file:	signature:(MidoriBrowser *browser)
midori_browser_open_bookmark	midori-browser.c	/^midori_browser_open_bookmark (MidoriBrowser* browser,$/;"	f	signature:(MidoriBrowser* browser, KatzeItem* item)
midori_browser_open_bookmark	midori-browser.c	/^midori_browser_open_bookmark (MidoriBrowser* browser,$/;"	p	file:	signature:(MidoriBrowser* browser, KatzeItem* item)
midori_browser_prepare_download	midori-browser.c	/^midori_browser_prepare_download (MidoriBrowser*  browser,$/;"	f	file:	signature:(MidoriBrowser* browser, WebKitDownload* download, const gchar* uri)
midori_browser_privacy_preferences_cb	main.c	/^midori_browser_privacy_preferences_cb (MidoriBrowser*    browser,$/;"	f	file:	signature:(MidoriBrowser* browser, KatzePreferences* preferences, MidoriApp* app)
midori_browser_quit	midori-browser.h	/^midori_browser_quit                   (MidoriBrowser*     browser);$/;"	p	signature:(MidoriBrowser* browser)
midori_browser_quit_cb	midori-app.c	/^midori_browser_quit_cb (MidoriBrowser* browser,$/;"	f	file:	signature:(MidoriBrowser* browser, MidoriApp* app)
midori_browser_remove_tab	midori-browser.h	/^midori_browser_remove_tab             (MidoriBrowser*     browser,$/;"	p	signature:(MidoriBrowser* browser, GtkWidget* widget)
midori_browser_restore_tab	midori-browser.c	/^midori_browser_restore_tab (MidoriBrowser* browser,$/;"	f	file:	signature:(MidoriBrowser* browser, KatzeItem* item)
midori_browser_save_source	midori-browser.c	/^midori_browser_save_source (const gchar* uri,$/;"	f	file:	signature:(const gchar* uri, const gchar* data, const size_t len, const gchar* outfile)
midori_browser_save_source	midori-browser.c	/^midori_browser_save_source (const gchar* uri,$/;"	p	file:	signature:(const gchar* uri, const gchar* data, const size_t len, const gchar* outfile)
midori_browser_save_uri	midori-browser.c	/^midori_browser_save_uri (MidoriBrowser* browser,$/;"	f	file:	signature:(MidoriBrowser* browser, const gchar* uri)
midori_browser_session_cb	main.c	/^midori_browser_session_cb (MidoriBrowser* browser,$/;"	f	file:	signature:(MidoriBrowser* browser, gpointer pspec, KatzeArray* session)
midori_browser_set_action_visible	midori-browser.h	/^midori_browser_set_action_visible     (MidoriBrowser*     browser,$/;"	p	signature:(MidoriBrowser* browser, const gchar* name, gboolean visible)
midori_browser_set_bookmarks	midori-browser.c	/^midori_browser_set_bookmarks (MidoriBrowser* browser,$/;"	p	file:	signature:(MidoriBrowser* browser, KatzeArray* bookmarks)
midori_browser_set_current_page	midori-browser.h	/^midori_browser_set_current_page       (MidoriBrowser*     browser,$/;"	p	signature:(MidoriBrowser* browser, gint n)
midori_browser_set_current_page_smartly	midori-browser.c	/^midori_browser_set_current_page_smartly (MidoriBrowser* browser,$/;"	f	signature:(MidoriBrowser* browser, gint n)
midori_browser_set_current_page_smartly	midori-browser.h	/^midori_browser_set_current_page_smartly (MidoriBrowser* browser,$/;"	p	signature:(MidoriBrowser* browser, gint n)
midori_browser_set_current_tab	midori-browser.h	/^midori_browser_set_current_tab        (MidoriBrowser*     browser,$/;"	p	signature:(MidoriBrowser* browser, GtkWidget* widget)
midori_browser_set_current_uri	midori-browser.h	/^midori_browser_set_current_uri        (MidoriBrowser*     browser,$/;"	p	signature:(MidoriBrowser* browser, const gchar* uri)
midori_browser_set_property	midori-browser.c	/^midori_browser_set_property (GObject*      object,$/;"	p	file:	signature:(GObject* object, guint prop_id, const GValue* value, GParamSpec* pspec)
midori_browser_set_tab	midori-browser.h	149;"	d
midori_browser_set_title	midori-browser.c	/^midori_browser_set_title (MidoriBrowser* browser,$/;"	f	file:	signature:(MidoriBrowser* browser, const gchar* title)
midori_browser_settings_notify	midori-browser.c	/^midori_browser_settings_notify (MidoriWebSettings* web_settings,$/;"	p	file:	signature:(MidoriWebSettings* web_settings, GParamSpec* pspec, MidoriBrowser* browser)
midori_browser_show_preferences_cb	main.c	/^midori_browser_show_preferences_cb (MidoriBrowser*    browser,$/;"	f	file:	signature:(MidoriBrowser* browser, KatzePreferences* preferences, MidoriApp* app)
midori_browser_speed_dial_get_next_free_slot	midori-browser.c	/^midori_browser_speed_dial_get_next_free_slot (MidoriView* view)$/;"	f	file:	signature:(MidoriView* view)
midori_browser_subscribe_to_news_feed	midori-browser.c	/^midori_browser_subscribe_to_news_feed (MidoriBrowser* browser,$/;"	f	file:	signature:(MidoriBrowser* browser, const gchar* uri)
midori_browser_tab_destroy_cb	midori-browser.c	/^midori_browser_tab_destroy_cb (GtkWidget*     widget,$/;"	f	file:	signature:(GtkWidget* widget, MidoriBrowser* browser)
midori_browser_tab_leave_notify_event_cb	midori-browser.c	/^midori_browser_tab_leave_notify_event_cb (GtkWidget*        widget,$/;"	f	file:	signature:(GtkWidget* widget, GdkEventCrossing* event, MidoriBrowser* browser)
midori_browser_toolbar_item_button_press_event_cb	midori-browser.c	/^midori_browser_toolbar_item_button_press_event_cb (GtkWidget*      toolitem,$/;"	p	file:	signature:(GtkWidget* toolitem, GdkEventButton* event, MidoriBrowser* browser)
midori_browser_toolbar_popup_context_menu_cb	midori-browser.c	/^midori_browser_toolbar_popup_context_menu_cb (GtkWidget*     widget,$/;"	f	file:	signature:(GtkWidget* widget, gint x, gint y, gint button, MidoriBrowser* browser)
midori_browser_unblock_action	midori-browser.h	/^midori_browser_unblock_action         (MidoriBrowser*     browser,$/;"	p	signature:(MidoriBrowser* browser, GtkAction* action)
midori_browser_update_history_title	midori-browser.c	/^midori_browser_update_history_title (MidoriBrowser* browser,$/;"	f	file:	signature:(MidoriBrowser* browser, KatzeItem* item)
midori_browser_view_copy_history	midori-browser.c	/^midori_browser_view_copy_history (GtkWidget* view_to,$/;"	f	file:	signature:(GtkWidget* view_to, GtkWidget* view_from, gboolean omit_last)
midori_browser_weak_notify_cb	main.c	/^midori_browser_weak_notify_cb (MidoriBrowser* browser,$/;"	f	file:	signature:(MidoriBrowser* browser, KatzeArray* session)
midori_clear_flash_cookies_cb	main.c	/^midori_clear_flash_cookies_cb (void)$/;"	f	file:	signature:(void)
midori_clear_html5_databases_cb	main.c	/^midori_clear_html5_databases_cb (void)$/;"	f	file:	signature:(void)
midori_clear_offline_appcache_cb	main.c	/^midori_clear_offline_appcache_cb (void)$/;"	f	file:	signature:(void)
midori_clear_page_icons_cb	main.c	/^midori_clear_page_icons_cb (void)$/;"	f	file:	signature:(void)
midori_clear_saved_logins_cb	main.c	/^midori_clear_saved_logins_cb (void)$/;"	f	file:	signature:(void)
midori_clear_web_cache_cb	main.c	/^midori_clear_web_cache_cb (void)$/;"	f	file:	signature:(void)
midori_clear_web_cookies_cb	main.c	/^midori_clear_web_cookies_cb (void)$/;"	f	file:	signature:(void)
midori_download_prepare_tooltip_text	sokoke.c	/^midori_download_prepare_tooltip_text (WebKitDownload* download)$/;"	f	signature:(WebKitDownload* download)
midori_download_prepare_tooltip_text	sokoke.h	/^midori_download_prepare_tooltip_text (WebKitDownload* download);$/;"	p	signature:(WebKitDownload* download)
midori_dummy_viewable_class_init	midori-panel.c	/^midori_dummy_viewable_class_init (MidoriDummyViewableClass* class)$/;"	f	file:	signature:(MidoriDummyViewableClass* class)
midori_dummy_viewable_finalize	midori-panel.c	/^midori_dummy_viewable_finalize (GObject* object)$/;"	f	file:	signature:(GObject* object)
midori_dummy_viewable_finalize	midori-panel.c	/^midori_dummy_viewable_finalize (GObject* object);$/;"	p	file:	signature:(GObject* object)
midori_dummy_viewable_get_label	midori-panel.c	/^midori_dummy_viewable_get_label (MidoriViewable* viewable)$/;"	f	file:	signature:(MidoriViewable* viewable)
midori_dummy_viewable_get_stock_id	midori-panel.c	/^midori_dummy_viewable_get_stock_id (MidoriViewable* viewable)$/;"	f	file:	signature:(MidoriViewable* viewable)
midori_dummy_viewable_get_toolbar	midori-panel.c	/^midori_dummy_viewable_get_toolbar (MidoriViewable* viewable)$/;"	f	file:	signature:(MidoriViewable* viewable)
midori_dummy_viewable_iface_init	midori-panel.c	/^midori_dummy_viewable_iface_init (MidoriViewableIface* iface)$/;"	f	file:	signature:(MidoriViewableIface* iface)
midori_dummy_viewable_iface_init	midori-panel.c	/^midori_dummy_viewable_iface_init (MidoriViewableIface* iface);$/;"	p	file:	signature:(MidoriViewableIface* iface)
midori_dummy_viewable_init	midori-panel.c	/^midori_dummy_viewable_init (MidoriDummyViewable* viewable)$/;"	f	file:	signature:(MidoriDummyViewable* viewable)
midori_dummy_viewable_new	midori-panel.c	/^midori_dummy_viewable_new (const gchar* stock_id,$/;"	f	signature:(const gchar* stock_id, const gchar* label, GtkWidget* toolbar)
midori_extension_activate_cb	midori-extension.c	/^midori_extension_activate_cb (MidoriExtension* extension,$/;"	f	file:	signature:(MidoriExtension* extension, MidoriApp* app)
midori_extension_can_install_setting	midori-extension.c	90;"	d	file:
midori_extension_class_init	midori-extension.c	/^midori_extension_class_init (MidoriExtensionClass* class)$/;"	f	file:	signature:(MidoriExtensionClass* class)
midori_extension_deactivate	midori-extension.c	/^midori_extension_deactivate (MidoriExtension* extension)$/;"	f	signature:(MidoriExtension* extension)
midori_extension_deactivate	midori-extension.h	/^midori_extension_deactivate          (MidoriExtension* extension);$/;"	p	signature:(MidoriExtension* extension)
midori_extension_finalize	midori-extension.c	/^midori_extension_finalize (GObject* object)$/;"	f	file:	signature:(GObject* object)
midori_extension_finalize	midori-extension.c	/^midori_extension_finalize (GObject* object);$/;"	p	file:	signature:(GObject* object)
midori_extension_get_app	midori-extension.c	/^midori_extension_get_app (MidoriExtension* extension)$/;"	f	signature:(MidoriExtension* extension)
midori_extension_get_app	midori-extension.h	/^midori_extension_get_app             (MidoriExtension* extension);$/;"	p	signature:(MidoriExtension* extension)
midori_extension_get_boolean	midori-extension.c	/^midori_extension_get_boolean (MidoriExtension* extension,$/;"	f	signature:(MidoriExtension* extension, const gchar* name)
midori_extension_get_boolean	midori-extension.h	/^midori_extension_get_boolean         (MidoriExtension* extension,$/;"	p	signature:(MidoriExtension* extension, const gchar* name)
midori_extension_get_config_dir	midori-extension.c	/^midori_extension_get_config_dir (MidoriExtension* extension)$/;"	f	signature:(MidoriExtension* extension)
midori_extension_get_config_dir	midori-extension.h	/^midori_extension_get_config_dir      (MidoriExtension* extension);$/;"	p	signature:(MidoriExtension* extension)
midori_extension_get_integer	midori-extension.c	/^midori_extension_get_integer (MidoriExtension* extension,$/;"	f	signature:(MidoriExtension* extension, const gchar* name)
midori_extension_get_integer	midori-extension.h	/^midori_extension_get_integer         (MidoriExtension* extension,$/;"	p	signature:(MidoriExtension* extension, const gchar* name)
midori_extension_get_property	midori-extension.c	/^midori_extension_get_property (GObject*    object,$/;"	f	file:	signature:(GObject* object, guint prop_id, GValue* value, GParamSpec* pspec)
midori_extension_get_property	midori-extension.c	/^midori_extension_get_property (GObject*    object,$/;"	p	file:	signature:(GObject* object, guint prop_id, GValue* value, GParamSpec* pspec)
midori_extension_get_string	midori-extension.c	/^midori_extension_get_string (MidoriExtension* extension,$/;"	f	signature:(MidoriExtension* extension, const gchar* name)
midori_extension_get_string	midori-extension.h	/^midori_extension_get_string          (MidoriExtension* extension,$/;"	p	signature:(MidoriExtension* extension, const gchar* name)
midori_extension_get_string_list	midori-extension.c	/^midori_extension_get_string_list (MidoriExtension* extension,$/;"	f	signature:(MidoriExtension* extension, const gchar* name, gsize* length)
midori_extension_get_string_list	midori-extension.h	/^midori_extension_get_string_list     (MidoriExtension* extension,$/;"	p	signature:(MidoriExtension* extension, const gchar* name, gsize* length)
midori_extension_has_preferences	midori-extension.c	/^midori_extension_has_preferences (MidoriExtension* extension)$/;"	f	signature:(MidoriExtension* extension)
midori_extension_has_preferences	midori-extension.h	/^midori_extension_has_preferences     (MidoriExtension* extension);$/;"	p	signature:(MidoriExtension* extension)
midori_extension_init	midori-extension.c	/^midori_extension_init (MidoriExtension* extension)$/;"	f	file:	signature:(MidoriExtension* extension)
midori_extension_install_boolean	midori-extension.c	/^midori_extension_install_boolean (MidoriExtension* extension,$/;"	f	signature:(MidoriExtension* extension, const gchar* name, gboolean default_value)
midori_extension_install_boolean	midori-extension.h	/^midori_extension_install_boolean     (MidoriExtension* extension,$/;"	p	signature:(MidoriExtension* extension, const gchar* name, gboolean default_value)
midori_extension_install_integer	midori-extension.c	/^midori_extension_install_integer (MidoriExtension* extension,$/;"	f	signature:(MidoriExtension* extension, const gchar* name, gint default_value)
midori_extension_install_integer	midori-extension.h	/^midori_extension_install_integer     (MidoriExtension* extension,$/;"	p	signature:(MidoriExtension* extension, const gchar* name, gint default_value)
midori_extension_install_string	midori-extension.c	/^midori_extension_install_string (MidoriExtension* extension,$/;"	f	signature:(MidoriExtension* extension, const gchar* name, const gchar* default_value)
midori_extension_install_string	midori-extension.h	/^midori_extension_install_string      (MidoriExtension* extension,$/;"	p	signature:(MidoriExtension* extension, const gchar* name, const gchar* default_value)
midori_extension_install_string_list	midori-extension.c	/^midori_extension_install_string_list (MidoriExtension* extension,$/;"	f	signature:(MidoriExtension* extension, const gchar* name, gchar** default_value, gsize default_length)
midori_extension_install_string_list	midori-extension.h	/^midori_extension_install_string_list (MidoriExtension* extension,$/;"	p	signature:(MidoriExtension* extension, const gchar* name, gchar** default_value, gsize default_length)
midori_extension_is_active	midori-extension.c	/^midori_extension_is_active (MidoriExtension* extension)$/;"	f	signature:(MidoriExtension* extension)
midori_extension_is_active	midori-extension.h	/^midori_extension_is_active           (MidoriExtension* extension);$/;"	p	signature:(MidoriExtension* extension)
midori_extension_is_deactivating	midori-extension.c	/^midori_extension_is_deactivating (MidoriExtension* extension)$/;"	f	signature:(MidoriExtension* extension)
midori_extension_is_deactivating	midori-extension.h	/^midori_extension_is_deactivating     (MidoriExtension* extension);$/;"	p	signature:(MidoriExtension* extension)
midori_extension_is_prepared	midori-extension.c	/^midori_extension_is_prepared (MidoriExtension* extension)$/;"	f	signature:(MidoriExtension* extension)
midori_extension_is_prepared	midori-extension.h	/^midori_extension_is_prepared         (MidoriExtension* extension);$/;"	p	signature:(MidoriExtension* extension)
midori_extension_set_boolean	midori-extension.c	/^midori_extension_set_boolean (MidoriExtension* extension,$/;"	f	signature:(MidoriExtension* extension, const gchar* name, gboolean value)
midori_extension_set_boolean	midori-extension.h	/^midori_extension_set_boolean         (MidoriExtension* extension,$/;"	p	signature:(MidoriExtension* extension, const gchar* name, gboolean value)
midori_extension_set_integer	midori-extension.c	/^midori_extension_set_integer (MidoriExtension* extension,$/;"	f	signature:(MidoriExtension* extension, const gchar* name, gint value)
midori_extension_set_integer	midori-extension.h	/^midori_extension_set_integer         (MidoriExtension* extension,$/;"	p	signature:(MidoriExtension* extension, const gchar* name, gint value)
midori_extension_set_property	midori-extension.c	/^midori_extension_set_property (GObject*      object,$/;"	f	file:	signature:(GObject* object, guint prop_id, const GValue* value, GParamSpec* pspec)
midori_extension_set_property	midori-extension.c	/^midori_extension_set_property (GObject*      object,$/;"	p	file:	signature:(GObject* object, guint prop_id, const GValue* value, GParamSpec* pspec)
midori_extension_set_string	midori-extension.c	/^midori_extension_set_string (MidoriExtension* extension,$/;"	f	signature:(MidoriExtension* extension, const gchar* name, const gchar* value)
midori_extension_set_string	midori-extension.h	/^midori_extension_set_string          (MidoriExtension* extension,$/;"	p	signature:(MidoriExtension* extension, const gchar* name, const gchar* value)
midori_extension_set_string_list	midori-extension.c	/^midori_extension_set_string_list (MidoriExtension* extension,$/;"	f	signature:(MidoriExtension* extension, const gchar* name, gchar** value, gsize length)
midori_extension_set_string_list	midori-extension.h	/^midori_extension_set_string_list     (MidoriExtension* extension,$/;"	p	signature:(MidoriExtension* extension, const gchar* name, gchar** value, gsize length)
midori_get_download_dir	midori-websettings.c	/^midori_get_download_dir (void)$/;"	f	file:	signature:(void)
midori_history_clear_cb	main.c	/^midori_history_clear_cb (KatzeArray* array,$/;"	f	file:	signature:(KatzeArray* array, sqlite3* db)
midori_history_initialize	main.c	/^midori_history_initialize (KatzeArray*  array,$/;"	f	file:	signature:(KatzeArray* array, const gchar* filename, const gchar* bookmarks_filename, char** errmsg)
midori_history_terminate	main.c	/^midori_history_terminate (KatzeArray* array,$/;"	f	file:	signature:(KatzeArray* array, gint max_history_age)
midori_identity_get_type	midori-websettings.c	/^midori_identity_get_type (void)$/;"	f	signature:(void)
midori_inactivity_timeout	main.c	/^midori_inactivity_timeout (gpointer data)$/;"	f	file:	signature:(gpointer data)
midori_load_extensions	main.c	/^midori_load_extensions (gpointer data)$/;"	f	file:	signature:(gpointer data)
midori_load_session	main.c	/^midori_load_session (gpointer data)$/;"	f	file:	signature:(gpointer data)
midori_load_soup_session	main.c	/^midori_load_soup_session (gpointer settings)$/;"	f	file:	signature:(gpointer settings)
midori_load_soup_session_full	main.c	/^midori_load_soup_session_full (gpointer settings)$/;"	f	file:	signature:(gpointer settings)
midori_location_action_activate	midori-locationaction.c	/^midori_location_action_activate (GtkAction* action)$/;"	f	file:	signature:(GtkAction* action)
midori_location_action_activate	midori-locationaction.c	/^midori_location_action_activate (GtkAction* object);$/;"	p	file:	signature:(GtkAction* object)
midori_location_action_add_item	midori-locationaction.c	/^midori_location_action_add_item (MidoriLocationAction* location_action,$/;"	f	signature:(MidoriLocationAction* location_action, const gchar* uri, GdkPixbuf* icon, const gchar* title)
midori_location_action_add_item	midori-locationaction.h	/^midori_location_action_add_item             (MidoriLocationAction* location_action,$/;"	p	signature:(MidoriLocationAction* location_action, const gchar* uri, GdkPixbuf* icon, const gchar* title)
midori_location_action_add_uri	midori-locationaction.c	/^midori_location_action_add_uri (MidoriLocationAction* location_action,$/;"	f	signature:(MidoriLocationAction* location_action, const gchar* uri)
midori_location_action_add_uri	midori-locationaction.h	/^midori_location_action_add_uri              (MidoriLocationAction* location_action,$/;"	p	signature:(MidoriLocationAction* location_action, const gchar* uri)
midori_location_action_backspace_cb	midori-locationaction.c	/^midori_location_action_backspace_cb (GtkWidget*            entry,$/;"	f	file:	signature:(GtkWidget* entry, MidoriLocationAction* action)
midori_location_action_button_press_event_cb	midori-locationaction.c	/^midori_location_action_button_press_event_cb (GtkEntry*             entry,$/;"	f	file:	signature:(GtkEntry* entry, GdkEventKey* event, MidoriLocationAction* action)
midori_location_action_changed_cb	midori-locationaction.c	/^midori_location_action_changed_cb (GtkEntry*             entry,$/;"	f	file:	signature:(GtkEntry* entry, MidoriLocationAction* location_action)
midori_location_action_class_init	midori-locationaction.c	/^midori_location_action_class_init (MidoriLocationActionClass* class)$/;"	f	file:	signature:(MidoriLocationActionClass* class)
midori_location_action_clear	midori-locationaction.h	/^midori_location_action_clear                (MidoriLocationAction* location_action);$/;"	p	signature:(MidoriLocationAction* location_action)
midori_location_action_connect_proxy	midori-locationaction.c	/^midori_location_action_connect_proxy (GtkAction* action,$/;"	f	file:	signature:(GtkAction* action, GtkWidget* proxy)
midori_location_action_connect_proxy	midori-locationaction.c	/^midori_location_action_connect_proxy (GtkAction* action,$/;"	p	file:	signature:(GtkAction* action, GtkWidget* proxy)
midori_location_action_create_model	midori-locationaction.c	/^midori_location_action_create_model (void)$/;"	f	file:	signature:(void)
midori_location_action_create_tool_item	midori-locationaction.c	/^midori_location_action_create_tool_item (GtkAction* action)$/;"	f	file:	signature:(GtkAction* action)
midori_location_action_create_tool_item	midori-locationaction.c	/^midori_location_action_create_tool_item (GtkAction* action);$/;"	p	file:	signature:(GtkAction* action)
midori_location_action_delete_item_from_uri	midori-locationaction.h	/^midori_location_action_delete_item_from_uri (MidoriLocationAction* location_action,$/;"	p	signature:(MidoriLocationAction* location_action, const gchar* uri)
midori_location_action_disconnect_proxy	midori-locationaction.c	/^midori_location_action_disconnect_proxy (GtkAction* action,$/;"	f	file:	signature:(GtkAction* action, GtkWidget* proxy)
midori_location_action_disconnect_proxy	midori-locationaction.c	/^midori_location_action_disconnect_proxy (GtkAction* action,$/;"	p	file:	signature:(GtkAction* action, GtkWidget* proxy)
midori_location_action_entry_for_proxy	midori-locationaction.c	/^midori_location_action_entry_for_proxy (GtkWidget* proxy)$/;"	f	signature:(GtkWidget* proxy)
midori_location_action_finalize	midori-locationaction.c	/^midori_location_action_finalize (GObject* object)$/;"	f	file:	signature:(GObject* object)
midori_location_action_finalize	midori-locationaction.c	/^midori_location_action_finalize (GObject* object);$/;"	p	file:	signature:(GObject* object)
midori_location_action_focus_in_event_cb	midori-locationaction.c	/^midori_location_action_focus_in_event_cb (GtkWidget*   widget,$/;"	f	file:	signature:(GtkWidget* widget, GdkEventKey* event, GtkAction* action)
midori_location_action_focus_out_event_cb	midori-locationaction.c	/^midori_location_action_focus_out_event_cb (GtkWidget*   widget,$/;"	f	file:	signature:(GtkWidget* widget, GdkEventKey* event, GtkAction* action)
midori_location_action_get_progress	midori-locationaction.c	/^midori_location_action_get_progress (MidoriLocationAction* location_action)$/;"	f	signature:(MidoriLocationAction* location_action)
midori_location_action_get_progress	midori-locationaction.h	/^midori_location_action_get_progress         (MidoriLocationAction* location_action);$/;"	p	signature:(MidoriLocationAction* location_action)
midori_location_action_get_property	midori-locationaction.c	/^midori_location_action_get_property (GObject*    object,$/;"	f	file:	signature:(GObject* object, guint prop_id, GValue* value, GParamSpec* pspec)
midori_location_action_get_property	midori-locationaction.c	/^midori_location_action_get_property (GObject*    object,$/;"	p	file:	signature:(GObject* object, guint prop_id, GValue* value, GParamSpec* pspec)
midori_location_action_get_text	midori-locationaction.c	/^midori_location_action_get_text (MidoriLocationAction* location_action)$/;"	f	signature:(MidoriLocationAction* location_action)
midori_location_action_get_text	midori-locationaction.h	/^midori_location_action_get_text             (MidoriLocationAction* location_action);$/;"	p	signature:(MidoriLocationAction* location_action)
midori_location_action_get_uri	midori-locationaction.c	/^midori_location_action_get_uri (MidoriLocationAction* location_action)$/;"	f	signature:(MidoriLocationAction* location_action)
midori_location_action_get_uri	midori-locationaction.h	/^midori_location_action_get_uri              (MidoriLocationAction* location_action);$/;"	p	signature:(MidoriLocationAction* location_action)
midori_location_action_icon_released_cb	midori-locationaction.c	/^midori_location_action_icon_released_cb (GtkWidget*           widget,$/;"	f	file:	signature:(GtkWidget* widget, GtkIconEntryPosition icon_pos, gint button, GtkAction* action)
midori_location_action_init	midori-locationaction.c	/^midori_location_action_init (MidoriLocationAction* location_action)$/;"	f	file:	signature:(MidoriLocationAction* location_action)
midori_location_action_key_press_event_cb	midori-locationaction.c	/^midori_location_action_key_press_event_cb (GtkEntry*    entry,$/;"	f	file:	signature:(GtkEntry* entry, GdkEventKey* event, GtkAction* action)
midori_location_action_move_cursor_cb	midori-locationaction.c	/^midori_location_action_move_cursor_cb (GtkEntry*             entry,$/;"	f	file:	signature:(GtkEntry* entry, GtkMovementStep step, gint count, gboolean extend_selection, MidoriLocationAction* action)
midori_location_action_paste_clipboard_cb	midori-locationaction.c	/^midori_location_action_paste_clipboard_cb (GtkWidget*            entry,$/;"	f	file:	signature:(GtkWidget* entry, MidoriLocationAction* action)
midori_location_action_paste_proceed_cb	midori-locationaction.c	/^midori_location_action_paste_proceed_cb (GtkWidget* menuitem,$/;"	f	file:	signature:(GtkWidget* menuitem, GtkWidget* location_action)
midori_location_action_popdown_completion	midori-locationaction.c	/^midori_location_action_popdown_completion (MidoriLocationAction* location_action)$/;"	f	file:	signature:(MidoriLocationAction* location_action)
midori_location_action_popdown_completion	midori-locationaction.c	/^midori_location_action_popdown_completion (MidoriLocationAction* location_action);$/;"	p	file:	signature:(MidoriLocationAction* location_action)
midori_location_action_populate_popup_cb	midori-locationaction.c	/^midori_location_action_populate_popup_cb (GtkWidget*            entry,$/;"	f	file:	signature:(GtkWidget* entry, GtkMenuShell* menu, MidoriLocationAction* location_action)
midori_location_action_popup_completion	midori-locationaction.c	/^midori_location_action_popup_completion (MidoriLocationAction* action,$/;"	f	file:	signature:(MidoriLocationAction* action, GtkWidget* entry, gchar* key)
midori_location_action_popup_position	midori-locationaction.c	/^midori_location_action_popup_position (GtkWidget* popup,$/;"	f	file:	signature:(GtkWidget* popup, GtkWidget* widget)
midori_location_action_popup_timeout_cb	midori-locationaction.c	/^midori_location_action_popup_timeout_cb (gpointer data)$/;"	f	file:	signature:(gpointer data)
midori_location_action_preedit_changed_cb	midori-locationaction.c	/^midori_location_action_preedit_changed_cb (GtkWidget*   entry,$/;"	f	file:	signature:(GtkWidget* entry, const gchar* preedit, GtkAction* action)
midori_location_action_set_icon	midori-locationaction.c	/^midori_location_action_set_icon (MidoriLocationAction* location_action,$/;"	f	signature:(MidoriLocationAction* location_action, GdkPixbuf* icon)
midori_location_action_set_icon	midori-locationaction.h	/^midori_location_action_set_icon             (MidoriLocationAction* location_action,$/;"	p	signature:(MidoriLocationAction* location_action, GdkPixbuf* icon)
midori_location_action_set_icon_for_uri	midori-locationaction.c	/^midori_location_action_set_icon_for_uri (MidoriLocationAction* location_action,$/;"	f	signature:(MidoriLocationAction* location_action, GdkPixbuf* icon, const gchar* uri)
midori_location_action_set_icon_for_uri	midori-locationaction.h	/^midori_location_action_set_icon_for_uri     (MidoriLocationAction* location_action,$/;"	p	signature:(MidoriLocationAction* location_action, GdkPixbuf* icon, const gchar* text)
midori_location_action_set_progress	midori-locationaction.c	/^midori_location_action_set_progress (MidoriLocationAction* location_action,$/;"	f	signature:(MidoriLocationAction* location_action, gdouble progress)
midori_location_action_set_progress	midori-locationaction.h	/^midori_location_action_set_progress         (MidoriLocationAction* location_action,$/;"	p	signature:(MidoriLocationAction* location_action, gdouble progress)
midori_location_action_set_property	midori-locationaction.c	/^midori_location_action_set_property (GObject*      object,$/;"	f	file:	signature:(GObject* object, guint prop_id, const GValue* value, GParamSpec* pspec)
midori_location_action_set_property	midori-locationaction.c	/^midori_location_action_set_property (GObject*      object,$/;"	p	file:	signature:(GObject* object, guint prop_id, const GValue* value, GParamSpec* pspec)
midori_location_action_set_search_engines	midori-locationaction.c	/^midori_location_action_set_search_engines (MidoriLocationAction* location_action,$/;"	f	signature:(MidoriLocationAction* location_action, KatzeArray* search_engines)
midori_location_action_set_search_engines	midori-locationaction.h	/^midori_location_action_set_search_engines   (MidoriLocationAction* location_action,$/;"	p	signature:(MidoriLocationAction* location_action, KatzeArray* search_engines)
midori_location_action_set_secondary_icon	midori-locationaction.c	/^midori_location_action_set_secondary_icon (MidoriLocationAction* location_action,$/;"	f	signature:(MidoriLocationAction* location_action, const gchar* stock_id)
midori_location_action_set_secondary_icon	midori-locationaction.h	/^midori_location_action_set_secondary_icon   (MidoriLocationAction* location_action,$/;"	p	signature:(MidoriLocationAction* location_action, const gchar* stock_id)
midori_location_action_set_security_hint	midori-locationaction.c	/^midori_location_action_set_security_hint (MidoriLocationAction* location_action,$/;"	f	signature:(MidoriLocationAction* location_action, MidoriSecurity hint)
midori_location_action_set_security_hint	midori-locationaction.h	/^midori_location_action_set_security_hint    (MidoriLocationAction* location_action,$/;"	p	signature:(MidoriLocationAction* location_action, MidoriSecurity hint)
midori_location_action_set_text	midori-locationaction.c	/^midori_location_action_set_text (MidoriLocationAction* location_action,$/;"	f	signature:(MidoriLocationAction* location_action, const gchar* text)
midori_location_action_set_text	midori-locationaction.h	/^midori_location_action_set_text             (MidoriLocationAction* location_action,$/;"	p	signature:(MidoriLocationAction* location_action, const gchar* text)
midori_location_action_set_title_for_uri	midori-locationaction.h	/^midori_location_action_set_title_for_uri    (MidoriLocationAction* location_action,$/;"	p	signature:(MidoriLocationAction* location_action, const gchar* title, const gchar* text)
midori_location_action_treeview_button_press_cb	midori-locationaction.c	/^midori_location_action_treeview_button_press_cb (GtkWidget*            treeview,$/;"	f	file:	signature:(GtkWidget* treeview, GdkEventButton* event, MidoriLocationAction* action)
midori_location_entry_render_text_cb	midori-locationaction.c	/^midori_location_entry_render_text_cb (GtkCellLayout*   layout,$/;"	f	file:	signature:(GtkCellLayout* layout, GtkCellRenderer* renderer, GtkTreeModel* model, GtkTreeIter* iter, gpointer data)
midori_location_entry_render_text_cb	midori-locationaction.c	/^midori_location_entry_render_text_cb (GtkCellLayout*   layout,$/;"	p	file:	signature:(GtkCellLayout* layout, GtkCellRenderer* renderer, GtkTreeModel* model, GtkTreeIter* iter, gpointer data)
midori_log_to_file	main.c	/^midori_log_to_file (const gchar*   log_domain,$/;"	f	file:	signature:(const gchar* log_domain, GLogLevelFlags log_level, const gchar* message, gpointer user_data)
midori_new_page_get_type	midori-websettings.c	/^midori_new_page_get_type (void)$/;"	f	signature:(void)
midori_new_view_get_type	midori-view.c	/^midori_new_view_get_type (void)$/;"	f	signature:(void)
midori_paned_action_class_init	midori-panedaction.c	/^midori_paned_action_class_init (MidoriPanedActionClass* class)$/;"	f	file:	signature:(MidoriPanedActionClass* class)
midori_paned_action_create_tool_item	midori-panedaction.c	/^midori_paned_action_create_tool_item (GtkAction *action);$/;"	p	file:	signature:(GtkAction *action)
midori_paned_action_create_tool_item	midori-panedaction.c	/^midori_paned_action_create_tool_item (GtkAction* action)$/;"	f	file:	signature:(GtkAction* action)
midori_paned_action_finalize	midori-panedaction.c	/^midori_paned_action_finalize (GObject* object)$/;"	f	file:	signature:(GObject* object)
midori_paned_action_finalize	midori-panedaction.c	/^midori_paned_action_finalize (GObject* object);$/;"	p	file:	signature:(GObject* object)
midori_paned_action_get_child1	midori-panedaction.c	/^midori_paned_action_get_child1 (MidoriPanedAction* paned_action)$/;"	f	signature:(MidoriPanedAction* paned_action)
midori_paned_action_get_child1	midori-panedaction.h	/^midori_paned_action_get_child1                     (MidoriPanedAction* paned_action);$/;"	p	signature:(MidoriPanedAction* paned_action)
midori_paned_action_get_child1_name	midori-panedaction.c	/^midori_paned_action_get_child1_name (MidoriPanedAction* paned_action)$/;"	f	signature:(MidoriPanedAction* paned_action)
midori_paned_action_get_child1_name	midori-panedaction.h	/^midori_paned_action_get_child1_name                (MidoriPanedAction* paned_action);$/;"	p	signature:(MidoriPanedAction* paned_action)
midori_paned_action_get_child2	midori-panedaction.c	/^midori_paned_action_get_child2 (MidoriPanedAction* paned_action)$/;"	f	signature:(MidoriPanedAction* paned_action)
midori_paned_action_get_child2	midori-panedaction.h	/^midori_paned_action_get_child2                     (MidoriPanedAction* paned_action);$/;"	p	signature:(MidoriPanedAction* paned_action)
midori_paned_action_get_child2_name	midori-panedaction.c	/^midori_paned_action_get_child2_name (MidoriPanedAction* paned_action)$/;"	f	signature:(MidoriPanedAction* paned_action)
midori_paned_action_get_child2_name	midori-panedaction.h	/^midori_paned_action_get_child2_name                (MidoriPanedAction* paned_action);$/;"	p	signature:(MidoriPanedAction* paned_action)
midori_paned_action_get_child_by_name	midori-panedaction.c	/^midori_paned_action_get_child_by_name (MidoriPanedAction* paned_action,$/;"	f	signature:(MidoriPanedAction* paned_action, const gchar* name)
midori_paned_action_get_child_by_name	midori-panedaction.h	/^midori_paned_action_get_child_by_name              (MidoriPanedAction* paned_action,$/;"	p	signature:(MidoriPanedAction* paned_action, const gchar* name)
midori_paned_action_init	midori-panedaction.c	/^midori_paned_action_init (MidoriPanedAction* paned_action)$/;"	f	file:	signature:(MidoriPanedAction* paned_action)
midori_paned_action_set_child1	midori-panedaction.c	/^midori_paned_action_set_child1 (MidoriPanedAction* paned_action,$/;"	f	signature:(MidoriPanedAction* paned_action, GtkWidget* child1, const gchar* name, gboolean resize, gboolean shrink)
midori_paned_action_set_child1	midori-panedaction.h	/^midori_paned_action_set_child1                     (MidoriPanedAction* paned_action,$/;"	p	signature:(MidoriPanedAction* paned_action, GtkWidget* child1, const gchar* name, gboolean resize, gboolean shrink)
midori_paned_action_set_child2	midori-panedaction.c	/^midori_paned_action_set_child2 (MidoriPanedAction* paned_action,$/;"	f	signature:(MidoriPanedAction* paned_action, GtkWidget* child2, const gchar* name, gboolean resize, gboolean shrink)
midori_paned_action_set_child2	midori-panedaction.h	/^midori_paned_action_set_child2                     (MidoriPanedAction* paned_action,$/;"	p	signature:(MidoriPanedAction* paned_action, GtkWidget* child2, const gchar* name, gboolean resize, gboolean shrink)
midori_panel_action_activate_cb	midori-panel.c	/^midori_panel_action_activate_cb (GtkRadioAction* action,$/;"	f	file:	signature:(GtkRadioAction* action, MidoriPanel* panel)
midori_panel_append_page	midori-panel.c	/^midori_panel_append_page (MidoriPanel*    panel,$/;"	f	signature:(MidoriPanel* panel, MidoriViewable* viewable)
midori_panel_append_page	midori-panel.h	/^midori_panel_append_page            (MidoriPanel*       panel,$/;"	p	signature:(MidoriPanel* panel, MidoriViewable* viewable)
midori_panel_append_widget	midori-panel.c	/^midori_panel_append_widget (MidoriPanel* panel,$/;"	f	signature:(MidoriPanel* panel, GtkWidget* widget, const gchar* stock_id, const gchar* label, GtkWidget* toolbar)
midori_panel_append_widget	midori-panel.h	/^midori_panel_append_widget          (MidoriPanel*       panel,$/;"	p	signature:(MidoriPanel* panel, GtkWidget* widget, const gchar* stock_id, const gchar* label, GtkWidget* toolbar)
midori_panel_button_align_clicked_cb	midori-panel.c	/^midori_panel_button_align_clicked_cb (GtkWidget*   toolitem,$/;"	f	file:	signature:(GtkWidget* toolitem, MidoriPanel* panel)
midori_panel_button_close_clicked_cb	midori-panel.c	/^midori_panel_button_close_clicked_cb (GtkWidget*   toolitem,$/;"	f	file:	signature:(GtkWidget* toolitem, MidoriPanel* panel)
midori_panel_class_init	midori-panel.c	/^midori_panel_class_init (MidoriPanelClass* class)$/;"	f	file:	signature:(MidoriPanelClass* class)
midori_panel_close	midori-panel.c	/^midori_panel_close (MidoriPanel* panel)$/;"	f	file:	signature:(MidoriPanel* panel)
midori_panel_construct_menu_item	midori-browser.c	/^midori_panel_construct_menu_item (MidoriPanel*    panel,$/;"	p	file:	signature:(MidoriPanel* panel, MidoriViewable* viewable)
midori_panel_construct_menu_item	midori-panel.c	/^midori_panel_construct_menu_item (MidoriPanel*    panel,$/;"	f	signature:(MidoriPanel* panel, MidoriViewable* viewable)
midori_panel_construct_tool_item	midori-panel.c	/^midori_panel_construct_tool_item (MidoriPanel*    panel,$/;"	f	file:	signature:(MidoriPanel* panel, MidoriViewable* viewable)
midori_panel_construct_tool_item	midori-panel.c	/^midori_panel_construct_tool_item (MidoriPanel*    panel,$/;"	p	file:	signature:(MidoriPanel* panel, MidoriViewable* viewable)
midori_panel_destroy_cb	midori-panel.c	/^midori_panel_destroy_cb (MidoriPanel* panel)$/;"	f	file:	signature:(MidoriPanel* panel)
midori_panel_detach_page	midori-panel.c	/^midori_panel_detach_page (MidoriPanel* panel,$/;"	f	file:	signature:(MidoriPanel* panel, gint n)
midori_panel_detached_window_delete_event_cb	midori-panel.c	/^midori_panel_detached_window_delete_event_cb (GtkWidget*   window,$/;"	f	file:	signature:(GtkWidget* window, GdkEvent* event, MidoriPanel* panel)
midori_panel_finalize	midori-panel.c	/^midori_panel_finalize (GObject* object)$/;"	f	file:	signature:(GObject* object)
midori_panel_finalize	midori-panel.c	/^midori_panel_finalize (GObject* object);$/;"	p	file:	signature:(GObject* object)
midori_panel_get_current_page	midori-panel.c	/^midori_panel_get_current_page (MidoriPanel* panel)$/;"	f	signature:(MidoriPanel* panel)
midori_panel_get_current_page	midori-panel.h	/^midori_panel_get_current_page       (MidoriPanel*       panel);$/;"	p	signature:(MidoriPanel* panel)
midori_panel_get_n_pages	midori-panel.c	/^midori_panel_get_n_pages (MidoriPanel* panel)$/;"	f	signature:(MidoriPanel* panel)
midori_panel_get_n_pages	midori-panel.h	/^midori_panel_get_n_pages            (MidoriPanel*       panel);$/;"	p	signature:(MidoriPanel* panel)
midori_panel_get_nth_page	midori-panel.c	/^midori_panel_get_nth_page (MidoriPanel* panel,$/;"	f	signature:(MidoriPanel* panel, guint page_num)
midori_panel_get_nth_page	midori-panel.h	/^midori_panel_get_nth_page           (MidoriPanel*       panel,$/;"	p	signature:(MidoriPanel* panel, guint page_num)
midori_panel_get_property	midori-panel.c	/^midori_panel_get_property (GObject*    object,$/;"	f	file:	signature:(GObject* object, guint prop_id, GValue* value, GParamSpec* pspec)
midori_panel_get_property	midori-panel.c	/^midori_panel_get_property (GObject*    object,$/;"	p	file:	signature:(GObject* object, guint prop_id, GValue* value, GParamSpec* pspec)
midori_panel_init	midori-panel.c	/^midori_panel_init (MidoriPanel* panel)$/;"	f	file:	signature:(MidoriPanel* panel)
midori_panel_new	midori-panel.c	/^midori_panel_new (void)$/;"	f	signature:(void)
midori_panel_new	midori-panel.h	/^midori_panel_new                    (void);$/;"	p	signature:(void)
midori_panel_page_num	midori-panel.c	/^midori_panel_page_num (MidoriPanel* panel,$/;"	f	signature:(MidoriPanel* panel, GtkWidget* child)
midori_panel_page_num	midori-panel.h	/^midori_panel_page_num               (MidoriPanel*       panel,$/;"	p	signature:(MidoriPanel* panel, GtkWidget* child)
midori_panel_set_current_page	midori-panel.c	/^midori_panel_set_current_page (MidoriPanel* panel,$/;"	f	signature:(MidoriPanel* panel, gint n)
midori_panel_set_current_page	midori-panel.h	/^midori_panel_set_current_page       (MidoriPanel*       panel,$/;"	p	signature:(MidoriPanel* panel, gint n)
midori_panel_set_property	midori-panel.c	/^midori_panel_set_property (GObject*      object,$/;"	f	file:	signature:(GObject* object, guint prop_id, const GValue* value, GParamSpec* pspec)
midori_panel_set_property	midori-panel.c	/^midori_panel_set_property (GObject*      object,$/;"	p	file:	signature:(GObject* object, guint prop_id, const GValue* value, GParamSpec* pspec)
midori_panel_set_right_aligned	midori-panel.c	/^midori_panel_set_right_aligned (MidoriPanel* panel,$/;"	f	signature:(MidoriPanel* panel, gboolean right_aligned)
midori_panel_set_right_aligned	midori-panel.h	/^midori_panel_set_right_aligned      (MidoriPanel*       panel,$/;"	p	signature:(MidoriPanel* panel, gboolean right_aligned)
midori_panel_set_toolbar_style	midori-browser.c	/^midori_panel_set_toolbar_style (MidoriPanel*    panel,$/;"	p	file:	signature:(MidoriPanel* panel, GtkToolbarStyle style)
midori_panel_set_toolbar_style	midori-panel.c	/^midori_panel_set_toolbar_style (MidoriPanel*    panel,$/;"	f	signature:(MidoriPanel* panel, GtkToolbarStyle style)
midori_panel_viewable_destroy_cb	midori-panel.c	/^midori_panel_viewable_destroy_cb (GtkWidget*   viewable,$/;"	f	file:	signature:(GtkWidget* viewable, MidoriPanel* panel)
midori_panel_widget_destroy_cb	midori-panel.c	/^midori_panel_widget_destroy_cb (GtkWidget* viewable,$/;"	f	file:	signature:(GtkWidget* viewable, GtkWidget* widget)
midori_preferences_add_toolbutton	midori-preferences.c	/^midori_preferences_add_toolbutton (GtkWidget*   toolbar,$/;"	f	file:	signature:(GtkWidget* toolbar, GtkWidget** toolbutton, const gchar* icon, const gchar* label, GtkWidget* page)
midori_preferences_class_init	midori-preferences.c	/^midori_preferences_class_init (MidoriPreferencesClass* class)$/;"	f	file:	signature:(MidoriPreferencesClass* class)
midori_preferences_finalize	midori-preferences.c	/^midori_preferences_finalize (GObject* object)$/;"	f	file:	signature:(GObject* object)
midori_preferences_finalize	midori-preferences.c	/^midori_preferences_finalize (GObject* object);$/;"	p	file:	signature:(GObject* object)
midori_preferences_get_property	midori-preferences.c	/^midori_preferences_get_property (GObject*    object,$/;"	f	file:	signature:(GObject* object, guint prop_id, GValue* value, GParamSpec* pspec)
midori_preferences_get_property	midori-preferences.c	/^midori_preferences_get_property (GObject*    object,$/;"	p	file:	signature:(GObject* object, guint prop_id, GValue* value, GParamSpec* pspec)
midori_preferences_homepage_current_clicked_cb	midori-preferences.c	/^midori_preferences_homepage_current_clicked_cb (GtkWidget*         button,$/;"	f	file:	signature:(GtkWidget* button, MidoriWebSettings* settings)
midori_preferences_init	midori-preferences.c	/^midori_preferences_init (MidoriPreferences* preferences)$/;"	f	file:	signature:(MidoriPreferences* preferences)
midori_preferences_new	midori-preferences.c	/^midori_preferences_new (GtkWindow*         parent,$/;"	f	signature:(GtkWindow* parent, MidoriWebSettings* settings)
midori_preferences_new	midori-preferences.h	/^midori_preferences_new              (GtkWindow*         parent,$/;"	p	signature:(GtkWindow* parent, MidoriWebSettings* settings)
midori_preferences_notify_proxy_type_cb	midori-preferences.c	/^midori_preferences_notify_proxy_type_cb (MidoriWebSettings* settings,$/;"	f	file:	signature:(MidoriWebSettings* settings, GParamSpec* pspec, GtkWidget* entry)
midori_preferences_response_help_cb	midori-browser.c	/^midori_preferences_response_help_cb (GtkWidget*     preferences,$/;"	f	file:	signature:(GtkWidget* preferences, gint response, MidoriBrowser* browser)
midori_preferences_set_property	midori-preferences.c	/^midori_preferences_set_property (GObject*      object,$/;"	f	file:	signature:(GObject* object, guint prop_id, const GValue* value, GParamSpec* pspec)
midori_preferences_set_property	midori-preferences.c	/^midori_preferences_set_property (GObject*      object,$/;"	p	file:	signature:(GObject* object, guint prop_id, const GValue* value, GParamSpec* pspec)
midori_preferences_set_settings	midori-preferences.c	/^midori_preferences_set_settings (MidoriPreferences* preferences,$/;"	f	signature:(MidoriPreferences* preferences, MidoriWebSettings* settings)
midori_preferences_set_settings	midori-preferences.h	/^midori_preferences_set_settings     (MidoriPreferences* preferences,$/;"	p	signature:(MidoriPreferences* preferences, MidoriWebSettings* settings)
midori_preferences_toolbutton_clicked_cb	midori-preferences.c	/^midori_preferences_toolbutton_clicked_cb (GtkWidget* toolbutton,$/;"	f	file:	signature:(GtkWidget* toolbutton, GtkWidget* page)
midori_preferred_encoding_get_type	midori-websettings.c	/^midori_preferred_encoding_get_type (void)$/;"	f	signature:(void)
midori_prepare_uri	main.c	/^midori_prepare_uri (const gchar *uri)$/;"	f	file:	signature:(const gchar *uri)
midori_proxy_get_type	midori-websettings.c	/^midori_proxy_get_type (void)$/;"	f	signature:(void)
midori_remove_config_file	main.c	/^midori_remove_config_file (gint         clear_prefs,$/;"	f	file:	signature:(gint clear_prefs, gint flag, const gchar* filename)
midori_search_action_activate	midori-searchaction.c	/^midori_search_action_activate (GtkAction* action)$/;"	f	file:	signature:(GtkAction* action)
midori_search_action_activate	midori-searchaction.c	/^midori_search_action_activate (GtkAction* object);$/;"	p	file:	signature:(GtkAction* object)
midori_search_action_activate_edit_cb	midori-searchaction.c	/^midori_search_action_activate_edit_cb (GtkTreeView *treeview,$/;"	f	file:	signature:(GtkTreeView *treeview, GtkTreePath *path, GtkTreeViewColumn *column, MidoriSearchAction* search_action)
midori_search_action_class_init	midori-searchaction.c	/^midori_search_action_class_init (MidoriSearchActionClass* class)$/;"	f	file:	signature:(MidoriSearchActionClass* class)
midori_search_action_connect_proxy	midori-searchaction.c	/^midori_search_action_connect_proxy (GtkAction* action,$/;"	f	file:	signature:(GtkAction* action, GtkWidget* proxy)
midori_search_action_connect_proxy	midori-searchaction.c	/^midori_search_action_connect_proxy (GtkAction* action,$/;"	p	file:	signature:(GtkAction* action, GtkWidget* proxy)
midori_search_action_create_tool_item	midori-searchaction.c	/^midori_search_action_create_tool_item (GtkAction* action)$/;"	f	file:	signature:(GtkAction* action)
midori_search_action_create_tool_item	midori-searchaction.c	/^midori_search_action_create_tool_item (GtkAction* action);$/;"	p	file:	signature:(GtkAction* action)
midori_search_action_dialog_add_cb	midori-searchaction.c	/^midori_search_action_dialog_add_cb (GtkWidget*          widget,$/;"	f	file:	signature:(GtkWidget* widget, MidoriSearchAction* search_action)
midori_search_action_dialog_default_cb	midori-searchaction.c	/^midori_search_action_dialog_default_cb (GtkWidget*          widget,$/;"	f	file:	signature:(GtkWidget* widget, MidoriSearchAction* search_action)
midori_search_action_dialog_edit_cb	midori-searchaction.c	/^midori_search_action_dialog_edit_cb (GtkWidget*  widget,$/;"	f	file:	signature:(GtkWidget* widget, MidoriSearchAction* search_action)
midori_search_action_dialog_engines_add_item_cb	midori-searchaction.c	/^midori_search_action_dialog_engines_add_item_cb (KatzeArray* list,$/;"	f	file:	signature:(KatzeArray* list, KatzeItem* item, GtkAction* action)
midori_search_action_dialog_engines_remove_item_cb	midori-searchaction.c	/^midori_search_action_dialog_engines_remove_item_cb (KatzeArray* list,$/;"	f	file:	signature:(KatzeArray* list, KatzeItem* item, GtkAction* action)
midori_search_action_dialog_move_down_cb	midori-searchaction.c	/^midori_search_action_dialog_move_down_cb (GtkWidget*          widget,$/;"	f	file:	signature:(GtkWidget* widget, MidoriSearchAction* search_action)
midori_search_action_dialog_move_up_cb	midori-searchaction.c	/^midori_search_action_dialog_move_up_cb (GtkWidget*          widget,$/;"	f	file:	signature:(GtkWidget* widget, MidoriSearchAction* search_action)
midori_search_action_dialog_remove_cb	midori-searchaction.c	/^midori_search_action_dialog_remove_cb (GtkWidget*          widget,$/;"	f	file:	signature:(GtkWidget* widget, MidoriSearchAction* search_action)
midori_search_action_dialog_render_icon_cb	midori-searchaction.c	/^midori_search_action_dialog_render_icon_cb (GtkTreeViewColumn* column,$/;"	f	file:	signature:(GtkTreeViewColumn* column, GtkCellRenderer* renderer, GtkTreeModel* model, GtkTreeIter* iter, GtkWidget* treeview)
midori_search_action_dialog_render_text	midori-searchaction.c	/^midori_search_action_dialog_render_text (GtkTreeViewColumn* column,$/;"	f	file:	signature:(GtkTreeViewColumn* column, GtkCellRenderer* renderer, GtkTreeModel* model, GtkTreeIter* iter, GtkWidget* treeview)
midori_search_action_dialog_render_tick_cb	midori-searchaction.c	/^midori_search_action_dialog_render_tick_cb (GtkTreeViewColumn* column,$/;"	f	file:	signature:(GtkTreeViewColumn* column, GtkCellRenderer* renderer, GtkTreeModel* model, GtkTreeIter* iter, GtkWidget* treeview)
midori_search_action_dialog_render_token	midori-searchaction.c	/^midori_search_action_dialog_render_token (GtkTreeViewColumn* column,$/;"	f	file:	signature:(GtkTreeViewColumn* column, GtkCellRenderer* renderer, GtkTreeModel* model, GtkTreeIter* iter, GtkWidget* treeview)
midori_search_action_dialog_respnse_cb	midori-searchaction.c	/^midori_search_action_dialog_respnse_cb (GtkWidget* dialog,$/;"	f	file:	signature:(GtkWidget* dialog, gint response, gpointer data)
midori_search_action_disconnect_proxy	midori-searchaction.c	/^midori_search_action_disconnect_proxy (GtkAction* action,$/;"	f	file:	signature:(GtkAction* action, GtkWidget* proxy)
midori_search_action_disconnect_proxy	midori-searchaction.c	/^midori_search_action_disconnect_proxy (GtkAction* action,$/;"	p	file:	signature:(GtkAction* action, GtkWidget* proxy)
midori_search_action_editor_name_changed_cb	midori-searchaction.c	/^midori_search_action_editor_name_changed_cb (GtkWidget* entry,$/;"	f	file:	signature:(GtkWidget* entry, GtkWidget* dialog)
midori_search_action_engine_activate_cb	midori-searchaction.c	/^midori_search_action_engine_activate_cb (GtkWidget*          menuitem,$/;"	f	file:	signature:(GtkWidget* menuitem, MidoriSearchAction* search_action)
midori_search_action_engines_add_item_cb	midori-searchaction.c	/^midori_search_action_engines_add_item_cb (KatzeArray*         list,$/;"	f	file:	signature:(KatzeArray* list, KatzeItem* item, MidoriSearchAction* search_action)
midori_search_action_engines_remove_item_cb	midori-searchaction.c	/^midori_search_action_engines_remove_item_cb (KatzeArray*         list,$/;"	f	file:	signature:(KatzeArray* list, KatzeItem* item, MidoriSearchAction* search_action)
midori_search_action_finalize	midori-searchaction.c	/^midori_search_action_finalize (GObject* object)$/;"	f	file:	signature:(GObject* object)
midori_search_action_finalize	midori-searchaction.c	/^midori_search_action_finalize (GObject* object);$/;"	p	file:	signature:(GObject* object)
midori_search_action_focus_out_event_cb	midori-searchaction.c	/^midori_search_action_focus_out_event_cb (GtkWidget*   widget,$/;"	f	file:	signature:(GtkWidget* widget, GdkEventKey* event, GtkAction* action)
midori_search_action_get_current_item	midori-searchaction.c	/^midori_search_action_get_current_item (MidoriSearchAction* search_action)$/;"	f	signature:(MidoriSearchAction* search_action)
midori_search_action_get_current_item	midori-searchaction.h	/^midori_search_action_get_current_item      (MidoriSearchAction* search_action);$/;"	p	signature:(MidoriSearchAction* search_action)
midori_search_action_get_default_item	midori-searchaction.c	/^midori_search_action_get_default_item (MidoriSearchAction* search_action)$/;"	f	signature:(MidoriSearchAction* search_action)
midori_search_action_get_default_item	midori-searchaction.h	/^midori_search_action_get_default_item      (MidoriSearchAction* search_action);$/;"	p	signature:(MidoriSearchAction* search_action)
midori_search_action_get_dialog	midori-searchaction.c	/^midori_search_action_get_dialog (MidoriSearchAction* search_action)$/;"	f	signature:(MidoriSearchAction* search_action)
midori_search_action_get_dialog	midori-searchaction.h	/^midori_search_action_get_dialog            (MidoriSearchAction* search_action);$/;"	p	signature:(MidoriSearchAction* search_action)
midori_search_action_get_editor	midori-searchaction.c	/^midori_search_action_get_editor (MidoriSearchAction* search_action,$/;"	f	file:	signature:(MidoriSearchAction* search_action, gboolean new_engine)
midori_search_action_get_icon	midori-searchaction.c	/^midori_search_action_get_icon (KatzeItem*    item,$/;"	f	signature:(KatzeItem* item, GtkWidget* widget, const gchar** icon_name, gboolean in_entry)
midori_search_action_get_icon	midori-searchaction.h	/^midori_search_action_get_icon              (KatzeItem*          item,$/;"	p	signature:(KatzeItem* item, GtkWidget* widget, const gchar** icon_name, gboolean in_entry)
midori_search_action_get_property	midori-searchaction.c	/^midori_search_action_get_property (GObject*    object,$/;"	f	file:	signature:(GObject* object, guint prop_id, GValue* value, GParamSpec* pspec)
midori_search_action_get_property	midori-searchaction.c	/^midori_search_action_get_property (GObject*    object,$/;"	p	file:	signature:(GObject* object, guint prop_id, GValue* value, GParamSpec* pspec)
midori_search_action_get_search_engines	midori-searchaction.c	/^midori_search_action_get_search_engines (MidoriSearchAction* search_action)$/;"	f	signature:(MidoriSearchAction* search_action)
midori_search_action_get_search_engines	midori-searchaction.h	/^midori_search_action_get_search_engines    (MidoriSearchAction* search_action);$/;"	p	signature:(MidoriSearchAction* search_action)
midori_search_action_get_text	midori-searchaction.c	/^midori_search_action_get_text (MidoriSearchAction* search_action)$/;"	f	signature:(MidoriSearchAction* search_action)
midori_search_action_get_text	midori-searchaction.h	/^midori_search_action_get_text              (MidoriSearchAction* action);$/;"	p	signature:(MidoriSearchAction* action)
midori_search_action_icon_released_cb	midori-searchaction.c	/^midori_search_action_icon_released_cb (GtkWidget*           entry,$/;"	f	file:	signature:(GtkWidget* entry, GtkIconEntryPosition icon_pos, gint button, GtkAction* action)
midori_search_action_init	midori-searchaction.c	/^midori_search_action_init (MidoriSearchAction* search_action)$/;"	f	file:	signature:(MidoriSearchAction* search_action)
midori_search_action_key_press_event_cb	midori-searchaction.c	/^midori_search_action_key_press_event_cb (GtkWidget*          entry,$/;"	f	file:	signature:(GtkWidget* entry, GdkEventKey* event, MidoriSearchAction* search_action)
midori_search_action_manage_activate_cb	midori-searchaction.c	/^midori_search_action_manage_activate_cb (GtkWidget*          menuitem,$/;"	f	file:	signature:(GtkWidget* menuitem, MidoriSearchAction* search_action)
midori_search_action_scroll_event_cb	midori-searchaction.c	/^midori_search_action_scroll_event_cb (GtkWidget*          entry,$/;"	f	file:	signature:(GtkWidget* entry, GdkEventScroll* event, MidoriSearchAction* search_action)
midori_search_action_set_current_item	midori-searchaction.c	/^midori_search_action_set_current_item (MidoriSearchAction* search_action,$/;"	f	signature:(MidoriSearchAction* search_action, KatzeItem* item)
midori_search_action_set_current_item	midori-searchaction.h	/^midori_search_action_set_current_item      (MidoriSearchAction* search_action,$/;"	p	signature:(MidoriSearchAction* search_action, KatzeItem* item)
midori_search_action_set_default_item	midori-searchaction.c	/^midori_search_action_set_default_item (MidoriSearchAction* search_action,$/;"	f	signature:(MidoriSearchAction* search_action, KatzeItem* item)
midori_search_action_set_default_item	midori-searchaction.h	/^midori_search_action_set_default_item      (MidoriSearchAction* search_action,$/;"	p	signature:(MidoriSearchAction* search_action, KatzeItem* item)
midori_search_action_set_entry_icon	midori-searchaction.c	/^midori_search_action_set_entry_icon (MidoriSearchAction* search_action,$/;"	f	file:	signature:(MidoriSearchAction* search_action, GtkWidget* entry)
midori_search_action_set_property	midori-searchaction.c	/^midori_search_action_set_property (GObject*      object,$/;"	f	file:	signature:(GObject* object, guint prop_id, const GValue* value, GParamSpec* pspec)
midori_search_action_set_property	midori-searchaction.c	/^midori_search_action_set_property (GObject*      object,$/;"	p	file:	signature:(GObject* object, guint prop_id, const GValue* value, GParamSpec* pspec)
midori_search_action_set_search_engines	midori-searchaction.c	/^midori_search_action_set_search_engines (MidoriSearchAction* search_action,$/;"	f	signature:(MidoriSearchAction* search_action, KatzeArray* search_engines)
midori_search_action_set_search_engines	midori-searchaction.h	/^midori_search_action_set_search_engines    (MidoriSearchAction* search_action,$/;"	p	signature:(MidoriSearchAction* search_action, KatzeArray* search_engines)
midori_search_action_set_text	midori-searchaction.c	/^midori_search_action_set_text (MidoriSearchAction* search_action,$/;"	f	signature:(MidoriSearchAction* search_action, const gchar* text)
midori_search_action_set_text	midori-searchaction.h	/^midori_search_action_set_text              (MidoriSearchAction* search_action,$/;"	p	signature:(MidoriSearchAction* search_action, const gchar* text)
midori_search_action_treeview_destroy_cb	midori-searchaction.c	/^midori_search_action_treeview_destroy_cb (GtkWidget*          treeview,$/;"	f	file:	signature:(GtkWidget* treeview, MidoriSearchAction* search_action)
midori_search_action_treeview_selection_cb	midori-searchaction.c	/^midori_search_action_treeview_selection_cb (GtkTreeSelection*   selection,$/;"	f	file:	signature:(GtkTreeSelection* selection, MidoriSearchAction* search_action)
midori_search_engines_modify_cb	main.c	/^midori_search_engines_modify_cb (KatzeArray* array,$/;"	f	file:	signature:(KatzeArray* array, gpointer item, KatzeArray* search_engines)
midori_search_engines_move_item_cb	main.c	/^midori_search_engines_move_item_cb (KatzeArray* array,$/;"	f	file:	signature:(KatzeArray* array, gpointer item, gint position, KatzeArray* search_engines)
midori_security_get_type	midori-view.c	/^midori_security_get_type (void)$/;"	f	signature:(void)
midori_session_save_timeout_cb	main.c	/^midori_session_save_timeout_cb (KatzeArray* session)$/;"	f	file:	signature:(KatzeArray* session)
midori_setup_inactivity_reset	main.c	/^midori_setup_inactivity_reset (MidoriBrowser* browser,$/;"	f	file:	signature:(MidoriBrowser* browser, gint inactivity_reset, const gchar* uri)
midori_show_diagnostic_dialog	main.c	/^midori_show_diagnostic_dialog (MidoriWebSettings* settings,$/;"	f	file:	signature:(MidoriWebSettings* settings, KatzeArray* _session)
midori_soup_session_block_uris_cb	main.c	/^midori_soup_session_block_uris_cb (SoupSession* session,$/;"	f	file:	signature:(SoupSession* session, SoupMessage* msg, gchar* blocked_uris)
midori_soup_session_debug	main.c	/^midori_soup_session_debug (SoupSession* session)$/;"	f	file:	signature:(SoupSession* session)
midori_soup_session_set_proxy_uri	main.c	/^midori_soup_session_set_proxy_uri (SoupSession* session,$/;"	f	file:	signature:(SoupSession* session, const gchar* uri)
midori_soup_session_settings_accept_language_cb	main.c	/^midori_soup_session_settings_accept_language_cb (SoupSession*       session,$/;"	f	file:	signature:(SoupSession* session, SoupMessage* msg, MidoriWebSettings* settings)
midori_startup_get_type	midori-websettings.c	/^midori_startup_get_type (void)$/;"	f	signature:(void)
midori_startup_timer	main.c	1948;"	d	file:
midori_toolbar_style_get_type	midori-websettings.c	/^midori_toolbar_style_get_type (void)$/;"	f	signature:(void)
midori_transferbar_add_download_item	midori-browser.c	/^midori_transferbar_add_download_item (MidoriTransferbar* transferbar,$/;"	p	file:	signature:(MidoriTransferbar* transferbar, WebKitDownload* download)
midori_transferbar_check_size	midori-browser.c	/^midori_transferbar_check_size (GtkWidget*         statusbar,$/;"	p	file:	signature:(GtkWidget* statusbar, MidoriTransferbar* transferbar)
midori_transferbar_confirm_delete	midori-browser.c	/^midori_transferbar_confirm_delete (MidoriTransferbar* transferbar);$/;"	p	file:	signature:(MidoriTransferbar* transferbar)
midori_trash_add_item_cb	main.c	/^midori_trash_add_item_cb (KatzeArray* trash,$/;"	f	file:	signature:(KatzeArray* trash, GObject* item)
midori_trash_add_item_no_save_cb	main.c	/^midori_trash_add_item_no_save_cb (KatzeArray* trash,$/;"	f	file:	signature:(KatzeArray* trash, GObject* item)
midori_trash_remove_item_cb	main.c	/^midori_trash_remove_item_cb (KatzeArray* trash,$/;"	f	file:	signature:(KatzeArray* trash, GObject* item)
midori_view_activate_action_cb	midori-browser.c	/^midori_view_activate_action_cb (GtkWidget*     view,$/;"	f	file:	signature:(GtkWidget* view, const gchar* action, MidoriBrowser* browser)
midori_view_add_info_bar	midori-view.c	/^midori_view_add_info_bar (MidoriView*    view,$/;"	f	signature:(MidoriView* view, GtkMessageType message_type, const gchar* message, GCallback response_cb, gpointer data_object, const gchar* first_button_text, ...)
midori_view_add_info_bar	midori-view.h	/^midori_view_add_info_bar               (MidoriView*        view,$/;"	p	signature:(MidoriView* view, GtkMessageType message_type, const gchar* message, GCallback response_cb, gpointer user_data, const gchar* first_button_text, ...)
midori_view_add_speed_dial_cb	midori-browser.c	/^midori_view_add_speed_dial_cb (GtkWidget*   menuitem,$/;"	f	file:	signature:(GtkWidget* menuitem, const gchar* uri, GtkWidget* view)
midori_view_apply_icon	midori-view.c	/^midori_view_apply_icon (MidoriView*  view,$/;"	f	file:	signature:(MidoriView* view, GdkPixbuf* icon, const gchar* icon_name)
midori_view_apply_scroll_position	midori-view.c	/^midori_view_apply_scroll_position (MidoriView* view)$/;"	f	file:	signature:(MidoriView* view)
midori_view_attach_inspector_cb	midori-browser.c	/^midori_view_attach_inspector_cb (GtkWidget*     view,$/;"	f	file:	signature:(GtkWidget* view, GtkWidget* inspector_view, MidoriBrowser* browser)
midori_view_browser_close_tabs_cb	midori-view.c	/^midori_view_browser_close_tabs_cb (GtkWidget* view,$/;"	f	file:	signature:(GtkWidget* view, gpointer data)
midori_view_can_copy_clipboard	midori-view.c	/^midori_view_can_copy_clipboard (MidoriView* view)$/;"	f	signature:(MidoriView* view)
midori_view_can_copy_clipboard	midori-view.h	/^midori_view_can_copy_clipboard         (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_can_cut_clipboard	midori-view.c	/^midori_view_can_cut_clipboard (MidoriView* view)$/;"	f	signature:(MidoriView* view)
midori_view_can_cut_clipboard	midori-view.h	/^midori_view_can_cut_clipboard          (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_can_find	midori-view.h	/^midori_view_can_find                   (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_can_go_back	midori-view.c	/^midori_view_can_go_back (MidoriView* view)$/;"	f	signature:(MidoriView* view)
midori_view_can_go_back	midori-view.h	/^midori_view_can_go_back                (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_can_go_forward	midori-view.c	/^midori_view_can_go_forward (MidoriView* view)$/;"	f	signature:(MidoriView* view)
midori_view_can_go_forward	midori-view.h	/^midori_view_can_go_forward             (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_can_paste_clipboard	midori-view.c	/^midori_view_can_paste_clipboard (MidoriView* view)$/;"	f	signature:(MidoriView* view)
midori_view_can_paste_clipboard	midori-view.h	/^midori_view_can_paste_clipboard        (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_can_print	midori-view.h	/^midori_view_can_print                  (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_can_reload	midori-view.h	/^midori_view_can_reload                 (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_can_save	midori-view.c	/^midori_view_can_save (MidoriView* view)$/;"	f	signature:(MidoriView* view)
midori_view_can_save	midori-view.h	/^midori_view_can_save                   (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_can_view_source	midori-view.c	/^midori_view_can_view_source (MidoriView* view)$/;"	f	signature:(MidoriView* view)
midori_view_can_view_source	midori-view.h	/^midori_view_can_view_source            (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_can_zoom_in	midori-view.c	/^midori_view_can_zoom_in (MidoriView* view)$/;"	f	signature:(MidoriView* view)
midori_view_can_zoom_in	midori-view.h	/^midori_view_can_zoom_in                (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_can_zoom_out	midori-view.c	/^midori_view_can_zoom_out (MidoriView* view)$/;"	f	signature:(MidoriView* view)
midori_view_can_zoom_out	midori-view.h	/^midori_view_can_zoom_out               (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_class_init	midori-view.c	/^midori_view_class_init (MidoriViewClass* class)$/;"	f	file:	signature:(MidoriViewClass* class)
midori_view_construct_web_view	midori-view.c	/^midori_view_construct_web_view (MidoriView* view)$/;"	f	file:	signature:(MidoriView* view)
midori_view_construct_web_view	midori-view.c	/^midori_view_construct_web_view (MidoriView* view);$/;"	p	file:	signature:(MidoriView* view)
midori_view_database_response_cb	midori-view.c	/^midori_view_database_response_cb (GtkWidget*         infobar,$/;"	f	file:	signature:(GtkWidget* infobar, gint response, WebKitWebDatabase* database)
midori_view_detach_inspector_cb	midori-browser.c	/^midori_view_detach_inspector_cb (GtkWidget*     view,$/;"	f	file:	signature:(GtkWidget* view, GtkWidget* inspector_view, MidoriBrowser* browser)
midori_view_display_error	midori-view.c	/^midori_view_display_error (MidoriView*     view,$/;"	f	file:	signature:(MidoriView* view, const gchar* uri, const gchar* title, const gchar* message, const gchar* description, const gchar* try_again, WebKitWebFrame* web_frame)
midori_view_download_requested_cb	midori-browser.c	/^midori_view_download_requested_cb (GtkWidget*      view,$/;"	f	file:	signature:(GtkWidget* view, WebKitDownload* download, MidoriBrowser* browser)
midori_view_download_save_as_response_cb	midori-browser.c	/^midori_view_download_save_as_response_cb (GtkWidget*      dialog,$/;"	f	file:	signature:(GtkWidget* dialog, gint response, MidoriBrowser* browser)
midori_view_ensure_link_uri	midori-view.c	/^midori_view_ensure_link_uri (MidoriView* view,$/;"	f	file:	signature:(MidoriView* view, gint *x, gint *y, GdkEventButton* event)
midori_view_execute_script	midori-view.c	/^midori_view_execute_script (MidoriView*  view,$/;"	f	signature:(MidoriView* view, const gchar* script, gchar** exception)
midori_view_execute_script	midori-view.h	/^midori_view_execute_script             (MidoriView*        view,$/;"	p	signature:(MidoriView* view, const gchar* script, gchar** exception)
midori_view_finalize	midori-view.c	/^midori_view_finalize (GObject* object)$/;"	f	file:	signature:(GObject* object)
midori_view_finalize	midori-view.c	/^midori_view_finalize (GObject* object);$/;"	p	file:	signature:(GObject* object)
midori_view_focus_in_event	midori-view.c	/^midori_view_focus_in_event (GtkWidget*     widget,$/;"	f	file:	signature:(GtkWidget* widget, GdkEventFocus* event)
midori_view_focus_in_event	midori-view.c	/^midori_view_focus_in_event (GtkWidget*     widget,$/;"	p	file:	signature:(GtkWidget* widget, GdkEventFocus* event)
midori_view_get_display_title	midori-view.c	/^midori_view_get_display_title (MidoriView* view)$/;"	f	signature:(MidoriView* view)
midori_view_get_display_title	midori-view.h	/^midori_view_get_display_title          (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_get_display_uri	midori-view.c	/^midori_view_get_display_uri (MidoriView* view)$/;"	f	signature:(MidoriView* view)
midori_view_get_display_uri	midori-view.h	/^midori_view_get_display_uri            (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_get_icon	midori-view.c	/^midori_view_get_icon (MidoriView* view)$/;"	f	signature:(MidoriView* view)
midori_view_get_icon	midori-view.h	/^midori_view_get_icon                   (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_get_icon_uri	midori-view.c	/^midori_view_get_icon_uri (MidoriView* view)$/;"	f	signature:(MidoriView* view)
midori_view_get_icon_uri	midori-view.h	/^midori_view_get_icon_uri               (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_get_label_ellipsize	midori-view.c	/^midori_view_get_label_ellipsize (MidoriView* view)$/;"	f	signature:(MidoriView* view)
midori_view_get_label_ellipsize	midori-view.h	/^midori_view_get_label_ellipsize        (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_get_link_uri	midori-view.c	/^midori_view_get_link_uri (MidoriView* view)$/;"	f	signature:(MidoriView* view)
midori_view_get_link_uri	midori-view.h	/^midori_view_get_link_uri               (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_get_load_status	midori-view.c	/^midori_view_get_load_status (MidoriView* view)$/;"	f	signature:(MidoriView* view)
midori_view_get_load_status	midori-view.h	/^midori_view_get_load_status            (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_get_memory	midori-view.c	/^static GHashTable* midori_view_get_memory (void)$/;"	f	file:	signature:(void)
midori_view_get_next_page	midori-view.c	/^midori_view_get_next_page (MidoriView* view)$/;"	f	signature:(MidoriView* view)
midori_view_get_next_page	midori-view.h	/^midori_view_get_next_page              (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_get_previous_page	midori-view.c	/^midori_view_get_previous_page (MidoriView* view)$/;"	f	signature:(MidoriView* view)
midori_view_get_previous_page	midori-view.h	/^midori_view_get_previous_page          (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_get_progress	midori-view.c	/^midori_view_get_progress (MidoriView* view)$/;"	f	signature:(MidoriView* view)
midori_view_get_progress	midori-view.h	/^midori_view_get_progress               (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_get_property	midori-view.c	/^midori_view_get_property (GObject*    object,$/;"	f	file:	signature:(GObject* object, guint prop_id, GValue* value, GParamSpec* pspec)
midori_view_get_property	midori-view.c	/^midori_view_get_property (GObject*    object,$/;"	p	file:	signature:(GObject* object, guint prop_id, GValue* value, GParamSpec* pspec)
midori_view_get_proxy_item	midori-view.c	/^midori_view_get_proxy_item (MidoriView* view)$/;"	f	signature:(MidoriView* view)
midori_view_get_proxy_item	midori-view.h	/^midori_view_get_proxy_item             (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_get_proxy_menu_item	midori-view.c	/^midori_view_get_proxy_menu_item (MidoriView* view)$/;"	f	signature:(MidoriView* view)
midori_view_get_proxy_menu_item	midori-view.h	/^midori_view_get_proxy_menu_item        (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_get_proxy_tab_label	midori-view.c	/^midori_view_get_proxy_tab_label (MidoriView* view)$/;"	f	signature:(MidoriView* view)
midori_view_get_proxy_tab_label	midori-view.h	/^midori_view_get_proxy_tab_label        (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_get_related_page	midori-view.c	/^midori_view_get_related_page (MidoriView*  view,$/;"	f	file:	signature:(MidoriView* view, const gchar* rel, const gchar* local)
midori_view_get_security	midori-view.c	/^midori_view_get_security (MidoriView* view)$/;"	f	signature:(MidoriView* view)
midori_view_get_security	midori-view.h	/^midori_view_get_security               (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_get_selected_text	midori-view.c	/^midori_view_get_selected_text (MidoriView* view)$/;"	f	signature:(MidoriView* view)
midori_view_get_selected_text	midori-view.h	/^midori_view_get_selected_text          (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_get_snapshot	midori-view.c	/^midori_view_get_snapshot (MidoriView* view,$/;"	f	signature:(MidoriView* view, gint width, gint height)
midori_view_get_snapshot	midori-view.h	/^midori_view_get_snapshot               (MidoriView*        view,$/;"	p	signature:(MidoriView* view, gint width, gint height)
midori_view_get_tab_menu	midori-view.c	/^midori_view_get_tab_menu (MidoriView* view)$/;"	f	signature:(MidoriView* view)
midori_view_get_tab_menu	midori-view.h	/^midori_view_get_tab_menu               (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_get_web_view	midori-view.c	/^midori_view_get_web_view        (MidoriView*        view)$/;"	f	signature:(MidoriView* view)
midori_view_get_web_view	midori-view.h	/^midori_view_get_web_view               (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_get_zoom_level	midori-view.c	/^midori_view_get_zoom_level (MidoriView* view)$/;"	f	signature:(MidoriView* view)
midori_view_get_zoom_level	midori-view.h	/^midori_view_get_zoom_level             (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_go_back	midori-view.c	/^midori_view_go_back (MidoriView* view)$/;"	f	signature:(MidoriView* view)
midori_view_go_back	midori-view.h	/^midori_view_go_back                    (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_go_forward	midori-view.c	/^midori_view_go_forward (MidoriView* view)$/;"	f	signature:(MidoriView* view)
midori_view_go_forward	midori-view.h	/^midori_view_go_forward                 (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_hadjustment_notify_value_cb	midori-view.c	/^midori_view_hadjustment_notify_value_cb (GtkAdjustment* hadjustment,$/;"	f	file:	signature:(GtkAdjustment* hadjustment, GParamSpec* pspec, MidoriView* view)
midori_view_has_selection	midori-view.c	/^midori_view_has_selection (MidoriView* view)$/;"	f	signature:(MidoriView* view)
midori_view_has_selection	midori-view.h	/^midori_view_has_selection              (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_info_bar_button_cb	midori-view.c	/^midori_view_info_bar_button_cb (GtkWidget* button,$/;"	f	file:	signature:(GtkWidget* button, gpointer data_object)
midori_view_infobar_response_cb	midori-view.c	/^midori_view_infobar_response_cb (GtkWidget* infobar,$/;"	f	file:	signature:(GtkWidget* infobar, gint response, gpointer data_object)
midori_view_init	midori-view.c	/^midori_view_init (MidoriView* view)$/;"	f	file:	signature:(MidoriView* view)
midori_view_insert_menu_item	midori-view.c	/^midori_view_insert_menu_item (GtkMenuShell* menu,$/;"	f	file:	signature:(GtkMenuShell* menu, gint position, const gchar* label, const gchar* stock_id, GCallback callback, GtkWidget* widget)
midori_view_inspector_window_key_press_event_cb	midori-view.c	/^midori_view_inspector_window_key_press_event_cb (GtkWidget*   window,$/;"	f	file:	signature:(GtkWidget* window, GdkEventKey* event, gpointer user_data)
midori_view_is_blank	midori-view.c	/^midori_view_is_blank (MidoriView*  view)$/;"	f	signature:(MidoriView* view)
midori_view_is_blank	midori-view.h	/^midori_view_is_blank                   (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_item_meta_data_changed	midori-view.c	/^midori_view_item_meta_data_changed (KatzeItem*   item,$/;"	f	file:	signature:(KatzeItem* item, const gchar* key, MidoriView* view)
midori_view_item_meta_data_changed	midori-view.c	/^midori_view_item_meta_data_changed (KatzeItem*   item,$/;"	p	file:	signature:(KatzeItem* item, const gchar* key, MidoriView* view)
midori_view_load_alternate_string	midori-view.c	/^midori_view_load_alternate_string (MidoriView*     view,$/;"	f	file:	signature:(MidoriView* view, const gchar* data, const gchar* uri, WebKitWebFrame* web_frame)
midori_view_location_response_cb	midori-view.c	/^midori_view_location_response_cb (GtkWidget*                       infobar,$/;"	f	file:	signature:(GtkWidget* infobar, gint response, WebKitGeolocationPolicyDecision* decision)
midori_view_mark_text_matches	midori-view.c	/^midori_view_mark_text_matches (MidoriView*  view,$/;"	f	signature:(MidoriView* view, const gchar* text, gboolean case_sensitive)
midori_view_mark_text_matches	midori-view.h	/^midori_view_mark_text_matches          (MidoriView*        view,$/;"	p	signature:(MidoriView* view, const gchar* text, gboolean case_sensitive)
midori_view_mime_icon	midori-view.c	/^midori_view_mime_icon (MidoriView*   view,$/;"	f	file:	signature:(MidoriView* view, GtkIconTheme* icon_theme, const gchar* format, const gchar* part1, const gchar* part2)
midori_view_new	midori-view.c	/^midori_view_new (KatzeNet* net)$/;"	f	signature:(KatzeNet* net)
midori_view_new	midori-view.h	/^midori_view_new                        (KatzeNet*          net);$/;"	p	signature:(KatzeNet* net)
midori_view_new_tab_cb	midori-browser.c	/^midori_view_new_tab_cb (GtkWidget*     view,$/;"	f	file:	signature:(GtkWidget* view, const gchar* uri, gboolean background, MidoriBrowser* browser)
midori_view_new_view_cb	midori-browser.c	/^midori_view_new_view_cb (GtkWidget*     view,$/;"	f	file:	signature:(GtkWidget* view, GtkWidget* new_view, MidoriNewView where, gboolean user_initiated, MidoriBrowser* browser)
midori_view_new_window_cb	midori-browser.c	/^midori_view_new_window_cb (GtkWidget*     view,$/;"	f	file:	signature:(GtkWidget* view, const gchar* uri, MidoriBrowser* browser)
midori_view_new_with_item	midori-view.c	/^midori_view_new_with_item (KatzeItem*         item,$/;"	f	signature:(KatzeItem* item, MidoriWebSettings* settings)
midori_view_new_with_item	midori-view.h	/^midori_view_new_with_item              (KatzeItem*         item,$/;"	p	signature:(KatzeItem* item, MidoriWebSettings* settings)
midori_view_new_with_title	midori-view.c	/^midori_view_new_with_title (const gchar*       title,$/;"	f	signature:(const gchar* title, MidoriWebSettings* settings, gboolean append)
midori_view_new_with_title	midori-view.h	/^midori_view_new_with_title             (const gchar*       title,$/;"	p	signature:(const gchar* title, MidoriWebSettings* settings, gboolean append)
midori_view_notify_hadjustment_cb	midori-view.c	/^midori_view_notify_hadjustment_cb (MidoriView* view,$/;"	f	file:	signature:(MidoriView* view, GParamSpec* pspec, gpointer data)
midori_view_notify_icon_cb	midori-browser.c	/^midori_view_notify_icon_cb (MidoriView*    view,$/;"	f	file:	signature:(MidoriView* view, GParamSpec* pspec, MidoriBrowser* browser)
midori_view_notify_load_status_cb	midori-browser.c	/^midori_view_notify_load_status_cb (GtkWidget*      widget,$/;"	f	file:	signature:(GtkWidget* widget, GParamSpec* pspec, MidoriBrowser* browser)
midori_view_notify_minimized_cb	midori-browser.c	/^midori_view_notify_minimized_cb (GtkWidget*     widget,$/;"	f	file:	signature:(GtkWidget* widget, GParamSpec* pspec, MidoriBrowser* browser)
midori_view_notify_progress_cb	midori-browser.c	/^midori_view_notify_progress_cb (GtkWidget*     view,$/;"	f	file:	signature:(GtkWidget* view, GParamSpec* pspec, MidoriBrowser* browser)
midori_view_notify_statusbar_text_cb	midori-browser.c	/^midori_view_notify_statusbar_text_cb (GtkWidget*     view,$/;"	f	file:	signature:(GtkWidget* view, GParamSpec* pspec, MidoriBrowser* browser)
midori_view_notify_title_cb	midori-browser.c	/^midori_view_notify_title_cb (GtkWidget*     widget,$/;"	f	file:	signature:(GtkWidget* widget, GParamSpec* pspec, MidoriBrowser* browser)
midori_view_notify_uri_cb	midori-browser.c	/^midori_view_notify_uri_cb (GtkWidget*     widget,$/;"	f	file:	signature:(GtkWidget* widget, GParamSpec* pspec, MidoriBrowser* browser)
midori_view_notify_vadjustment_cb	midori-view.c	/^midori_view_notify_vadjustment_cb (MidoriView* view,$/;"	f	file:	signature:(MidoriView* view, GParamSpec* pspec, gpointer data)
midori_view_notify_zoom_level_cb	midori-browser.c	/^midori_view_notify_zoom_level_cb (GtkWidget*     view,$/;"	f	file:	signature:(GtkWidget* view, GParamSpec* pspec, MidoriBrowser* browser)
midori_view_populate_popup	midori-view.c	/^midori_view_populate_popup (MidoriView* view,$/;"	f	signature:(MidoriView* view, GtkWidget* menu, gboolean manual)
midori_view_populate_popup	midori-view.h	/^midori_view_populate_popup             (MidoriView*        view,$/;"	p	signature:(MidoriView* view, GtkWidget* menu, gboolean manual)
midori_view_print	midori-view.c	/^midori_view_print (MidoriView* view)$/;"	f	signature:(MidoriView* view)
midori_view_print	midori-view.h	/^midori_view_print                      (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_print_create_custom_widget_cb	midori-view.c	/^midori_view_print_create_custom_widget_cb (GtkPrintOperation* operation,$/;"	f	file:	signature:(GtkPrintOperation* operation, MidoriView* view)
midori_view_print_response_cb	midori-view.c	/^midori_view_print_response_cb (GtkWidget* dialog,$/;"	f	file:	signature:(GtkWidget* dialog, gint response, gpointer data)
midori_view_reload	midori-view.h	/^midori_view_reload                     (MidoriView*        view,$/;"	p	signature:(MidoriView* view, gboolean from_cache)
midori_view_save_as_cb	midori-browser.c	/^midori_view_save_as_cb (GtkWidget*   menuitem,$/;"	f	file:	signature:(GtkWidget* menuitem, const gchar* uri, GtkWidget* view)
midori_view_save_speed_dial_config	midori-view.c	/^midori_view_save_speed_dial_config (MidoriView* view,$/;"	f	signature:(MidoriView* view, GKeyFile* key_file)
midori_view_save_speed_dial_config	midori-view.h	/^midori_view_save_speed_dial_config     (MidoriView*        view,$/;"	p	signature:(MidoriView* view, GKeyFile* key_file)
midori_view_script_response_cb	midori-view.c	/^midori_view_script_response_cb (GtkWidget*  infobar,$/;"	f	file:	signature:(GtkWidget* infobar, gint response, MidoriView* view)
midori_view_search_text	midori-view.c	/^midori_view_search_text (MidoriView*  view,$/;"	f	signature:(MidoriView* view, const gchar* text, gboolean case_sensitive, gboolean forward)
midori_view_search_text	midori-view.h	/^midori_view_search_text                (MidoriView*        view,$/;"	p	signature:(MidoriView* view, const gchar* text, gboolean case_sensitive, gboolean forward)
midori_view_search_text_cb	midori-browser.c	/^midori_view_search_text_cb (GtkWidget*     view,$/;"	f	file:	signature:(GtkWidget* view, gboolean found, gchar* typing, MidoriBrowser* browser)
midori_view_set_highlight_text_matches	midori-view.c	/^midori_view_set_highlight_text_matches (MidoriView* view,$/;"	f	signature:(MidoriView* view, gboolean highlight)
midori_view_set_highlight_text_matches	midori-view.h	/^midori_view_set_highlight_text_matches (MidoriView*        view,$/;"	p	signature:(MidoriView* view, gboolean highlight)
midori_view_set_property	midori-view.c	/^midori_view_set_property (GObject*      object,$/;"	f	file:	signature:(GObject* object, guint prop_id, const GValue* value, GParamSpec* pspec)
midori_view_set_property	midori-view.c	/^midori_view_set_property (GObject*      object,$/;"	p	file:	signature:(GObject* object, guint prop_id, const GValue* value, GParamSpec* pspec)
midori_view_set_settings	midori-view.c	/^midori_view_set_settings (MidoriView*        view,$/;"	f	signature:(MidoriView* view, MidoriWebSettings* settings)
midori_view_set_settings	midori-view.h	/^midori_view_set_settings               (MidoriView*        view,$/;"	p	signature:(MidoriView* view, MidoriWebSettings* settings)
midori_view_set_title	midori-view.c	/^midori_view_set_title (MidoriView* view, const gchar* title)$/;"	f	file:	signature:(MidoriView* view, const gchar* title)
midori_view_set_uri	midori-view.c	/^midori_view_set_uri (MidoriView*  view,$/;"	f	signature:(MidoriView* view, const gchar* uri)
midori_view_set_uri	midori-view.h	/^midori_view_set_uri                    (MidoriView*        view,$/;"	p	signature:(MidoriView* view, const gchar* uri)
midori_view_set_zoom_level	midori-view.c	/^midori_view_set_zoom_level (MidoriView* view,$/;"	f	signature:(MidoriView* view, gfloat zoom_level)
midori_view_set_zoom_level	midori-view.h	/^midori_view_set_zoom_level             (MidoriView*        view,$/;"	p	signature:(MidoriView* view, gfloat zoom_level)
midori_view_settings_notify_cb	midori-view.c	/^midori_view_settings_notify_cb (MidoriWebSettings* settings,$/;"	f	file:	signature:(MidoriWebSettings* settings, GParamSpec* pspec, MidoriView* view)
midori_view_settings_notify_cb	midori-view.c	/^midori_view_settings_notify_cb (MidoriWebSettings* settings,$/;"	p	file:	signature:(MidoriWebSettings* settings, GParamSpec* pspec, MidoriView* view)
midori_view_speed_dial_get_thumb	midori-view.c	/^midori_view_speed_dial_get_thumb (MidoriView* view,$/;"	f	file:	signature:(MidoriView* view, gchar* dial_id, gchar* url)
midori_view_speed_dial_get_thumb	midori-view.c	/^midori_view_speed_dial_get_thumb (MidoriView* view,$/;"	p	file:	signature:(MidoriView* view, gchar* dial_id, gchar* url)
midori_view_speed_dial_save	midori-view.c	/^midori_view_speed_dial_save (MidoriView*   view,$/;"	p	file:	signature:(MidoriView* view, const gchar* message)
midori_view_speed_dial_save	midori-view.c	/^midori_view_speed_dial_save (MidoriView*  view,$/;"	f	file:	signature:(MidoriView* view, const gchar* message)
midori_view_stop_loading	midori-view.c	/^midori_view_stop_loading (MidoriView* view)$/;"	f	signature:(MidoriView* view)
midori_view_stop_loading	midori-view.h	/^midori_view_stop_loading               (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_tab_close_clicked	midori-view.c	/^midori_view_tab_close_clicked (GtkWidget* tab_close,$/;"	f	file:	signature:(GtkWidget* tab_close, GtkWidget* widget)
midori_view_tab_icon_style_set_cb	midori-view.c	/^midori_view_tab_icon_style_set_cb (GtkWidget* tab_close,$/;"	f	file:	signature:(GtkWidget* tab_close, GtkStyle* previous_style)
midori_view_tab_label_button_press_event	midori-view.c	/^midori_view_tab_label_button_press_event (GtkWidget*      tab_label,$/;"	f	file:	signature:(GtkWidget* tab_label, GdkEventButton* event, GtkWidget* widget)
midori_view_tab_label_data_received	midori-view.c	/^static void midori_view_tab_label_data_received (GtkWidget* widget,$/;"	f	file:	signature:(GtkWidget* widget, GdkDragContext* context, gint x, gint y, GtkSelectionData* data, guint ttype, guint timestamp, MidoriView* view)
midori_view_tab_label_menu_close_cb	midori-view.c	/^midori_view_tab_label_menu_close_cb (GtkWidget* menuitem,$/;"	f	file:	signature:(GtkWidget* menuitem, GtkWidget* view)
midori_view_tab_label_menu_close_other_tabs_cb	midori-view.c	/^midori_view_tab_label_menu_close_other_tabs_cb (GtkWidget* menuitem,$/;"	f	file:	signature:(GtkWidget* menuitem, GtkWidget* view)
midori_view_tab_label_menu_duplicate_tab_cb	midori-view.c	/^midori_view_tab_label_menu_duplicate_tab_cb (GtkWidget*  menuitem,$/;"	f	file:	signature:(GtkWidget* menuitem, MidoriView* view)
midori_view_tab_label_menu_minimize_tab_cb	midori-view.c	/^midori_view_tab_label_menu_minimize_tab_cb (GtkWidget*  menuitem,$/;"	f	file:	signature:(GtkWidget* menuitem, MidoriView* view)
midori_view_tab_label_menu_window_new_cb	midori-view.c	/^midori_view_tab_label_menu_window_new_cb (GtkWidget* menuitem,$/;"	f	file:	signature:(GtkWidget* menuitem, GtkWidget* view)
midori_view_tab_label_parent_set	midori-view.c	/^midori_view_tab_label_parent_set (GtkWidget*  tab_label,$/;"	f	file:	signature:(GtkWidget* tab_label, GObject* old_parent, MidoriView* view)
midori_view_unmark_text_matches	midori-view.c	/^midori_view_unmark_text_matches (MidoriView* view)$/;"	f	signature:(MidoriView* view)
midori_view_unmark_text_matches	midori-view.h	/^midori_view_unmark_text_matches        (MidoriView*        view);$/;"	p	signature:(MidoriView* view)
midori_view_update_icon	midori-view.c	/^midori_view_update_icon (MidoriView* view,$/;"	f	file:	signature:(MidoriView* view, GdkPixbuf* icon)
midori_view_update_load_status	midori-view.c	/^midori_view_update_load_status (MidoriView*      view,$/;"	f	file:	signature:(MidoriView* view, MidoriLoadStatus load_status)
midori_view_update_tab_title	midori-view.c	/^midori_view_update_tab_title (GtkWidget* label,$/;"	f	file:	signature:(GtkWidget* label, gint size, gdouble angle)
midori_view_vadjustment_notify_value_cb	midori-view.c	/^midori_view_vadjustment_notify_value_cb (GtkAdjustment* vadjustment,$/;"	f	file:	signature:(GtkAdjustment* vadjustment, GParamSpec* pspec, MidoriView* view)
midori_view_web_inspector_attach_window_cb	midori-view.c	/^midori_view_web_inspector_attach_window_cb (gpointer    inspector,$/;"	f	file:	signature:(gpointer inspector, MidoriView* view)
midori_view_web_inspector_close_window_cb	midori-view.c	/^midori_view_web_inspector_close_window_cb (gpointer    inspector,$/;"	f	file:	signature:(gpointer inspector, MidoriView* view)
midori_view_web_inspector_construct_window	midori-view.c	/^midori_view_web_inspector_construct_window (gpointer       inspector,$/;"	f	file:	signature:(gpointer inspector, WebKitWebView* web_view, GtkWidget* inspector_view, MidoriView* view)
midori_view_web_inspector_detach_window_cb	midori-view.c	/^midori_view_web_inspector_detach_window_cb (gpointer    inspector,$/;"	f	file:	signature:(gpointer inspector, MidoriView* view)
midori_view_web_inspector_inspect_web_view_cb	midori-view.c	/^midori_view_web_inspector_inspect_web_view_cb (gpointer       inspector,$/;"	f	file:	signature:(gpointer inspector, WebKitWebView* web_view, MidoriView* view)
midori_view_web_inspector_show_window_cb	midori-view.c	/^midori_view_web_inspector_show_window_cb (WebKitWebInspector* inspector,$/;"	f	file:	signature:(WebKitWebInspector* inspector, MidoriView* view)
midori_view_web_view_database_quota_exceeded_cb	midori-view.c	/^midori_view_web_view_database_quota_exceeded_cb (WebKitWebView*     web_view,$/;"	f	file:	signature:(WebKitWebView* web_view, WebKitWebFrame* web_frame, WebKitWebDatabase* database, MidoriView* view)
midori_view_web_view_geolocation_decision_cb	midori-view.c	/^midori_view_web_view_geolocation_decision_cb (WebKitWebView*                   web_view,$/;"	f	file:	signature:(WebKitWebView* web_view, WebKitWebFrame* web_frame, WebKitGeolocationPolicyDecision* decision, MidoriView* view)
midori_view_web_view_get_snapshot	midori-view.c	/^midori_view_web_view_get_snapshot (GtkWidget* web_view,$/;"	f	file:	signature:(GtkWidget* web_view, gint width, gint height)
midori_view_web_view_get_snapshot	midori-view.c	/^midori_view_web_view_get_snapshot (GtkWidget* web_view,$/;"	p	file:	signature:(GtkWidget* web_view, gint width, gint height)
midori_view_web_view_leave_notify_event_cb	midori-view.c	/^midori_view_web_view_leave_notify_event_cb (WebKitWebView*    web_view,$/;"	f	file:	signature:(WebKitWebView* web_view, GdkEventCrossing* event, MidoriView* view)
midori_view_web_view_navigation_decision_cb	midori-view.c	/^midori_view_web_view_navigation_decision_cb (WebKitWebView*             web_view,$/;"	f	file:	signature:(WebKitWebView* web_view, WebKitWebFrame* web_frame, WebKitNetworkRequest* request, WebKitWebNavigationAction* action, WebKitWebPolicyDecision* decision, MidoriView* view)
midori_view_web_view_print_requested_cb	midori-view.c	/^midori_view_web_view_print_requested_cb (GtkWidget*      web_view,$/;"	f	file:	signature:(GtkWidget* web_view, WebKitWebFrame* web_frame, MidoriView* view)
midori_view_web_view_resource_request_cb	midori-view.c	/^midori_view_web_view_resource_request_cb (WebKitWebView*         web_view,$/;"	f	file:	signature:(WebKitWebView* web_view, WebKitWebFrame* web_frame, WebKitWebResource* web_resource, WebKitNetworkRequest* request, WebKitNetworkResponse* response, MidoriView* view)
midori_view_web_view_script_alert_cb	midori-view.c	/^midori_view_web_view_script_alert_cb (GtkWidget*      web_view,$/;"	f	file:	signature:(GtkWidget* web_view, WebKitWebFrame* web_frame, const gchar* message, MidoriView* view)
midori_view_web_view_tap_and_hold_cb	midori-view.c	/^midori_view_web_view_tap_and_hold_cb (GtkWidget*  web_view,$/;"	f	file:	signature:(GtkWidget* web_view, gpointer data)
midori_viewable_base_finalize	midori-viewable.c	/^midori_viewable_base_finalize (MidoriViewableIface* iface)$/;"	f	file:	signature:(MidoriViewableIface* iface)
midori_viewable_base_finalize	midori-viewable.c	/^midori_viewable_base_finalize (MidoriViewableIface* iface);$/;"	p	file:	signature:(MidoriViewableIface* iface)
midori_viewable_base_init	midori-viewable.c	/^midori_viewable_base_init (MidoriViewableIface* iface)$/;"	f	file:	signature:(MidoriViewableIface* iface)
midori_viewable_base_init	midori-viewable.c	/^midori_viewable_base_init (MidoriViewableIface* iface);$/;"	p	file:	signature:(MidoriViewableIface* iface)
midori_viewable_default_get_label	midori-viewable.c	/^midori_viewable_default_get_label (MidoriViewable* viewable)$/;"	f	file:	signature:(MidoriViewable* viewable)
midori_viewable_default_get_stock_id	midori-viewable.c	/^midori_viewable_default_get_stock_id (MidoriViewable* viewable)$/;"	f	file:	signature:(MidoriViewable* viewable)
midori_viewable_default_get_toolbar	midori-viewable.c	/^midori_viewable_default_get_toolbar (MidoriViewable* viewable)$/;"	f	file:	signature:(MidoriViewable* viewable)
midori_viewable_get_label	midori-viewable.c	/^midori_viewable_get_label (MidoriViewable* viewable)$/;"	f	signature:(MidoriViewable* viewable)
midori_viewable_get_label	midori-viewable.h	/^midori_viewable_get_label              (MidoriViewable*        viewable);$/;"	p	signature:(MidoriViewable* viewable)
midori_viewable_get_stock_id	midori-viewable.c	/^midori_viewable_get_stock_id (MidoriViewable* viewable)$/;"	f	signature:(MidoriViewable* viewable)
midori_viewable_get_stock_id	midori-viewable.h	/^midori_viewable_get_stock_id           (MidoriViewable*        viewable);$/;"	p	signature:(MidoriViewable* viewable)
midori_viewable_get_toolbar	midori-viewable.c	/^midori_viewable_get_toolbar (MidoriViewable* viewable)$/;"	f	signature:(MidoriViewable* viewable)
midori_viewable_get_toolbar	midori-viewable.h	/^midori_viewable_get_toolbar            (MidoriViewable*        viewable);$/;"	p	signature:(MidoriViewable* viewable)
midori_viewable_get_type	midori-viewable.c	/^midori_viewable_get_type (void)$/;"	f	signature:(void)
midori_web_app_browser_new_window_cb	main.c	/^midori_web_app_browser_new_window_cb (MidoriBrowser* browser,$/;"	f	file:	signature:(MidoriBrowser* browser, MidoriBrowser* new_browser, gpointer user_data)
midori_web_app_browser_notify_load_status_cb	main.c	/^midori_web_app_browser_notify_load_status_cb (MidoriBrowser* browser,$/;"	f	file:	signature:(MidoriBrowser* browser, GParamSpec* pspec, gpointer data)
midori_web_settings_add_style	midori-websettings.c	/^midori_web_settings_add_style (MidoriWebSettings* settings,$/;"	f	signature:(MidoriWebSettings* settings, const gchar* rule_id, const gchar* style)
midori_web_settings_add_style	midori-websettings.h	/^midori_web_settings_add_style              (MidoriWebSettings* settings,$/;"	p	signature:(MidoriWebSettings* settings, const gchar* rule_id, const gchar* style)
midori_web_settings_class_init	midori-websettings.c	/^midori_web_settings_class_init (MidoriWebSettingsClass* class)$/;"	f	file:	signature:(MidoriWebSettingsClass* class)
midori_web_settings_finalize	midori-websettings.c	/^midori_web_settings_finalize (GObject* object)$/;"	f	file:	signature:(GObject* object)
midori_web_settings_finalize	midori-websettings.c	/^midori_web_settings_finalize (GObject* object);$/;"	p	file:	signature:(GObject* object)
midori_web_settings_get_property	midori-websettings.c	/^midori_web_settings_get_property (GObject*    object,$/;"	f	file:	signature:(GObject* object, guint prop_id, GValue* value, GParamSpec* pspec)
midori_web_settings_get_property	midori-websettings.c	/^midori_web_settings_get_property (GObject*    object,$/;"	p	file:	signature:(GObject* object, guint prop_id, GValue* value, GParamSpec* pspec)
midori_web_settings_get_system_name	midori-websettings.c	/^midori_web_settings_get_system_name (gchar** architecture,$/;"	f	signature:(gchar** architecture, gchar** platform)
midori_web_settings_get_system_name	midori-websettings.h	/^midori_web_settings_get_system_name        (gchar**            architecture,$/;"	p	signature:(gchar** architecture, gchar** platform)
midori_web_settings_init	midori-websettings.c	/^midori_web_settings_init (MidoriWebSettings* web_settings)$/;"	f	file:	signature:(MidoriWebSettings* web_settings)
midori_web_settings_new	midori-websettings.c	/^midori_web_settings_new (void)$/;"	f	signature:(void)
midori_web_settings_new	midori-websettings.h	/^midori_web_settings_new                    (void);$/;"	p	signature:(void)
midori_web_settings_process_stylesheets	midori-websettings.c	/^midori_web_settings_process_stylesheets (MidoriWebSettings* settings,$/;"	f	file:	signature:(MidoriWebSettings* settings, gint delta_len)
midori_web_settings_process_stylesheets	midori-websettings.c	/^midori_web_settings_process_stylesheets (MidoriWebSettings* settings,$/;"	p	file:	signature:(MidoriWebSettings* settings, gint delta_len)
midori_web_settings_remove_style	midori-websettings.c	/^midori_web_settings_remove_style (MidoriWebSettings* settings,$/;"	f	signature:(MidoriWebSettings* settings, const gchar* rule_id)
midori_web_settings_remove_style	midori-websettings.h	/^midori_web_settings_remove_style           (MidoriWebSettings* settings,$/;"	p	signature:(MidoriWebSettings* settings, const gchar* rule_id)
midori_web_settings_set_property	midori-websettings.c	/^midori_web_settings_set_property (GObject*      object,$/;"	f	file:	signature:(GObject* object, guint prop_id, const GValue* value, GParamSpec* pspec)
midori_web_settings_set_property	midori-websettings.c	/^midori_web_settings_set_property (GObject*      object,$/;"	p	file:	signature:(GObject* object, guint prop_id, const GValue* value, GParamSpec* pspec)
midori_web_view_menu_background_tab_activate_cb	midori-view.c	/^midori_web_view_menu_background_tab_activate_cb (GtkWidget*  widget,$/;"	f	file:	signature:(GtkWidget* widget, MidoriView* view)
midori_web_view_menu_copy_activate_cb	midori-view.c	/^midori_web_view_menu_copy_activate_cb (GtkWidget*  widget,$/;"	f	file:	signature:(GtkWidget* widget, MidoriView* view)
midori_web_view_menu_image_copy_activate_cb	midori-view.c	/^midori_web_view_menu_image_copy_activate_cb (GtkWidget*  widget,$/;"	f	file:	signature:(GtkWidget* widget, MidoriView* view)
midori_web_view_menu_image_new_tab_activate_cb	midori-view.c	/^midori_web_view_menu_image_new_tab_activate_cb (GtkWidget*  widget,$/;"	f	file:	signature:(GtkWidget* widget, MidoriView* view)
midori_web_view_menu_image_save_activate_cb	midori-view.c	/^midori_web_view_menu_image_save_activate_cb (GtkWidget*  widget,$/;"	f	file:	signature:(GtkWidget* widget, MidoriView* view)
midori_web_view_menu_inspect_element_activate_cb	midori-view.c	/^midori_web_view_menu_inspect_element_activate_cb (GtkWidget*  widget,$/;"	f	file:	signature:(GtkWidget* widget, MidoriView* view)
midori_web_view_menu_link_copy_activate_cb	midori-view.c	/^midori_web_view_menu_link_copy_activate_cb (GtkWidget*  widget,$/;"	f	file:	signature:(GtkWidget* widget, MidoriView* view)
midori_web_view_menu_new_tab_activate_cb	midori-view.c	/^midori_web_view_menu_new_tab_activate_cb (GtkWidget*  widget,$/;"	f	file:	signature:(GtkWidget* widget, MidoriView* view)
midori_web_view_menu_new_window_activate_cb	midori-view.c	/^midori_web_view_menu_new_window_activate_cb (GtkWidget*  widget,$/;"	f	file:	signature:(GtkWidget* widget, MidoriView* view)
midori_web_view_menu_save_activate_cb	midori-view.c	/^midori_web_view_menu_save_activate_cb (GtkWidget*  widget,$/;"	f	file:	signature:(GtkWidget* widget, MidoriView* view)
midori_web_view_menu_search_web_activate_cb	midori-view.c	/^midori_web_view_menu_search_web_activate_cb (GtkWidget*  widget,$/;"	f	file:	signature:(GtkWidget* widget, MidoriView* view)
midori_web_view_menu_video_copy_activate_cb	midori-view.c	/^midori_web_view_menu_video_copy_activate_cb (GtkWidget*  widget,$/;"	f	file:	signature:(GtkWidget* widget, MidoriView* view)
midori_web_view_menu_video_save_activate_cb	midori-view.c	/^midori_web_view_menu_video_save_activate_cb (GtkWidget*  widget,$/;"	f	file:	signature:(GtkWidget* widget, MidoriView* view)
midori_web_view_menu_web_app_activate_cb	midori-view.c	/^midori_web_view_menu_web_app_activate_cb (GtkWidget*  widget,$/;"	f	file:	signature:(GtkWidget* widget, MidoriView* view)
midori_web_view_notify_icon_uri_cb	midori-view.c	/^midori_web_view_notify_icon_uri_cb (WebKitWebView* web_view,$/;"	f	file:	signature:(WebKitWebView* web_view, GParamSpec* pspec, MidoriView* view)
midori_window_state_get_type	midori-websettings.c	/^midori_window_state_get_type (void)$/;"	f	signature:(void)
mime_type	midori-view.c	/^    gchar* mime_type;$/;"	m	struct:_MidoriView	file:	access:public
minimized	midori-view.c	/^    gboolean minimized;$/;"	m	struct:_MidoriView	file:	access:public
my_gethostbyname	socket.c	/^struct hostent *my_gethostbyname(const gchar *hostname)$/;"	f	signature:(const gchar *hostname)
my_gethostbyname	socket.h	/^struct hostent *my_gethostbyname	(const gchar *hostname);$/;"	p	signature:(const gchar *hostname)
my_inet_aton	socket.c	/^static gint my_inet_aton(const gchar *hostname, struct in_addr *inp)$/;"	f	file:	signature:(const gchar *hostname, struct in_addr *inp)
name	midori-app.c	/^    gchar* name;$/;"	m	struct:_MidoriApp	file:	access:public
name	midori-extension.c	/^    gchar* name;$/;"	m	struct:_MidoriExtensionPrivate	file:	access:public
name	midori-extension.c	/^    gchar* name;$/;"	m	struct:__anon31	file:	access:public
name	midori-extension.c	/^    gchar* name;$/;"	m	struct:__anon32	file:	access:public
name	midori-extension.c	/^    gchar* name;$/;"	m	struct:__anon33	file:	access:public
name	midori-extension.c	/^    gchar* name;$/;"	m	struct:__anon34	file:	access:public
name	midori-panedaction.c	/^    gchar* name;$/;"	m	struct:_MidoriPanedActionChild	file:	access:public
name	sokoke.h	/^    gchar* name;$/;"	m	struct:__anon15	access:public
navigationbar	midori-browser.c	/^    GtkWidget* navigationbar;$/;"	m	struct:_MidoriBrowser	file:	access:public
new_uri	midori-browser.c	/^    g_free (new_uri);$/;"	v
new_window	midori-browser.h	/^    (*new_window)              (MidoriBrowser*       browser,$/;"	m	struct:_MidoriBrowserClass	access:public
news_aggregator	midori-browser.c	/^    gchar* news_aggregator;$/;"	m	struct:_MidoriBrowser	file:	access:public
news_aggregator	midori-websettings.c	/^    gchar* news_aggregator;$/;"	m	struct:_MidoriWebSettings	file:	access:public
news_feeds	midori-view.c	/^    KatzeArray* news_feeds;$/;"	m	struct:_MidoriView	file:	access:public
nonblock	socket.h	/^	gboolean nonblock;$/;"	m	struct:_SockInfo	access:public
notebook	midori-browser.c	/^    GtkWidget* notebook;$/;"	m	struct:_MidoriBrowser	file:	access:public
notebook	midori-panel.c	/^    GtkWidget* notebook;$/;"	m	struct:_MidoriPanel	file:	access:public
notify_default_encoding_cb	midori-websettings.c	/^notify_default_encoding_cb (GObject*    object,$/;"	f	file:	signature:(GObject* object, GParamSpec* pspec)
notify_default_font_family_cb	midori-websettings.c	/^notify_default_font_family_cb (GObject*    object,$/;"	f	file:	signature:(GObject* object, GParamSpec* pspec)
open_new_pages_in	midori-view.c	/^    MidoriNewPage open_new_pages_in;$/;"	m	struct:_MidoriView	file:	access:public
open_new_pages_in	midori-websettings.c	/^    MidoriNewPage open_new_pages_in : 2;$/;"	m	struct:_MidoriWebSettings	file:	access:public
open_panels_in_windows	midori-panel.c	/^    gboolean open_panels_in_windows;$/;"	m	struct:_MidoriPanel	file:	access:public
open_panels_in_windows	midori-websettings.c	/^    gboolean open_panels_in_windows : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
open_popups_in_tabs	midori-websettings.c	/^    gboolean open_popups_in_tabs : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
open_tabs_in_the_background	midori-view.c	/^    gboolean open_tabs_in_the_background;$/;"	m	struct:_MidoriView	file:	access:public
open_tabs_in_the_background	midori-websettings.c	/^    gboolean open_tabs_in_the_background : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
open_tabs_next_to_current	midori-websettings.c	/^    gboolean open_tabs_next_to_current : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
panel	midori-browser.c	/^    GtkWidget* panel;$/;"	m	struct:_MidoriBrowser	file:	access:public
panel_timeout	midori-browser.c	/^    guint panel_timeout;$/;"	m	struct:_MidoriBrowser	file:	access:public
parent	socket.c	/^	GSource parent;$/;"	m	struct:_SockSource	file:	access:public
parent_class	gtkiconentry.c	/^static GtkEntryClass *parent_class = NULL;$/;"	v	file:
parent_class	midori-app.c	/^    GObjectClass parent_class;$/;"	m	struct:_MidoriAppClass	file:	access:public
parent_class	midori-browser.h	/^    HildonWindowClass parent_class;$/;"	m	struct:_MidoriBrowserClass	access:public
parent_class	midori-extension.h	/^    GObjectClass parent_class;$/;"	m	struct:_MidoriExtensionClass	access:public
parent_class	midori-locationaction.c	/^    GtkActionClass parent_class;$/;"	m	struct:_MidoriLocationActionClass	file:	access:public
parent_class	midori-panedaction.c	/^    GtkActionClass parent_class;$/;"	m	struct:_MidoriPanedActionClass	file:	access:public
parent_class	midori-panel.c	/^    GtkAlignmentClass parent_class;$/;"	m	struct:__anon30	file:	access:public
parent_class	midori-panel.c	/^    GtkHBoxClass parent_class;$/;"	m	struct:_MidoriPanelClass	file:	access:public
parent_class	midori-preferences.h	/^    KatzePreferencesClass parent_class;$/;"	m	struct:_MidoriPreferencesClass	access:public
parent_class	midori-searchaction.c	/^    GtkActionClass parent_class;$/;"	m	struct:_MidoriSearchActionClass	file:	access:public
parent_class	midori-view.c	/^    GtkVBoxClass parent_class;$/;"	m	struct:_MidoriViewClass	file:	access:public
parent_class	midori-websettings.c	/^    WebKitWebSettingsClass parent_class;$/;"	m	struct:_MidoriWebSettingsClass	file:	access:public
parent_instance	midori-app.c	/^    GObject parent_instance;$/;"	m	struct:_MidoriApp	file:	access:public
parent_instance	midori-browser.c	/^    HildonWindow parent_instance;$/;"	m	struct:_MidoriBrowser	file:	access:public
parent_instance	midori-extension.h	/^    GObject parent_instance;$/;"	m	struct:_MidoriExtension	access:public
parent_instance	midori-locationaction.c	/^    GtkAction parent_instance;$/;"	m	struct:_MidoriLocationAction	file:	access:public
parent_instance	midori-panedaction.c	/^    GtkAction parent_instance;$/;"	m	struct:_MidoriPanedAction	file:	access:public
parent_instance	midori-panel.c	/^    GtkAlignment parent_instance;$/;"	m	struct:__anon29	file:	access:public
parent_instance	midori-panel.c	/^    GtkHBox parent_instance;$/;"	m	struct:_MidoriPanel	file:	access:public
parent_instance	midori-preferences.c	/^    KatzePreferences parent_instance;$/;"	m	struct:_MidoriPreferences	file:	access:public
parent_instance	midori-searchaction.c	/^    GtkAction parent_instance;$/;"	m	struct:_MidoriSearchAction	file:	access:public
parent_instance	midori-view.c	/^    GtkVBox parent_instance;$/;"	m	struct:_MidoriView	file:	access:public
parent_instance	midori-websettings.c	/^    WebKitWebSettings parent_instance;$/;"	m	struct:_MidoriWebSettings	file:	access:public
pixbuf	gtkiconentry.c	/^  GdkPixbuf *pixbuf;$/;"	m	struct:__anon16	file:	access:public
place_windows	gtkiconentry.c	/^place_windows (GtkIconEntry *icon_entry, GtkAllocation *widget_alloc)$/;"	f	file:	signature:(GtkIconEntry *icon_entry, GtkAllocation *widget_alloc)
popup	midori-locationaction.c	/^    GtkWidget* popup;$/;"	m	struct:_MidoriLocationAction	file:	access:public
port	socket.c	/^	gushort port;$/;"	m	struct:_SockConnectData	file:	access:public
port	socket.h	/^	gushort port;$/;"	m	struct:_SockInfo	access:public
preferred_encoding	midori-websettings.c	/^    MidoriPreferredEncoding preferred_encoding : 3;$/;"	m	struct:_MidoriWebSettings	file:	access:public
prepare_speed_dial_html	midori-view.c	/^prepare_speed_dial_html (MidoriView* view,$/;"	f	file:	signature:(MidoriView* view, gboolean load_missing)
priv	midori-extension.h	/^    MidoriExtensionPrivate* priv;$/;"	m	struct:_MidoriExtension	access:public
program_notify_send	midori-app.c	/^    gchar* program_notify_send;$/;"	m	struct:_MidoriApp	file:	access:public
progress	midori-locationaction.c	/^    gdouble progress;$/;"	m	struct:_MidoriLocationAction	file:	access:public
progress	midori-view.c	/^    gdouble progress;$/;"	m	struct:_MidoriView	file:	access:public
protocol	socket.c	/^	gint protocol;$/;"	m	struct:_SockAddrData	file:	access:public
proxy_array	midori-browser.c	/^    KatzeArray* proxy_array;$/;"	m	struct:_MidoriBrowser	file:	access:public
proxy_type	midori-websettings.c	/^    MidoriProxy proxy_type : 2;$/;"	m	struct:_MidoriWebSettings	file:	access:public
quit	midori-app.c	/^    (*quit)                   (MidoriApp*     app);$/;"	m	struct:_MidoriAppClass	file:	access:public
quit	midori-browser.h	/^    (*quit)                    (MidoriBrowser*       browser);$/;"	m	struct:_MidoriBrowserClass	access:public
r_trim	midori-browser.c	/^char *r_trim(char *szOutput, const char *szInput)$/;"	f	signature:(char *szOutput, const char *szInput)
r_trim	midori-conf.c	/^char *r_trim(char *szOutput, const char *szInput)$/;"	f	signature:(char *szOutput, const char *szInput)
remember_last_visited_pages	midori-websettings.c	/^    gboolean remember_last_visited_pages : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
remember_last_window_size	midori-websettings.c	/^    gboolean remember_last_window_size : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
remove_browser	midori-app.c	/^    (*remove_browser)         (MidoriApp*     app,$/;"	m	struct:_MidoriAppClass	file:	access:public
remove_button	midori-searchaction.c	/^    GtkWidget* remove_button;$/;"	m	struct:_MidoriSearchAction	file:	access:public
remove_socket_link_full	socket.c	/^static void remove_socket_link_full(void)$/;"	f	file:	signature:(void)
remove_tab	midori-browser.h	/^    (*remove_tab)              (MidoriBrowser*       browser,$/;"	m	struct:_MidoriBrowserClass	access:public
resize	midori-panedaction.c	/^    gboolean resize;$/;"	m	struct:_MidoriPanedActionChild	file:	access:public
right_align_sidepanel	midori-websettings.c	/^    gboolean right_align_sidepanel : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
right_aligned	midori-panel.c	/^    gboolean right_aligned;$/;"	m	struct:_MidoriPanel	file:	access:public
save_timeout	main.c	/^static guint save_timeout = 0;$/;"	v	file:
scrolled_window	midori-view.c	/^    GtkWidget* scrolled_window;$/;"	m	struct:_MidoriView	file:	access:public
scrollh	midori-view.c	/^    gint scrollh, scrollv;$/;"	m	struct:_MidoriView	file:	access:public
scrollv	midori-view.c	/^    gint scrollh, scrollv;$/;"	m	struct:_MidoriView	file:	access:public
search_engines	midori-app.c	/^    KatzeArray* search_engines;$/;"	m	struct:_MidoriApp	file:	access:public
search_engines	midori-browser.c	/^    KatzeArray* search_engines;$/;"	m	struct:_MidoriBrowser	file:	access:public
search_engines	midori-locationaction.c	/^    KatzeArray* search_engines;$/;"	m	struct:_MidoriLocationAction	file:	access:public
search_engines	midori-searchaction.c	/^    KatzeArray* search_engines;$/;"	m	struct:_MidoriSearchAction	file:	access:public
search_engines_new_from_file	main.c	/^search_engines_new_from_file (const gchar* filename,$/;"	f	file:	signature:(const gchar* filename, GError** error)
search_engines_new_from_folder	main.c	/^search_engines_new_from_folder (const gchar* config,$/;"	f	file:	signature:(const gchar* config, GString* error_messages)
search_engines_save_to_file	main.c	/^search_engines_save_to_file (KatzeArray*  search_engines,$/;"	f	file:	signature:(KatzeArray* search_engines, const gchar* filename, GError** error)
search_width	midori-websettings.c	/^    gint search_width;$/;"	m	struct:_MidoriWebSettings	file:	access:public
secondary_icon	midori-locationaction.c	/^    gchar* secondary_icon;$/;"	m	struct:_MidoriLocationAction	file:	access:public
security	midori-view.c	/^    MidoriSecurity security;$/;"	m	struct:_MidoriView	file:	access:public
selected_text	midori-view.c	/^    gchar* selected_text;$/;"	m	struct:_MidoriView	file:	access:public
send_open_command	socket.c	/^void send_open_command(gint sock, const gchar* command, gchar **args)$/;"	f	signature:(gint sock, const gchar* command, gchar **args)
send_open_command	socket.h	/^void send_open_command			(gint sock, const gchar *command,$/;"	p	signature:(gint sock, const gchar *command, gchar **args)
set_nonblocking_mode	socket.c	/^static gint set_nonblocking_mode(gint fd, gboolean nonblock)$/;"	f	file:	signature:(gint fd, gboolean nonblock)
settings	midori-app.c	/^    MidoriWebSettings* settings;$/;"	m	struct:_MidoriApp	file:	access:public
settings	midori-browser.c	/^    MidoriWebSettings* settings;$/;"	m	struct:_MidoriBrowser	file:	access:public
settings	midori-extension.c	/^    GHashTable* settings;$/;"	m	struct:_MidoriExtensionPrivate	file:	access:public
settings	midori-preferences.c	/^    gpointer settings;$/;"	m	struct:_MidoriPreferences	file:	access:public
settings	midori-view.c	/^    MidoriWebSettings* settings;$/;"	m	struct:_MidoriView	file:	access:public
settings_and_accels_new	main.c	/^settings_and_accels_new (const gchar* config,$/;"	f	file:	signature:(const gchar* config, gchar*** extensions)
settings_notify_cb	main.c	/^settings_notify_cb (MidoriWebSettings* settings,$/;"	f	file:	signature:(MidoriWebSettings* settings, GParamSpec* pspec, MidoriApp* app)
settings_save_to_file	main.c	/^settings_save_to_file (MidoriWebSettings* settings,$/;"	f	file:	signature:(MidoriWebSettings* settings, MidoriApp* app, const gchar* filename, GError** error)
show_bookmarkbar	midori-websettings.c	/^    gboolean show_bookmarkbar : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
show_controls	midori-panel.c	/^    gboolean show_controls;$/;"	m	struct:_MidoriPanel	file:	access:public
show_crash_dialog	midori-websettings.c	/^    gboolean show_crash_dialog : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
show_menubar	midori-websettings.c	/^    gboolean show_menubar : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
show_navigationbar	midori-browser.c	/^    gboolean show_navigationbar;$/;"	m	struct:_MidoriBrowser	file:	access:public
show_navigationbar	midori-websettings.c	/^    gboolean show_navigationbar : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
show_panel	midori-websettings.c	/^    gboolean show_panel : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
show_statusbar	midori-browser.c	/^    gboolean show_statusbar;$/;"	m	struct:_MidoriBrowser	file:	access:public
show_statusbar	midori-websettings.c	/^    gboolean show_statusbar : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
show_tabs	midori-browser.c	/^    gboolean show_tabs;$/;"	m	struct:_MidoriBrowser	file:	access:public
show_titles	midori-panel.c	/^    gboolean show_titles;$/;"	m	struct:_MidoriPanel	file:	access:public
shrink	midori-panedaction.c	/^    gboolean shrink;$/;"	m	struct:_MidoriPanedActionChild	file:	access:public
signal_handler	main.c	/^signal_handler (int signal_id)$/;"	f	file:	signature:(int signal_id)
signals	gtkiconentry.c	/^static guint signals[LAST_SIGNAL] = {0};$/;"	v	file:
signals	midori-app.c	/^static guint signals[LAST_SIGNAL];$/;"	v	file:
signals	midori-browser.c	/^static guint signals[LAST_SIGNAL];$/;"	v	file:
signals	midori-extension.c	/^static guint signals[LAST_SIGNAL];$/;"	v	file:
signals	midori-locationaction.c	/^static guint signals[LAST_SIGNAL];$/;"	v	file:
signals	midori-panel.c	/^static guint signals[LAST_SIGNAL];$/;"	v	file:
signals	midori-searchaction.c	/^static guint signals[LAST_SIGNAL];$/;"	v	file:
signals	midori-view.c	/^static guint signals[LAST_SIGNAL];$/;"	v	file:
signals	midori-viewable.c	/^static guint signals[LAST_SIGNAL];$/;"	v	file:
snapshot_load_finished_cb	main.c	/^snapshot_load_finished_cb (GtkWidget*      web_view,$/;"	f	file:	signature:(GtkWidget* web_view, WebKitWebFrame* web_frame, gchar* filename)
sock	socket.c	/^	SockInfo *sock;$/;"	m	struct:_SockSource	file:	access:public
sock	socket.h	/^	gint sock;$/;"	m	struct:_SockInfo	access:public
sock_add_watch	socket.c	/^guint sock_add_watch(SockInfo *sock, GIOCondition condition, SockFunc func,$/;"	f	signature:(SockInfo *sock, GIOCondition condition, SockFunc func, gpointer data)
sock_add_watch	socket.h	/^guint sock_add_watch			(SockInfo *sock, GIOCondition condition,$/;"	p	signature:(SockInfo *sock, GIOCondition condition, SockFunc func, gpointer data)
sock_address_list_free	socket.c	/^static void sock_address_list_free		(GList		*addr_list);$/;"	p	file:	signature:(GList *addr_list)
sock_address_list_free	socket.c	/^static void sock_address_list_free(GList *addr_list)$/;"	f	file:	signature:(GList *addr_list)
sock_ch	socket.h	/^	GIOChannel *sock_ch;$/;"	m	struct:_SockInfo	access:public
sock_check	socket.c	/^static gboolean sock_check		(GSource	*source);$/;"	p	file:	signature:(GSource *source)
sock_check	socket.c	/^static gboolean sock_check(GSource *source)$/;"	f	file:	signature:(GSource *source)
sock_cleanup	socket.c	/^gint sock_cleanup(void)$/;"	f	signature:(void)
sock_cleanup	socket.h	/^gint sock_cleanup			(void);$/;"	p	signature:(void)
sock_close	socket.c	/^gint sock_close(SockInfo *sock)$/;"	f	signature:(SockInfo *sock)
sock_close	socket.h	/^gint sock_close		(SockInfo *sock);$/;"	p	signature:(SockInfo *sock)
sock_connect	socket.c	/^SockInfo *sock_connect(const gchar *hostname, gushort port)$/;"	f	signature:(const gchar *hostname, gushort port)
sock_connect	socket.h	/^SockInfo *sock_connect			(const gchar *hostname, gushort port);$/;"	p	signature:(const gchar *hostname, gushort port)
sock_connect_address_list_async	socket.c	/^static gint sock_connect_address_list_async	(SockConnectData *conn_data);$/;"	p	file:	signature:(SockConnectData *conn_data)
sock_connect_address_list_async	socket.c	/^static gint sock_connect_address_list_async(SockConnectData *conn_data)$/;"	f	file:	signature:(SockConnectData *conn_data)
sock_connect_async	socket.c	/^gint sock_connect_async(const gchar *hostname, gushort port,$/;"	f	signature:(const gchar *hostname, gushort port, SockConnectFunc func, gpointer data)
sock_connect_async	socket.h	/^gint sock_connect_async			(const gchar *hostname, gushort port,$/;"	p	signature:(const gchar *hostname, gushort port, SockConnectFunc func, gpointer data)
sock_connect_async_cancel	socket.c	/^gint sock_connect_async_cancel(gint id)$/;"	f	signature:(gint id)
sock_connect_async_cancel	socket.h	/^gint sock_connect_async_cancel		(gint id);$/;"	p	signature:(gint id)
sock_connect_async_cb	socket.c	/^static gboolean sock_connect_async_cb		(GIOChannel	*source,$/;"	p	file:	signature:(GIOChannel *source, GIOCondition condition, gpointer data)
sock_connect_async_cb	socket.c	/^static gboolean sock_connect_async_cb(GIOChannel *source,$/;"	f	file:	signature:(GIOChannel *source, GIOCondition condition, gpointer data)
sock_connect_async_get_address_info_cb	socket.c	/^static gint sock_connect_async_get_address_info_cb$/;"	p	file:	signature:(GList *addr_list, gpointer data)
sock_connect_async_get_address_info_cb	socket.c	/^static gint sock_connect_async_get_address_info_cb(GList *addr_list,$/;"	f	file:	signature:(GList *addr_list, gpointer data)
sock_connect_by_getaddrinfo	socket.c	/^static SockDesc sock_connect_by_getaddrinfo	(const gchar	*hostname,$/;"	p	file:	signature:(const gchar *hostname, gushort port)
sock_connect_by_getaddrinfo	socket.c	/^static SockDesc sock_connect_by_getaddrinfo(const gchar *hostname, gushort port)$/;"	f	file:	signature:(const gchar *hostname, gushort port)
sock_connect_by_hostname	socket.c	/^static gint sock_connect_by_hostname	(gint		 sock,$/;"	p	file:	signature:(gint sock, const gchar *hostname, gushort port)
sock_connect_by_hostname	socket.c	/^static gint sock_connect_by_hostname(gint sock, const gchar *hostname,$/;"	f	file:	signature:(gint sock, const gchar *hostname, gushort port)
sock_connect_data_list	socket.c	/^static GList *sock_connect_data_list = NULL;$/;"	v	file:
sock_connect_with_timeout	socket.c	/^static gint sock_connect_with_timeout	(gint			 sock,$/;"	p	file:	signature:(gint sock, const struct sockaddr *serv_addr, gint addrlen, guint timeout_secs)
sock_connect_with_timeout	socket.c	/^static gint sock_connect_with_timeout(gint sock,$/;"	f	file:	signature:(gint sock, const struct sockaddr *serv_addr, gint addrlen, guint timeout_secs)
sock_dispatch	socket.c	/^static gboolean sock_dispatch		(GSource	*source,$/;"	p	file:	signature:(GSource *source, GSourceFunc callback, gpointer user_data)
sock_dispatch	socket.c	/^static gboolean sock_dispatch(GSource *source, GSourceFunc callback,$/;"	f	file:	signature:(GSource *source, GSourceFunc callback, gpointer user_data)
sock_find_from_fd	socket.c	/^static SockInfo *sock_find_from_fd	(gint	fd);$/;"	p	file:	signature:(gint fd)
sock_find_from_fd	socket.c	/^static SockInfo *sock_find_from_fd(gint fd)$/;"	f	file:	signature:(gint fd)
sock_get_address_info_async	socket.c	/^static SockLookupData *sock_get_address_info_async$/;"	p	file:	signature:(const gchar *hostname, gushort port, SockAddrFunc func, gpointer data)
sock_get_address_info_async	socket.c	/^static SockLookupData *sock_get_address_info_async(const gchar *hostname,$/;"	f	file:	signature:(const gchar *hostname, gushort port, SockAddrFunc func, gpointer data)
sock_get_address_info_async_cancel	socket.c	/^static gint sock_get_address_info_async_cancel	(SockLookupData	*lookup_data);$/;"	p	file:	signature:(SockLookupData *lookup_data)
sock_get_address_info_async_cancel	socket.c	/^static gint sock_get_address_info_async_cancel(SockLookupData *lookup_data)$/;"	f	file:	signature:(SockLookupData *lookup_data)
sock_get_address_info_async_cb	socket.c	/^static gboolean sock_get_address_info_async_cb	(GIOChannel	*source,$/;"	p	file:	signature:(GIOChannel *source, GIOCondition condition, gpointer data)
sock_get_address_info_async_cb	socket.c	/^static gboolean sock_get_address_info_async_cb(GIOChannel *source,$/;"	f	file:	signature:(GIOChannel *source, GIOCondition condition, gpointer data)
sock_getline	socket.c	/^gint sock_getline(SockInfo *sock, gchar **line)$/;"	f	signature:(SockInfo *sock, gchar **line)
sock_getline	socket.h	/^gint sock_getline	(SockInfo *sock, gchar **line);$/;"	p	signature:(SockInfo *sock, gchar **line)
sock_gets	socket.c	/^gint sock_gets(SockInfo *sock, gchar *buf, gint len)$/;"	f	signature:(SockInfo *sock, gchar *buf, gint len)
sock_gets	socket.h	/^gint sock_gets		(SockInfo *sock, gchar *buf, gint len);$/;"	p	signature:(SockInfo *sock, gchar *buf, gint len)
sock_has_read_data	socket.c	/^gboolean sock_has_read_data(SockInfo *sock)$/;"	f	signature:(SockInfo *sock)
sock_has_read_data	socket.h	/^gboolean sock_has_read_data		(SockInfo *sock);$/;"	p	signature:(SockInfo *sock)
sock_is_nonblocking_mode	socket.c	/^gboolean sock_is_nonblocking_mode(SockInfo *sock)$/;"	f	signature:(SockInfo *sock)
sock_is_nonblocking_mode	socket.h	/^gboolean sock_is_nonblocking_mode	(SockInfo *sock);$/;"	p	signature:(SockInfo *sock)
sock_kill_process	socket.c	/^static gint sock_kill_process(pid_t pid)$/;"	f	file:	signature:(pid_t pid)
sock_list	socket.c	/^static GList *sock_list = NULL;$/;"	v	file:
sock_peek	socket.c	/^gint sock_peek(SockInfo *sock, gchar *buf, gint len)$/;"	f	signature:(SockInfo *sock, gchar *buf, gint len)
sock_peek	socket.h	/^gint sock_peek		(SockInfo *sock, gchar *buf, gint len);$/;"	p	signature:(SockInfo *sock, gchar *buf, gint len)
sock_prepare	socket.c	/^static gboolean sock_prepare		(GSource	*source,$/;"	p	file:	signature:(GSource *source, gint *timeout)
sock_prepare	socket.c	/^static gboolean sock_prepare(GSource *source, gint *timeout)$/;"	f	file:	signature:(GSource *source, gint *timeout)
sock_printf	socket.c	/^gint sock_printf(SockInfo *sock, const gchar *format, ...)$/;"	f	signature:(SockInfo *sock, const gchar *format, ...)
sock_puts	socket.c	/^gint sock_puts(SockInfo *sock, const gchar *buf)$/;"	f	signature:(SockInfo *sock, const gchar *buf)
sock_puts	socket.h	/^gint sock_puts		(SockInfo *sock, const gchar *buf);$/;"	p	signature:(SockInfo *sock, const gchar *buf)
sock_read	socket.c	/^gint sock_read(SockInfo *sock, gchar *buf, gint len)$/;"	f	signature:(SockInfo *sock, gchar *buf, gint len)
sock_read	socket.h	/^gint sock_read		(SockInfo *sock, gchar *buf, gint len);$/;"	p	signature:(SockInfo *sock, gchar *buf, gint len)
sock_set_errno_from_last_error	socket.c	/^static void sock_set_errno_from_last_error(gint error)$/;"	f	file:	signature:(gint error)
sock_set_io_timeout	socket.c	/^gint sock_set_io_timeout(guint sec)$/;"	f	signature:(guint sec)
sock_set_io_timeout	socket.h	/^gint sock_set_io_timeout		(guint sec);$/;"	p	signature:(guint sec)
sock_set_nonblocking_mode	socket.c	/^gint sock_set_nonblocking_mode(SockInfo *sock, gboolean nonblock)$/;"	f	signature:(SockInfo *sock, gboolean nonblock)
sock_set_nonblocking_mode	socket.h	/^gint sock_set_nonblocking_mode		(SockInfo *sock, gboolean nonblock);$/;"	p	signature:(SockInfo *sock, gboolean nonblock)
sock_watch_cb	socket.c	/^static gboolean sock_watch_cb(GIOChannel *source, GIOCondition condition,$/;"	f	file:	signature:(GIOChannel *source, GIOCondition condition, gpointer data)
sock_watch_funcs	socket.c	/^GSourceFuncs sock_watch_funcs = {$/;"	v
sock_write	socket.c	/^gint sock_write(SockInfo *sock, const gchar *buf, gint len)$/;"	f	signature:(SockInfo *sock, const gchar *buf, gint len)
sock_write	socket.h	/^gint sock_write		(SockInfo *sock, const gchar *buf, gint len);$/;"	p	signature:(SockInfo *sock, const gchar *buf, gint len)
sock_write_all	socket.c	/^gint sock_write_all(SockInfo *sock, const gchar *buf, gint len)$/;"	f	signature:(SockInfo *sock, const gchar *buf, gint len)
sock_write_all	socket.h	/^gint sock_write_all	(SockInfo *sock, const gchar *buf, gint len);$/;"	p	signature:(SockInfo *sock, const gchar *buf, gint len)
socket_filename	socket.c	/^static gchar *socket_filename = NULL;$/;"	v	file:
socket_init	socket.c	/^gint socket_init(const gchar *instance_name, const gchar *config_dir, gboolean *exists)$/;"	f	signature:(const gchar *instance_name, const gchar *config_dir, gboolean *exists)
socket_init	socket.h	/^gint socket_init			(const gchar *instance_name,$/;"	p	signature:(const gchar *instance_name, const gchar *config_dir, gboolean *exists)
socktype	socket.c	/^	gint socktype;$/;"	m	struct:_SockAddrData	file:	access:public
sokoke_accept_languages	sokoke.c	/^sokoke_accept_languages (const gchar* const * lang_names)$/;"	f	signature:(const gchar* const * lang_names)
sokoke_accept_languages	sokoke.h	/^sokoke_accept_languages                 (const gchar* const * lang_names);$/;"	p	signature:(const gchar* const * lang_names)
sokoke_action_create_popup_menu_item	sokoke.c	/^sokoke_action_create_popup_menu_item (GtkAction* action)$/;"	f	signature:(GtkAction* action)
sokoke_action_create_popup_menu_item	sokoke.h	/^sokoke_action_create_popup_menu_item    (GtkAction*      action);$/;"	p	signature:(GtkAction* action)
sokoke_add_quality_value	sokoke.c	/^sokoke_add_quality_value (const gchar *str,$/;"	f	file:	signature:(const gchar *str, float qvalue)
sokoke_build_thumbnail_path	sokoke.c	/^sokoke_build_thumbnail_path (const gchar* name)$/;"	f	signature:(const gchar* name)
sokoke_build_thumbnail_path	sokoke.h	/^sokoke_build_thumbnail_path (const gchar* name);$/;"	p	signature:(const gchar* name)
sokoke_days_between	sokoke.c	/^sokoke_days_between (const time_t* day1,$/;"	f	signature:(const time_t* day1, const time_t* day2)
sokoke_days_between	sokoke.h	/^sokoke_days_between                     (const time_t*   day1,$/;"	p	signature:(const time_t* day1, const time_t* day2)
sokoke_default_for_uri	sokoke.c	/^sokoke_default_for_uri (const gchar* uri,$/;"	f	file:	signature:(const gchar* uri, gchar** scheme_ptr)
sokoke_entry_set_default_text	sokoke.h	/^sokoke_entry_set_default_text           (GtkEntry*       entry,$/;"	p	signature:(GtkEntry* entry, const gchar* default_text)
sokoke_external_uri	sokoke.c	/^sokoke_external_uri (const gchar* uri)$/;"	f	signature:(const gchar* uri)
sokoke_external_uri	sokoke.h	/^sokoke_external_uri                     (const gchar*    uri);$/;"	p	signature:(const gchar* uri)
sokoke_file_chooser_dialog_new	sokoke.c	/^sokoke_file_chooser_dialog_new (const gchar*         title,$/;"	f	signature:(const gchar* title, GtkWindow* window, GtkFileChooserAction action)
sokoke_file_chooser_dialog_new	sokoke.h	/^sokoke_file_chooser_dialog_new          (const gchar*         title,$/;"	p	signature:(const gchar* title, GtkWindow* window, GtkFileChooserAction action)
sokoke_find_config_filename	sokoke.c	/^sokoke_find_config_filename (const gchar* folder,$/;"	f	signature:(const gchar* folder, const gchar* filename)
sokoke_find_config_filename	sokoke.h	/^sokoke_find_config_filename             (const gchar*    folder,$/;"	p	signature:(const gchar* folder, const gchar* filename)
sokoke_find_data_filename	sokoke.c	/^sokoke_find_data_filename (const gchar* filename,$/;"	f	signature:(const gchar* filename, gboolean res)
sokoke_find_data_filename	sokoke.h	/^sokoke_find_data_filename               (const gchar*    filename,$/;"	p	signature:(const gchar* filename, gboolean res)
sokoke_find_lib_path	sokoke.c	/^gchar* sokoke_find_lib_path (const gchar* folder)$/;"	f	signature:(const gchar* folder)
sokoke_find_lib_path	sokoke.h	/^sokoke_find_lib_path                    (const gchar*    folder);$/;"	p	signature:(const gchar* folder)
sokoke_get_argv	sokoke.c	/^sokoke_get_argv (gchar** argument_vector)$/;"	f	signature:(gchar** argument_vector)
sokoke_get_argv	sokoke.h	/^sokoke_get_argv                         (gchar**         argument_vector);$/;"	p	signature:(gchar** argument_vector)
sokoke_get_desktop	sokoke.c	/^sokoke_get_desktop (void)$/;"	f	file:	signature:(void)
sokoke_gtk_action_count_modifiers	sokoke.c	/^sokoke_gtk_action_count_modifiers (GtkAction* action)$/;"	f	signature:(GtkAction* action)
sokoke_gtk_action_count_modifiers	sokoke.h	/^sokoke_gtk_action_count_modifiers       (GtkAction* action);$/;"	p	signature:(GtkAction* action)
sokoke_is_app_or_private	sokoke.c	/^sokoke_is_app_or_private (void)$/;"	f	signature:(void)
sokoke_is_app_or_private	sokoke.h	/^sokoke_is_app_or_private                (void);$/;"	p	signature:(void)
sokoke_js_script_eval	sokoke.c	/^sokoke_js_script_eval (JSContextRef js_context,$/;"	f	signature:(JSContextRef js_context, const gchar* script, gchar** exception)
sokoke_js_script_eval	sokoke.h	/^sokoke_js_script_eval                   (JSContextRef    js_context,$/;"	p	signature:(JSContextRef js_context, const gchar* script, gchar** exception)
sokoke_js_string_utf8	sokoke.c	/^sokoke_js_string_utf8 (JSStringRef js_string)$/;"	f	file:	signature:(JSStringRef js_string)
sokoke_key_file_get_boolean_default	sokoke.c	/^sokoke_key_file_get_boolean_default (GKeyFile*      key_file,$/;"	f	signature:(GKeyFile* key_file, const gchar* group, const gchar* key, const gboolean default_value, GError** error)
sokoke_key_file_get_boolean_default	sokoke.h	/^sokoke_key_file_get_boolean_default     (GKeyFile*       key_file,$/;"	p	signature:(GKeyFile* key_file, const gchar* group, const gchar* key, gboolean default_value, GError** error)
sokoke_key_file_get_double_default	sokoke.c	/^sokoke_key_file_get_double_default (GKeyFile*     key_file,$/;"	f	signature:(GKeyFile* key_file, const gchar* group, const gchar* key, const gdouble default_value, GError** error)
sokoke_key_file_get_double_default	sokoke.h	/^sokoke_key_file_get_double_default      (GKeyFile*       key_file,$/;"	p	signature:(GKeyFile* key_file, const gchar* group, const gchar* key, gdouble default_value, GError** error)
sokoke_key_file_get_integer_default	sokoke.c	/^sokoke_key_file_get_integer_default (GKeyFile*    key_file,$/;"	f	signature:(GKeyFile* key_file, const gchar* group, const gchar* key, const gint default_value, GError** error)
sokoke_key_file_get_integer_default	sokoke.h	/^sokoke_key_file_get_integer_default     (GKeyFile*       key_file,$/;"	p	signature:(GKeyFile* key_file, const gchar* group, const gchar* key, const gint default_value, GError** error)
sokoke_key_file_get_string_default	sokoke.c	/^sokoke_key_file_get_string_default (GKeyFile*    key_file,$/;"	f	signature:(GKeyFile* key_file, const gchar* group, const gchar* key, const gchar* default_value, GError** error)
sokoke_key_file_get_string_default	sokoke.h	/^sokoke_key_file_get_string_default      (GKeyFile*       key_file,$/;"	p	signature:(GKeyFile* key_file, const gchar* group, const gchar* key, const gchar* default_value, GError** error)
sokoke_key_file_get_string_list_default	sokoke.c	/^sokoke_key_file_get_string_list_default (GKeyFile*     key_file,$/;"	f	signature:(GKeyFile* key_file, const gchar* group, const gchar* key, gsize* length, gchar** default_value, gsize* default_length, GError* error)
sokoke_key_file_get_string_list_default	sokoke.h	/^sokoke_key_file_get_string_list_default (GKeyFile*       key_file,$/;"	p	signature:(GKeyFile* key_file, const gchar* group, const gchar* key, gsize* length, gchar** default_value, gsize* default_length, GError* error)
sokoke_key_file_save_to_file	sokoke.c	/^sokoke_key_file_save_to_file (GKeyFile*    key_file,$/;"	f	signature:(GKeyFile* key_file, const gchar* filename, GError** error)
sokoke_key_file_save_to_file	sokoke.h	/^sokoke_key_file_save_to_file            (GKeyFile*       key_file,$/;"	p	signature:(GKeyFile* key_file, const gchar* filename, GError** error)
sokoke_magic_uri	sokoke.c	/^sokoke_magic_uri (const gchar* uri)$/;"	f	signature:(const gchar* uri)
sokoke_magic_uri	sokoke.h	/^sokoke_magic_uri                        (const gchar*    uri);$/;"	p	signature:(const gchar* uri)
sokoke_message_dialog	sokoke.c	/^sokoke_message_dialog (GtkMessageType message_type,$/;"	f	signature:(GtkMessageType message_type, const gchar* short_message, const gchar* detailed_message, gboolean modal)
sokoke_message_dialog	sokoke.h	/^sokoke_message_dialog                   (GtkMessageType  message_type,$/;"	p	signature:(GtkMessageType message_type, const gchar* short_message, const gchar* detailed_message, gboolean modal)
sokoke_message_dialog_response_cb	sokoke.c	/^sokoke_message_dialog_response_cb (GtkWidget* dialog,$/;"	f	file:	signature:(GtkWidget* dialog, gint response, gpointer data)
sokoke_open_with_response_cb	sokoke.c	/^sokoke_open_with_response_cb (GtkWidget* dialog,$/;"	f	file:	signature:(GtkWidget* dialog, gint response, GtkEntry* entry)
sokoke_posix_lang_to_rfc2616	sokoke.c	/^sokoke_posix_lang_to_rfc2616 (const gchar *language)$/;"	f	file:	signature:(const gchar *language)
sokoke_prefetch_uri	sokoke.c	/^sokoke_prefetch_uri (MidoriWebSettings*  settings,$/;"	f	signature:(MidoriWebSettings* settings, const char* uri, SoupAddressCallback callback, gpointer user_data)
sokoke_prefetch_uri	sokoke.h	/^sokoke_prefetch_uri                     (MidoriWebSettings*  settings,$/;"	p	signature:(MidoriWebSettings* settings, const char* uri, SoupAddressCallback callback, gpointer user_data)
sokoke_recursive_fork_protection	sokoke.c	/^sokoke_recursive_fork_protection (const gchar* uri,$/;"	f	signature:(const gchar* uri, gboolean set_uri)
sokoke_recursive_fork_protection	sokoke.h	/^sokoke_recursive_fork_protection        (const gchar*         uri,$/;"	p	signature:(const gchar* uri, gboolean set_uri)
sokoke_register_privacy_item	sokoke.c	/^sokoke_register_privacy_item (const gchar* name,$/;"	f	signature:(const gchar* name, const gchar* label, GCallback clear)
sokoke_register_privacy_item	sokoke.h	/^sokoke_register_privacy_item (const gchar* name,$/;"	p	signature:(const gchar* name, const gchar* label, GCallback clear)
sokoke_remove_path	sokoke.c	/^sokoke_remove_path (const gchar* path,$/;"	f	signature:(const gchar* path, gboolean ignore_errors)
sokoke_remove_path	sokoke.h	/^sokoke_remove_path                      (const gchar*    path,$/;"	p	signature:(const gchar* path, gboolean ignore_errors)
sokoke_replace_variables	sokoke.c	/^sokoke_replace_variables (const gchar* template,$/;"	f	signature:(const gchar* template, const gchar* variable_first, ...)
sokoke_replace_variables	sokoke.h	/^sokoke_replace_variables                (const gchar* template,$/;"	p	signature:(const gchar* template, const gchar* variable_first, ...)
sokoke_resolve_hostname	sokoke.c	/^sokoke_resolve_hostname (const gchar* hostname)$/;"	f	signature:(const gchar* hostname)
sokoke_resolve_hostname	sokoke.h	/^sokoke_resolve_hostname                 (const gchar*        hostname);$/;"	p	signature:(const gchar* hostname)
sokoke_resolve_hostname_cb	sokoke.c	/^sokoke_resolve_hostname_cb (SoupAddress *address,$/;"	f	file:	signature:(SoupAddress *address, guint status, gpointer data)
sokoke_set_config_dir	sokoke.c	/^sokoke_set_config_dir (const gchar* new_config_dir)$/;"	f	signature:(const gchar* new_config_dir)
sokoke_set_config_dir	sokoke.h	/^sokoke_set_config_dir                   (const gchar*    new_config_dir);$/;"	p	signature:(const gchar* new_config_dir)
sokoke_show_uri	sokoke.c	/^sokoke_show_uri (GdkScreen*   screen,$/;"	f	signature:(GdkScreen* screen, const gchar* uri, guint32 timestamp, GError** error)
sokoke_show_uri	sokoke.h	/^sokoke_show_uri                         (GdkScreen*      screen,$/;"	p	signature:(GdkScreen* screen, const gchar* uri, guint32 timestamp, GError** error)
sokoke_show_uri_with_mime_type	sokoke.c	/^sokoke_show_uri_with_mime_type (GdkScreen*   screen,$/;"	f	signature:(GdkScreen* screen, const gchar* uri, const gchar* mime_type, guint32 timestamp, GError** error)
sokoke_show_uri_with_mime_type	sokoke.h	/^sokoke_show_uri_with_mime_type          (GdkScreen*      screen,$/;"	p	signature:(GdkScreen* screen, const gchar* uri, const gchar* mime_type, guint32 timestamp, GError** error)
sokoke_spawn_app	sokoke.c	/^sokoke_spawn_app (const gchar* uri,$/;"	f	signature:(const gchar* uri, gboolean private)
sokoke_spawn_app	sokoke.h	/^sokoke_spawn_app                        (const gchar*    uri,$/;"	p	signature:(const gchar* uri, gboolean inherit_config)
sokoke_spawn_program	sokoke.c	/^sokoke_spawn_program (const gchar* command,$/;"	f	signature:(const gchar* command, const gchar* argument)
sokoke_spawn_program	sokoke.h	/^sokoke_spawn_program                    (const gchar* command,$/;"	p	signature:(const gchar* command, const gchar* argument)
sokoke_time_t_to_julian	sokoke.c	/^sokoke_time_t_to_julian (const time_t* timestamp)$/;"	f	signature:(const time_t* timestamp)
sokoke_time_t_to_julian	sokoke.h	/^sokoke_time_t_to_julian                 (const time_t*   timestamp);$/;"	p	signature:(const time_t* timestamp)
sokoke_widget_copy_clipboard	sokoke.c	/^sokoke_widget_copy_clipboard (GtkWidget*   widget,$/;"	f	signature:(GtkWidget* widget, const gchar* text)
sokoke_widget_copy_clipboard	sokoke.h	/^sokoke_widget_copy_clipboard (GtkWidget*   widget,$/;"	p	signature:(GtkWidget* widget, const gchar* text)
sokoke_widget_get_text_size	sokoke.c	/^sokoke_widget_get_text_size (GtkWidget*   widget,$/;"	f	signature:(GtkWidget* widget, const gchar* text, gint* width, gint* height)
sokoke_widget_get_text_size	sokoke.h	/^sokoke_widget_get_text_size             (GtkWidget*      widget,$/;"	p	signature:(GtkWidget* widget, const gchar* text, gint* width, gint* height)
sokoke_widget_set_visible	sokoke.c	/^void sokoke_widget_set_visible (GtkWidget* widget, gboolean visible)$/;"	f	signature:(GtkWidget* widget, gboolean visible)
sokoke_widget_set_visible	sokoke.h	/^sokoke_widget_set_visible               (GtkWidget*      widget,$/;"	p	signature:(GtkWidget* widget, gboolean visible)
sokoke_window_activate_key	sokoke.c	/^sokoke_window_activate_key (GtkWindow*   window,$/;"	f	signature:(GtkWindow* window, GdkEventKey* event)
sokoke_window_activate_key	sokoke.h	/^sokoke_window_activate_key              (GtkWindow*      window,$/;"	p	signature:(GtkWindow* window, GdkEventKey* event)
sokoke_xfce_header_new	sokoke.c	/^sokoke_xfce_header_new (const gchar* icon,$/;"	f	signature:(const gchar* icon, const gchar* title)
sokoke_xfce_header_new	sokoke.h	/^sokoke_xfce_header_new                  (const gchar*    icon,$/;"	p	signature:(const gchar* icon, const gchar* title)
soup_session_settings_notify_first_party_cb	main.c	/^soup_session_settings_notify_first_party_cb (MidoriWebSettings* settings,$/;"	f	file:	signature:(MidoriWebSettings* settings, GParamSpec* pspec, SoupSession* session)
soup_session_settings_notify_http_proxy_cb	main.c	/^soup_session_settings_notify_http_proxy_cb (MidoriWebSettings* settings,$/;"	f	file:	signature:(MidoriWebSettings* settings, GParamSpec* pspec, SoupSession* session)
special	midori-view.c	/^    gboolean special;$/;"	m	struct:_MidoriView	file:	access:public
speeddial	midori-app.c	/^    GKeyFile* speeddial;$/;"	m	struct:_MidoriApp	file:	access:public
speeddial	midori-browser.c	/^    GKeyFile* speeddial;$/;"	m	struct:_MidoriBrowser	file:	access:public
speeddial_markup	midori-view.c	/^static gchar* speeddial_markup = NULL;$/;"	v	file:
speeddial_new_from_file	main.c	/^speeddial_new_from_file (const gchar* config,$/;"	f	file:	signature:(const gchar* config, GError** error)
ssl	socket.h	/^	SSL *ssl;$/;"	m	struct:_SockInfo	access:public
ssl	socket.h	/^	gpointer ssl;$/;"	m	struct:_SockInfo	access:public
ssl_done_socket	socket.c	/^void ssl_done_socket(SockInfo *sockinfo)$/;"	f	signature:(SockInfo *sockinfo)
ssl_done_socket	socket.h	/^void ssl_done_socket	(SockInfo	*sockinfo);$/;"	p	signature:(SockInfo *sockinfo)
ssl_getline	socket.c	/^gint ssl_getline(SSL *ssl, gchar **line)$/;"	f	signature:(SSL *ssl, gchar **line)
ssl_getline	socket.h	/^gint ssl_getline	(SSL *ssl, gchar **line);$/;"	p	signature:(SSL *ssl, gchar **line)
ssl_gets	socket.c	/^gint ssl_gets(SSL *ssl, gchar *buf, gint len)$/;"	f	signature:(SSL *ssl, gchar *buf, gint len)
ssl_gets	socket.h	/^gint ssl_gets		(SSL *ssl, gchar *buf, gint len);$/;"	p	signature:(SSL *ssl, gchar *buf, gint len)
ssl_peek	socket.c	/^gint ssl_peek(SSL *ssl, gchar *buf, gint len)$/;"	f	signature:(SSL *ssl, gchar *buf, gint len)
ssl_peek	socket.h	/^gint ssl_peek		(SSL *ssl, gchar *buf, gint len);$/;"	p	signature:(SSL *ssl, gchar *buf, gint len)
ssl_read	socket.c	/^gint ssl_read(SSL *ssl, gchar *buf, gint len)$/;"	f	signature:(SSL *ssl, gchar *buf, gint len)
ssl_read	socket.h	/^gint ssl_read		(SSL *ssl, gchar *buf, gint len);$/;"	p	signature:(SSL *ssl, gchar *buf, gint len)
ssl_write	socket.c	/^gint ssl_write(SSL *ssl, const gchar *buf, gint len)$/;"	f	signature:(SSL *ssl, const gchar *buf, gint len)
ssl_write	socket.h	/^gint ssl_write		(SSL *ssl, const gchar *buf, gint len);$/;"	p	signature:(SSL *ssl, const gchar *buf, gint len)
ssl_write_all	socket.c	/^gint ssl_write_all(SSL *ssl, const gchar *buf, gint len)$/;"	f	signature:(SSL *ssl, const gchar *buf, gint len)
ssl_write_all	socket.h	/^gint ssl_write_all	(SSL *ssl, const gchar *buf, gint len);$/;"	p	signature:(SSL *ssl, const gchar *buf, gint len)
state	socket.h	/^	ConnectionState state;$/;"	m	struct:_SockInfo	access:public
statusbar	midori-browser.c	/^    GtkWidget* statusbar;$/;"	m	struct:_MidoriBrowser	file:	access:public
statusbar_contents	midori-browser.c	/^    GtkWidget* statusbar_contents;$/;"	m	struct:_MidoriBrowser	file:	access:public
statusbar_text	midori-browser.c	/^    gchar* statusbar_text;$/;"	m	struct:_MidoriBrowser	file:	access:public
statusbar_text	midori-view.c	/^    gchar* statusbar_text;$/;"	m	struct:_MidoriView	file:	access:public
statusbar_text_changed	midori-browser.h	/^    (*statusbar_text_changed)  (MidoriBrowser*       browser,$/;"	m	struct:_MidoriBrowserClass	access:public
stock_id	midori-panel.c	/^    gchar* stock_id;$/;"	m	struct:__anon29	file:	access:public
storage_type	gtkiconentry.c	/^  GtkImageType storage_type;$/;"	m	struct:__anon16	file:	access:public
string_append_escaped	midori-array.c	/^string_append_escaped (GString     *str,$/;"	f	file:	signature:(GString *str, const gchar *text)
string_append_item	midori-array.c	/^string_append_item (GString*   string,$/;"	f	file:	signature:(GString* string, KatzeItem* item)
string_append_netscape_item	midori-array.c	/^string_append_netscape_item (GString*   string,$/;"	f	file:	signature:(GString* string, KatzeItem* item)
string_append_xml_element	midori-array.c	/^string_append_xml_element (GString*     string,$/;"	f	file:	signature:(GString* string, const gchar* name, const gchar* value)
strip_referer	midori-websettings.c	/^    gboolean strip_referer;$/;"	m	struct:_MidoriWebSettings	file:	access:public
stripped_uri	midori-browser.c	/^        g_free (stripped_uri);$/;"	v
tab_close	midori-view.c	/^    GtkWidget* tab_close;$/;"	m	struct:_MidoriView	file:	access:public
tab_icon	midori-view.c	/^    GtkWidget* tab_icon;$/;"	m	struct:_MidoriView	file:	access:public
tab_label	midori-view.c	/^    GtkWidget* tab_label;$/;"	m	struct:_MidoriView	file:	access:public
tab_title	midori-view.c	/^    GtkWidget* tab_title;$/;"	m	struct:_MidoriView	file:	access:public
text	midori-locationaction.c	/^    gchar* text;$/;"	m	struct:_MidoriLocationAction	file:	access:public
text	midori-searchaction.c	/^    gchar* text;$/;"	m	struct:_MidoriSearchAction	file:	access:public
text_editor	midori-websettings.c	/^    gchar* text_editor;$/;"	m	struct:_MidoriWebSettings	file:	access:public
throbber	midori-browser.c	/^    GtkWidget* throbber;$/;"	m	struct:_MidoriBrowser	file:	access:public
thumb_queue	midori-view.c	/^static GList* thumb_queue = NULL;$/;"	v	file:
thumb_view	midori-view.c	/^static GtkWidget* thumb_view = NULL;$/;"	v	file:
thumb_view_load_status_cb	midori-view.c	/^thumb_view_load_status_cb (WebKitWebView* thumb_view_,$/;"	f	file:	signature:(WebKitWebView* thumb_view_, GParamSpec* pspec, MidoriView* view)
timeout	main.c	/^     guint timeout;$/;"	m	struct:__anon1	file:	access:public
timeout_handler	socket.c	/^static void G_GNUC_NORETURN timeout_handler(gint sig)$/;"	f	file:	signature:(gint sig)
title	midori-view.c	/^    gchar* title;$/;"	m	struct:_MidoriView	file:	access:public
toolbar	midori-panel.c	/^    GtkWidget* toolbar;$/;"	m	struct:_MidoriPanel	file:	access:public
toolbar	midori-panel.c	/^    GtkWidget* toolbar;$/;"	m	struct:__anon29	file:	access:public
toolbar_items	midori-websettings.c	/^    gchar* toolbar_items;$/;"	m	struct:_MidoriWebSettings	file:	access:public
toolbar_label	midori-panel.c	/^    GtkWidget* toolbar_label;$/;"	m	struct:_MidoriPanel	file:	access:public
toolbar_style	midori-websettings.c	/^    MidoriToolbarStyle toolbar_style : 3;$/;"	m	struct:_MidoriWebSettings	file:	access:public
toolbook	midori-panel.c	/^    GtkWidget* toolbook;$/;"	m	struct:_MidoriPanel	file:	access:public
toolitem	midori-panedaction.c	/^    GtkWidget* toolitem;$/;"	m	struct:_MidoriPanedAction	file:	access:public
tooltip_text	gtkiconentry.c	/^  gchar *tooltip_text;$/;"	m	struct:__anon16	file:	access:public
transferbar	midori-browser.c	/^    GtkWidget* transferbar;$/;"	m	struct:_MidoriBrowser	file:	access:public
trash	midori-app.c	/^    KatzeArray* trash;$/;"	m	struct:_MidoriApp	file:	access:public
trash	midori-browser.c	/^    KatzeArray* trash;$/;"	m	struct:_MidoriBrowser	file:	access:public
treeview	midori-locationaction.c	/^    GtkWidget* treeview;$/;"	m	struct:_MidoriLocationAction	file:	access:public
treeview	midori-searchaction.c	/^    GtkWidget* treeview;$/;"	m	struct:_MidoriSearchAction	file:	access:public
type	midori-extension.c	/^    GType type;$/;"	m	struct:__anon31	file:	access:public
type	midori-extension.c	/^    GType type;$/;"	m	struct:__anon32	file:	access:public
type	midori-extension.c	/^    GType type;$/;"	m	struct:__anon33	file:	access:public
type	midori-extension.c	/^    GType type;$/;"	m	struct:__anon34	file:	access:public
uri	main.c	/^     gchar* uri;$/;"	m	struct:__anon1	file:	access:public
uri	midori-locationaction.c	/^    gchar* uri;$/;"	m	struct:_MidoriLocationAction	file:	access:public
uri	midori-view.c	/^    gchar* uri;$/;"	m	struct:_MidoriView	file:	access:public
urldata	midori-browser.c	/^    gchar urldata[BUFSIZE];$/;"	m	struct:urllist	file:	access:public
urllist	midori-browser.c	/^typedef struct urllist$/;"	s	file:
urllist::urldata	midori-browser.c	/^    gchar urldata[BUFSIZE];$/;"	m	struct:urllist	file:	access:public
urllist::urlnext	midori-browser.c	/^    struct urllist *urlnext;$/;"	m	struct:urllist	typeref:struct:urllist::urllist	file:	access:public
urllist::urlpre	midori-browser.c	/^    struct urllist *urlpre;$/;"	m	struct:urllist	typeref:struct:urllist::urllist	file:	access:public
urllistFilter	midori-browser.c	/^}urllistFilter;$/;"	t	typeref:struct:urllist	file:
urlnext	midori-browser.c	/^    struct urllist *urlnext;$/;"	m	struct:urllist	typeref:struct:urllist::urllist	file:	access:public
urlpre	midori-browser.c	/^    struct urllist *urlpre;$/;"	m	struct:urllist	typeref:struct:urllist::urllist	file:	access:public
user_stylesheet_uri	midori-websettings.c	/^    gchar* user_stylesheet_uri;$/;"	m	struct:_MidoriWebSettings	file:	access:public
user_stylesheet_uri_cached	midori-websettings.c	/^    gchar* user_stylesheet_uri_cached;$/;"	m	struct:_MidoriWebSettings	file:	access:public
user_stylesheets	midori-websettings.c	/^    GHashTable* user_stylesheets;$/;"	m	struct:_MidoriWebSettings	file:	access:public
value	midori-extension.c	/^    gboolean value;$/;"	m	struct:__anon31	file:	access:public
value	midori-extension.c	/^    gchar* value;$/;"	m	struct:__anon33	file:	access:public
value	midori-extension.c	/^    gchar** value;$/;"	m	struct:__anon34	file:	access:public
value	midori-extension.c	/^    gint value;$/;"	m	struct:__anon32	file:	access:public
version	midori-extension.c	/^    gchar* version;$/;"	m	struct:_MidoriExtensionPrivate	file:	access:public
view	midori-view.c	/^    MidoriView* view;$/;"	m	struct:__anon6	file:	access:public
web_view	midori-view.c	/^    GtkWidget* web_view;$/;"	m	struct:_MidoriView	file:	access:public
webkit_web_view_console_message_cb	midori-view.c	/^webkit_web_view_console_message_cb (GtkWidget*   web_view,$/;"	f	file:	signature:(GtkWidget* web_view, const gchar* message, guint line, const gchar* source_id, MidoriView* view)
webkit_web_view_create_web_view_cb	midori-view.c	/^webkit_web_view_create_web_view_cb (GtkWidget*      web_view,$/;"	f	file:	signature:(GtkWidget* web_view, WebKitWebFrame* web_frame, MidoriView* view)
webkit_web_view_download_requested_cb	midori-view.c	/^webkit_web_view_download_requested_cb (GtkWidget*      web_view,$/;"	f	file:	signature:(GtkWidget* web_view, WebKitDownload* download, MidoriView* view)
webkit_web_view_get_selected_text	midori-view.c	/^webkit_web_view_get_selected_text (WebKitWebView* web_view);$/;"	p	file:	signature:(WebKitWebView* web_view)
webkit_web_view_hovering_over_link_cb	midori-view.c	/^webkit_web_view_hovering_over_link_cb (WebKitWebView* web_view,$/;"	f	file:	signature:(WebKitWebView* web_view, const gchar* tooltip, const gchar* link_uri, MidoriView* view)
webkit_web_view_load_committed_cb	midori-view.c	/^webkit_web_view_load_committed_cb (WebKitWebView*  web_view,$/;"	f	file:	signature:(WebKitWebView* web_view, WebKitWebFrame* web_frame, MidoriView* view)
webkit_web_view_load_error_cb	midori-view.c	/^webkit_web_view_load_error_cb (WebKitWebView*  web_view,$/;"	f	file:	signature:(WebKitWebView* web_view, WebKitWebFrame* web_frame, const gchar* uri, GError* error, MidoriView* view)
webkit_web_view_load_finished_cb	midori-view.c	/^webkit_web_view_load_finished_cb (WebKitWebView*  web_view,$/;"	f	file:	signature:(WebKitWebView* web_view, WebKitWebFrame* web_frame, MidoriView* view)
webkit_web_view_load_started_cb	midori-view.c	/^webkit_web_view_load_started_cb (WebKitWebView*  web_view,$/;"	f	file:	signature:(WebKitWebView* web_view, WebKitWebFrame* web_frame, MidoriView* view)
webkit_web_view_mime_type_decision_cb	midori-view.c	/^webkit_web_view_mime_type_decision_cb (GtkWidget*               web_view,$/;"	f	file:	signature:(GtkWidget* web_view, WebKitWebFrame* web_frame, WebKitNetworkRequest* request, const gchar* mime_type, WebKitWebPolicyDecision* decision, MidoriView* view)
webkit_web_view_notify_title_cb	midori-view.c	/^webkit_web_view_notify_title_cb (WebKitWebView* web_view,$/;"	f	file:	signature:(WebKitWebView* web_view, GParamSpec* pspec, MidoriView* view)
webkit_web_view_notify_uri_cb	midori-view.c	/^webkit_web_view_notify_uri_cb (WebKitWebView* web_view,$/;"	f	file:	signature:(WebKitWebView* web_view, GParamSpec* pspec, MidoriView* view)
webkit_web_view_populate_popup_cb	midori-view.c	/^webkit_web_view_populate_popup_cb (WebKitWebView* web_view,$/;"	f	file:	signature:(WebKitWebView* web_view, GtkWidget* menu, MidoriView* view)
webkit_web_view_progress_changed_cb	midori-view.c	/^webkit_web_view_progress_changed_cb (WebKitWebView* web_view,$/;"	f	file:	signature:(WebKitWebView* web_view, gint progress, MidoriView* view)
webkit_web_view_statusbar_text_changed_cb	midori-view.c	/^webkit_web_view_statusbar_text_changed_cb (WebKitWebView* web_view,$/;"	f	file:	signature:(WebKitWebView* web_view, const gchar* text, MidoriView* view)
webkit_web_view_web_view_ready_cb	midori-view.c	/^webkit_web_view_web_view_ready_cb (GtkWidget*  web_view,$/;"	f	file:	signature:(GtkWidget* web_view, MidoriView* view)
webkit_web_view_window_object_cleared_cb	midori-view.c	/^webkit_web_view_window_object_cleared_cb (GtkWidget*      web_view,$/;"	f	file:	signature:(GtkWidget* web_view, WebKitWebFrame* web_frame, JSContextRef js_context, JSObjectRef js_window, MidoriView* view)
website	midori-extension.c	/^    gchar* website;$/;"	m	struct:_MidoriExtensionPrivate	file:	access:public
widget	midori-panedaction.c	/^    GtkWidget* widget;$/;"	m	struct:_MidoriPanedActionChild	file:	access:public
window	gtkiconentry.c	/^  GdkWindow *window;$/;"	m	struct:__anon16	file:	access:public
window_object_cleared	midori-browser.h	/^    (*window_object_cleared)   (MidoriBrowser*       browser,$/;"	m	struct:_MidoriBrowserClass	access:public
zoom_text_and_images	midori-websettings.c	/^    gboolean zoom_text_and_images : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
