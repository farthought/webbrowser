Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 midori (0.4.3+dfsg-0.2) unstable; urgency=low
 .
   * New upstream release.
Author: Yves-Alexis Perez <corsac@debian.org>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- midori-0.4.3+dfsg.orig/tags
+++ midori-0.4.3+dfsg/tags
@@ -1261,6 +1261,7 @@ WAFREVISION	waf-modules/wafadmin/Constan
 WAFVERSION	waf-modules/wafadmin/Constants.py	/^WAFVERSION="1.5.19"$/;"	v
 WAF_CONFIG_H	waf-modules/wafadmin/Constants.py	/^WAF_CONFIG_H='config.h'$/;"	v
 WAF_CONFIG_LOG	waf-modules/wafadmin/Constants.py	/^WAF_CONFIG_LOG='config.log'$/;"	v
+WAF_HOME	Makefile	/^WAF_HOME=\/home\/sg-os\/webbrowser\/exit\/midori-0.4.3+dfsg$/;"	m
 WEBKIT_1_0_VERSION	_build_/c4che/default.cache.py	/^WEBKIT_1_0_VERSION = '1.10.2'$/;"	v
 WEBKIT_1_0_VERSION	_build_/default/config.h	26;"	d
 WSCRIPT_BUILD_FILE	waf-modules/wafadmin/Constants.py	/^WSCRIPT_BUILD_FILE='wscript_build'$/;"	v
--- midori-0.4.3+dfsg.orig/data/faq.html
+++ midori-0.4.3+dfsg/data/faq.html
@@ -4,22 +4,22 @@
  lang="en" dir="ltr">
 <head>
   <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
-  <title>midori:faq</title>
+  <title>iSoft-explore:faq</title>
 <meta name="generator" content="DokuWiki"/>
 <meta name="robots" content="noindex,nofollow"/>
 <meta name="date" content="2011-11-08T02:51:30+0100"/>
-<meta name="keywords" content="midori,faq"/>
+<meta name="keywords" content="iSoft-explore,faq"/>
 <link rel="search" type="application/opensearchdescription+xml" href="/lib/exe/opensearch.php" title="Xfce Wiki"/>
 <link rel="start" href="/"/>
-<link rel="contents" href="/midori/faq?do=index" title="Sitemap"/>
+<link rel="contents" href="/iSoft-explore/faq?do=index" title="Sitemap"/>
 <link rel="alternate" type="application/rss+xml" title="Recent Changes" href="/feed.php"/>
-<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="/feed.php?mode=list&amp;ns=midori"/>
-<link rel="alternate" type="text/html" title="Plain HTML" href="/_export/xhtml/midori/faq"/>
-<link rel="alternate" type="text/plain" title="Wiki Markup" href="/_export/raw/midori/faq"/>
-<link rel="canonical" href="http://wiki.xfce.org/midori/faq"/>
+<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="/feed.php?mode=list&amp;ns=iSoft-explore"/>
+<link rel="alternate" type="text/html" title="Plain HTML" href="/_export/xhtml/iSoft-explore/faq"/>
+<link rel="alternate" type="text/plain" title="Wiki Markup" href="/_export/raw/iSoft-explore/faq"/>
+<link rel="canonical" href="http://wiki.xfce.org/iSoft-explore/faq"/>
 <link rel="stylesheet" type="text/css" href="faq.css" />
 <script type="text/javascript"><!--//--><![CDATA[//><!--
-var NS='midori';var SIG=' --- //[[christian@twotoasts.de|Christian Dywan]] 2011/11/11 00:07//';var JSINFO = {"id":"midori:faq","namespace":"midori"};
+var NS='iSoft-explore';var SIG=' --- //[[christian@twotoasts.de|Christian Dywan]] 2011/11/11 00:07//';var JSINFO = {"id":"iSoft-explore:faq","namespace":"iSoft-explore"};
 //--><!]]></script>
 <script type="text/javascript" charset="utf-8" src="/lib/exe/js.php?tseed=1316333533"></script>
 </head>
@@ -31,37 +31,18 @@ var NS='midori';var SIG=' --- //[[christ
 <div id="toc__inside">
 
 <ul class="toc">
-<li class="level1"><div class="li"><span class="li"><a href="#midori_-_frequently_asked_questions" class="toc">Midori - Frequently asked questions</a></span></div></li>
+<li class="level1"><div class="li"><span class="li"><a href="#iSoft-explore_-_frequently_asked_questions" class="toc">Isoft-explore - Frequently asked questions</a></span></div></li>
 <li class="level1"><div class="li"><span class="li"><a href="#getting_started" class="toc">Getting started</a></span></div>
 <ul class="toc">
-<li class="level2"><div class="li"><span class="li"><a href="#about_midori" class="toc">About Midori</a></span></div></li>
+<li class="level2"><div class="li"><span class="li"><a href="#about_iSoft-explore" class="toc">About Isoft-explore</a></span></div></li>
 <li class="level2"><div class="li"><span class="li"><a href="#common_problems" class="toc">Common problems</a></span></div></li>
 </ul>
 </li>
-<li class="level1"><div class="li"><span class="li"><a href="#features" class="toc">Features</a></span></div>
-<ul class="toc">
-<li class="level2"><div class="li"><span class="li"><a href="#web_applications" class="toc">Web Applications</a></span></div></li>
-<li class="level2"><div class="li"><span class="li"><a href="#private_browsing" class="toc">Private Browsing</a></span></div></li>
-<li class="level2"><div class="li"><span class="li"><a href="#proxy_servers" class="toc">Proxy servers</a></span></div></li>
-<li class="level2"><div class="li"><span class="li"><a href="#using_the_keyboard" class="toc">Using the Keyboard</a></span></div>
-<ul class="toc">
-<li class="level3"><div class="li"><span class="li"><a href="#hjkl" class="toc">HJKL</a></span></div></li>
-<li class="level3"><div class="li"><span class="li"><a href="#following_links" class="toc">Following Links</a></span></div></li>
-<li class="level3"><div class="li"><span class="li"><a href="#use_ctrl_shift_tab_to_switch_between_pages" class="toc">Use Ctrl(+Shift)+Tab to switch between pages</a></span></div></li>
-<li class="level3"><div class="li"><span class="li"><a href="#customizing_keyboard_shortcuts" class="toc">Customizing keyboard shortcuts</a></span></div></li>
-<li class="level3"><div class="li"><span class="li"><a href="#using_find" class="toc">Using Find</a></span></div></li>
-</ul>
-</li>
-<li class="level2"><div class="li"><span class="li"><a href="#mouse_gestures" class="toc">Mouse Gestures</a></span></div></li>
-<li class="level2"><div class="li"><span class="li"><a href="#spell_check" class="toc">Spell check</a></span></div></li>
-<li class="level2"><div class="li"><span class="li"><a href="#user_scripts" class="toc">User scripts</a></span></div></li>
-<li class="level2"><div class="li"><span class="li"><a href="#user_styles" class="toc">User styles</a></span></div></li></ul>
-</li></ul>
 </div>
 </div>
 <!-- TOC END -->
 
-<h1 class="sectionedit1"><a name="midori_-_frequently_asked_questions" id="midori_-_frequently_asked_questions">Midori - Frequently asked questions</a></h1>
+<h1 class="sectionedit1"><a name="iSoft-explore_-_frequently_asked_questions" id="iSoft-explore_-_frequently_asked_questions">Isoft-explore - Frequently asked questions</a></h1>
 <div class="level1">
 
 <p>
@@ -69,38 +50,38 @@ var NS='midori';var SIG=' --- //[[christ
 </p>
 
 <p>
-This is a list of frequently asked questions about the Midori Web Browser. Anyone feel free to improve and/ or extend this page, but keep it clean and easy to read for other Xfce users.
+This is a list of frequently asked questions about the Isoft-explore Web Browser. Anyone feel free to improve and/ or extend this page, but keep it clean and easy to read for other Xfce users.
 </p>
 <p>
-This is a snapshot of Frequently Asked Questions designated for offline viewing. The most recent version of this document can be found <a href="http://wiki.xfce.org/midori/faq">in the Xfce wiki</a>.
+This is a snapshot of Frequently Asked Questions designated for offline viewing. 
 <p/>
 
 </div>
-<!-- EDIT1 SECTION "Midori - Frequently asked questions" [1-289] -->
+<!-- EDIT1 SECTION "Isoft-explore - Frequently asked questions" [1-289] -->
 <h1 class="sectionedit2"><a name="getting_started" id="getting_started">Getting started</a></h1>
 <div class="level1">
 
 </div>
 <!-- EDIT2 SECTION "Getting started" [290-319] -->
-<h2 class="sectionedit3"><a name="about_midori" id="about_midori">About Midori</a></h2>
+<h2 class="sectionedit3"><a name="about_iSoft-explore" id="about_iSoft-explore">About Isoft-explore</a></h2>
 <div class="level2">
 
 </div>
 
-<h4><a name="what_is_midori_and_why_should_i_use_it" id="what_is_midori_and_why_should_i_use_it">What is &quot;Midori&quot; and why should I use it?</a></h4>
+<h4><a name="what_is_iSoft-explore_and_why_should_i_use_it" id="what_is_iSoft-explore_and_why_should_i_use_it">What is &quot;Isoft-explore&quot; and why should I use it?</a></h4>
 <div class="level4">
 
 <p>
-Midori is a Web Browser, that aims to be lightweight and fast. It aligns well with the Xfce philosophy of making the most out of available resources.
+Isoft-explore is a Web Browser, that aims to be lightweight and fast.
 </p>
 
 </div>
 
-<h4><a name="how_to_pronounce_midori_and_what_does_the_name_mean" id="how_to_pronounce_midori_and_what_does_the_name_mean">How to pronounce Midori and what does the name mean?</a></h4>
+<h4><a name="how_to_pronounce_iSoft-explore_and_what_does_the_name_mean" id="how_to_pronounce_iSoft-explore_and_what_does_the_name_mean">How to pronounce Isoft-explore and what does the name mean?</a></h4>
 <div class="level4">
 
 <p>
-Pronounce it “midoɺi”, with a Spanish/ Japanese “r” or “Mee-Doh-Ree” in English or read it Italian. The name comes from the Japanese word 緑 (みどり) for the colour “green”.
+Pronounce it “[ɪˈsɔ:ft(r)][ɪkˈsplɔ:(r)]”. The name comes from the Chinese word 普华基础软件 for the Domestic operating system.
 </p>
 
 </div>
@@ -109,29 +90,29 @@ Pronounce it “midoɺi”, with a Spani
 <div class="level4">
 
 <p>
-The paw of a green cat. Obviously. Also it resembles the letter “M” in “Midori”. The curving is supposed to emphasize speed.
+The first letter of the company name. Obviously. It resembles the letter “I” in “Isoft-explore”. The curving is supposed to emphasize speed.
 </p>
 
 </div>
 
-<h4><a name="on_which_platforms_does_midori_run_currently" id="on_which_platforms_does_midori_run_currently">On which platforms does Midori run currently?</a></h4>
+<h4><a name="on_which_platforms_does_iSoft-explore_run_currently" id="on_which_platforms_does_iSoft-explore_run_currently">On which platforms does Isoft-explore run currently?</a></h4>
 <div class="level4">
 
 <p>
-Midori is basically very portable and should run on all platforms that its dependencies support.
+Isoft-explore is basically very portable and should run on all platforms that its dependencies support.
 </p>
 
 </div>
 
-<h4><a name="under_which_license_is_midori_distributed" id="under_which_license_is_midori_distributed">Under which license is Midori distributed?</a></h4>
+<h4><a name="under_which_license_is_iSoft-explore_distributed" id="under_which_license_is_iSoft-explore_distributed">Under which license is Isoft-explore distributed?</a></h4>
 <div class="level4">
 
 <p>
-Midori and all delivered artwork are licensed under the LGPL2.
+Isoft-explore and all delivered artwork are licensed under the LGPL2.
 </p>
 
 </div>
-<!-- EDIT3 SECTION "About Midori" [320-1212] -->
+<!-- EDIT3 SECTION "About Isoft-explore" [320-1212] -->
 <h2 class="sectionedit4"><a name="common_problems" id="common_problems">Common problems</a></h2>
 <div class="level2">
 
@@ -145,11 +126,11 @@ Some websites discriminate against your
 </p>
 
 <p>
-If you have Midori older than 0.3.5, go to Preferences &gt; Network &gt; Identify As, and choose Custom. Paste this into the entry:
+If you have Isoft-explore older than 1.0, go to Preferences &gt; Network &gt; Identify As, and choose Custom. Paste this into the entry:
 </p>
 
 <p>
-Mozilla/5.0 (X11; Linux) AppleWebKit/531.2+ Midori/0.3
+Mozilla/5.0 (X11; Linux) AppleWebKit/531.2+ Isoft-explore/1.0
 </p>
 
 <p>
@@ -170,12 +151,12 @@ Ideally Google would follow <a href="htt
 <div class="level4">
 
 <p>
-The set of themed icons Midori can use is very limited. For instance icons for a new tab or the throbber are not guaranteed to be available. To fix this, install a Freedesktop.org <acronym title="specification">spec</acronym> compliant icon theme, such as Elementary, Faenza, Buuf or GNOME.
+The set of themed icons Isoft-explore can use is very limited. For instance icons for a new tab or the throbber are not guaranteed to be available. To fix this, install a Freedesktop.org <acronym title="specification">spec</acronym> compliant icon theme, such as Elementary, Faenza, Buuf or GNOME.
 </p>
 
 </div>
 
-<h4><a name="tweaking_midori_on_the_gtk_level" id="tweaking_midori_on_the_gtk_level">Tweaking Midori on the Gtk level</a></h4>
+<h4><a name="tweaking_iSoft-explore_on_the_gtk_level" id="tweaking_iSoft-explore_on_the_gtk_level">Tweaking Isoft-explore on the Gtk level</a></h4>
 <div class="level4">
 
 <p>
@@ -200,7 +181,7 @@ Enable changing hotkeys while hovering m
 
 </div>
 
-<h4><a name="midori_crashes_shortly_before_pages_are_loaded" id="midori_crashes_shortly_before_pages_are_loaded">Midori crashes shortly before pages are loaded</a></h4>
+<h4><a name="iSoft-explore_crashes_shortly_before_pages_are_loaded" id="iSoft-explore_crashes_shortly_before_pages_are_loaded">Isoft-explore crashes shortly before pages are loaded</a></h4>
 <div class="level4">
 
 <p>
@@ -222,7 +203,7 @@ The official Flash plugin is called libf
 </p>
 
 <p>
-You can either run that above line and run Midori in the same terminal afterwards or, for the long term, put it in ~/.bash_profile or /etc/profile.d or your respective distribution&#039;s place for this.
+You can either run that above line and run Isoft-explore in the same terminal afterwards or, for the long term, put it in ~/.bash_profile or /etc/profile.d or your respective distribution&#039;s place for this.
 </p>
 
 </div>
@@ -236,13 +217,6 @@ Try searching for a package named nsplug
 
 </div>
 
-<h4><a name="https_urls_won_t_load" id="https_urls_won_t_load">HTTPS URLS won&#039;t load</a></h4>
-<div class="level4">
-
-<p>
-That&#039;s a problem with WebKit. You can work around it to some extent if you start Midori like so:
-</p>
-<pre class="code bash"><span class="kw3">export</span> <span class="re2">WEBKIT_IGNORE_SSL_ERRORS</span>=<span class="st0">&quot;1&quot;</span> midori</pre>
 
 </div>
 
@@ -274,7 +248,7 @@ You need to have GStreamer plugins insta
 </li>
 <li class="level1"><div class="li"> You can <a href="http://ie.microsoft.com/testdrive/Graphics/VideoFormatSupport/Default.html" class="urlextern" title="http://ie.microsoft.com/testdrive/Graphics/VideoFormatSupport/Default.html"  rel="nofollow">test your installed codecs here</a>..</div>
 </li>
-<li class="level1"><div class="li"> Since Midori 0.3.5 you can look at “about:version” to see which video codecs you have installed.</div>
+<li class="level1"><div class="li"> Since Isoft-explore 0.3.5 you can look at “about:version” to see which video codecs you have installed.</div>
 </li>
 </ol>
 
@@ -288,56 +262,18 @@ Java is supported in WebKitGTK+ since 1.
 </p>
 
 <p>
-icedtea6 version 1.8 and above has been known to crash midori.  If this is the case for you, try sun-jre.
+icedtea6 version 1.8 and above has been known to crash iSoft-explore.  If this is the case for you, try sun-jre.
 </p>
 
 </div>
 
-<h4><a name="are_socks_proxy_servers_supported" id="are_socks_proxy_servers_supported">Are SOCKS proxy servers supported?</a></h4>
-<div class="level4">
-
-<p>
-Currently only <acronym title="Hyper Text Transfer Protocol">HTTP</acronym> proxy servers are supported directly. A way to use SOCKS on Unix is to use tsocks with <acronym title="Secure Shell">SSH</acronym> as follows:
-</p>
-<ol>
-<li class="level1"><div class="li"> Install &#039;tsocks&#039;</div>
-</li>
-<li class="level1"><div class="li"> Open /etc/tsocks.conf in an editor</div>
-</li>
-<li class="level1"><div class="li"> Type something like this, you can choose the port freely: <pre class="code">server = 127.0.0.1
-server_type = 5
-server_port = 5555</pre>
-</div>
-</li>
-<li class="level1"><div class="li"> Open an <acronym title="Secure Shell">SSH</acronym> connection with the same port: <pre class="code"> ssh -D localhost:5555 myhost.com </pre>
-</div>
-</li>
-<li class="level1"><div class="li"> Run Midori with “tsocks” in front of it: <pre class="code"> tsocks midori </pre>
-</div>
-</li>
-<li class="level1"><div class="li"> Now you can use for example <a href="http://www.whatsmyip.org/" class="urlextern" title="http://www.whatsmyip.org/"  rel="nofollow">http://www.whatsmyip.org/</a> to verify that you are using a SOCKS connection. The IP address should match the one of your <acronym title="Secure Shell">SSH</acronym> host. Remember to keep the <acronym title="Secure Shell">SSH</acronym> login running, and don&#039;t suspend it, otherwise it won&#039;t work.</div>
-</li>
-<li class="level1"><div class="li"> If the connection fails for some reason, you should see a connection error.</div>
-</li>
-</ol>
-
-</div>
-
-<h4><a name="how_do_i_get_rid_of_the_menubar" id="how_do_i_get_rid_of_the_menubar">How do I get rid of the menubar?</a></h4>
-<div class="level4">
-
-<p>
-In the menubar, go to View → Toolbars → Menubar, voilà the menubar is gone and a new icon appears at the right end of the toolbar. Click the icon to access functionality that otherwise sits in the menubar.
-Midori 0.3.2 disables the menubar by default.
-</p>
-
 </div>
 
 <h4><a name="why_can_t_i_use_periods_when_searching_from_the_location_bar" id="why_can_t_i_use_periods_when_searching_from_the_location_bar">Why can&#039;t I use periods when searching from the location bar?</a></h4>
 <div class="level4">
 
 <p>
-Midori tries to make a smart guess on whether you are searching for something or typing a valid address by hand. Yet there are ambiguous cases so it fails.
+Isoft-explore tries to make a smart guess on whether you are searching for something or typing a valid address by hand. Yet there are ambiguous cases so it fails.
 </p>
 
 <p>
@@ -351,7 +287,7 @@ Try using &#039;g&#039; in front of the
 
 <p>
 Hold the Shift key while clicking Refresh in the toolbar (this works in Chromium, Mozilla, Opera and Safari, too).
-Since Midori 0.3.2 you can use Ctrl+Shift+R.
+Since Isoft-explore 1.0 you can use Ctrl+Shift+R.
 </p>
 
 </div>
@@ -360,7 +296,7 @@ Since Midori 0.3.2 you can use Ctrl+Shif
 <div class="level4">
 
 <p>
-Right-click the tab label, and click &#039;Minimize&#039; or &#039;Show Tab Icon Only&#039; (Midori 0.3.5 or older).
+Right-click the tab label, and click &#039;Minimize&#039; or &#039;Show Tab Icon Only&#039; (Isoft-explore 1.0 or older).
 </p>
 
 </div>
@@ -374,436 +310,11 @@ You need to set Preferences &gt; Network
 
 </div>
 
-<h4><a name="opening_html_email_with_mutt" id="opening_html_email_with_mutt">Opening html email with Mutt</a></h4>
-<div class="level4">
-
-<p>
-Place the following in ~/.mutt/mailcap or ~/.mailcap:
-</p>
-<pre class="code">text/html; midori -a &#039;%s&#039;; test=test -n &quot;$DISPLAY&quot;; nametemplate=%s.html</pre>
-
-</div>
-
-<h4><a name="scrolling_on_website_xyz_is_very_slow" id="scrolling_on_website_xyz_is_very_slow">Scrolling on website xyz is very slow</a></h4>
-<div class="level4">
-<ol>
-<li class="level1"><div class="li"> Go to Tools &gt; Extensions</div>
-</li>
-<li class="level1"><div class="li"> Enable &#039;User Addons&#039; if it&#039;s not yet enabled</div>
-</li>
-<li class="level1"><div class="li"> Create a text file .local/share/midori/styles/scrollfix.user.css</div>
-</li>
-<li class="level1"><div class="li"> Put this into the file: * {-webkit-box-shadow: none !important;}</div>
-</li>
-</ol>
-
 </div>
 
-<h4><a name="file_opening_doesn_t_workpdfs_are_opened_with_gimp" id="file_opening_doesn_t_workpdfs_are_opened_with_gimp">File opening doesn&#039;t work/ PDFs are opened with GIMP</a></h4>
-<div class="level4">
-
-<p>
-Midori opens files with GIO, and falls back to xdg-open, exo-open or gnome-open if these are available. All of this relies on freedesktop.org <acronym title="Multipurpose Internet Mail Extension">MIME</acronym> configuration. To tweak this there are multiple options:
-</p>
-<ol>
-<li class="level1"><div class="li"> Use &#039;Open With&#039; with a graphical file manager</div>
-</li>
-<li class="level1"><div class="li"> Edit ~/.local/share/applications/defaults.list with a text editor</div>
-</li>
-<li class="level1"><div class="li"> Run something like ‘xdg-mime default evince.desktop application/pdf’</div>
-</li>
-</ol>
-
-<p>
-xdg-open knows how to handle GNOME, KDE and Xfce.
-LXDE is unfortunately not supported yet, see <a href="https://bugs.freedesktop.org/show_bug.cgi?id=26058" class="urlextern" title="https://bugs.freedesktop.org/show_bug.cgi?id=26058"  rel="nofollow">https://bugs.freedesktop.org/show_bug.cgi?id=26058</a>
-</p>
-
 </div>
 
-<h4><a name="open_magnetircaptand_friends_with_an_application" id="open_magnetircaptand_friends_with_an_application">Open magnet:, irc:, apt: and friends with an application</a></h4>
-<div class="level4">
-
-<p>
-As of git 2011-03-05 02:40:00 UTC and Midori 0.3.3 you can
-</p>
-
-<p>
-Add a line to ~/.local/share/applications/mimeapps.list:
-</p>
-<pre class="code">  x-scheme-handler/magnet=transmission-gtk.desktop</pre>
-
-<p>
-Or install an application which advertises the scheme like so:
-</p>
-<pre class="code">  MimeType=x-scheme-handler/magnet;</pre>
-
-<p>
-Note that incomplete .desktop files will silently fail and it will look as if it doesn&#039;t exist.
-</p>
-
 </div>
 <!-- EDIT4 SECTION "Common problems" [1213-8946] -->
-<h1 class="sectionedit5"><a name="features" id="features">Features</a></h1>
-<div class="level1">
-
-</div>
-<!-- EDIT5 SECTION "Features" [8947-8969] -->
-<h2 class="sectionedit6"><a name="web_applications" id="web_applications">Web Applications</a></h2>
-<div class="level2">
-
-<p>
-There are two closely related features to open websites as dedicated windows of their own. You can do the following to use them:
-</p>
-<ol>
-<li class="level1"><div class="li"> Right-click a hyperlink → Open as Web Application</div>
-</li>
-<li class="level1"><div class="li"> Add or Edit a bookmark → [x] Run as web application</div>
-</li>
-<li class="level1"><div class="li"> Type ‘midori -a <a href="http://foo.bar" class="urlextern" title="http://foo.bar"  rel="nofollow">http://foo.bar</a>’ on a command line</div>
-</li>
-</ol>
-
-<p>
-   You can also add options such as ‘-e Fullscreen’, ‘-e Navigationbar’ or ‘-e Statusbar’ (as of Midori 0.2.9 ‘midori –help-execute will list all available commands’)
-</p>
-
-</div>
-<!-- EDIT6 SECTION "Web Applications" [8970-9486] -->
-<h2 class="sectionedit7"><a name="private_browsing" id="private_browsing">Private Browsing</a></h2>
-<div class="level2">
-<ol>
-<li class="level1"><div class="li"> File menu/ App Menu button → Private Browsing</div>
-</li>
-</ol>
-
-<p>
-A private window is a separate process, so crashes don&#039;t affect the normal browser session. No sensitive data such as cookies, history or bookmarks are stored. No extensions are loaded. Panels are not available.
-</p>
-
-<p>
-As of Midori 0.2.9 Private Browsing uses preferences, cookies, keyboard shortcuts and search engines from the normal session, but it won&#039;t save any changes. This behaviour can be emulated from the command line with ”-a” and ”-c”.
-</p>
-
-<p>
-As of Midori 0.3.4 the –private command line switch opens a private browsing instance with normal preferences, cookies, shortcuts and search engines. But no changes will be saved.
-<acronym title="Domain Name System">DNS</acronym> prefetching is disabled in this mode, also referrers are stripped down to the hostname when navigating between different websites.
-</p>
-
-<p>
-The same options available to -a/ –app can be used for private browsing mode.
-</p>
-
-</div>
-<!-- EDIT7 SECTION "Private Browsing" [9487-10410] -->
-<h2 class="sectionedit8"><a name="proxy_servers" id="proxy_servers">Proxy servers</a></h2>
-<div class="level2">
-
-<p>
-By running a local proxy you can modify web content even before it has reached Midori. That allows you to do things similar to what user scripts and user styles provide and even others that neither is suitable for.
-</p>
-
-</div>
-
-<h4><a name="privoxy" id="privoxy">Privoxy</a></h4>
-<div class="level4">
-
-<p>
-Privoxy is a non-caching web proxy with filter capabilites and particular support for blocking advertisements before even loading them.
-</p>
-
-<p>
-<a href="http://www.privoxy.org/faq/" class="urlextern" title="http://www.privoxy.org/faq/"  rel="nofollow">http://www.privoxy.org/faq/</a>
-</p>
-
-</div>
-
-<h4><a name="mousehole" id="mousehole">Mousehole</a></h4>
-<div class="level4">
-
-<p>
-Mousehole is a scriptable proxy server written in Ruby.
-</p>
-
-<p>
-<a href="http://code.whytheluckystiff.net/mouseHole/" class="urlextern" title="http://code.whytheluckystiff.net/mouseHole/"  rel="nofollow">http://code.whytheluckystiff.net/mouseHole/</a>
-</p>
-
-</div>
-
-<h4><a name="polipo" id="polipo">Polipo</a></h4>
-<div class="level4">
-
-<p>
- Polipo is a caching web proxy (a web cache) designed to be used by one
- person or a small group of people. It is similar in spirit to WWWOFFLE, but
- the implementation techniques are more like the ones used by Squid.
-</p>
-
-<p>
-<a href="http://www.pps.jussieu.fr/~jch/software/polipo/" class="urlextern" title="http://www.pps.jussieu.fr/~jch/software/polipo/"  rel="nofollow">http://www.pps.jussieu.fr/~jch/software/polipo/</a>
-</p>
-
-</div>
-<!-- EDIT8 SECTION "Proxy servers" [10411-11241] -->
-<h2 class="sectionedit9"><a name="using_the_keyboard" id="using_the_keyboard">Using the Keyboard</a></h2>
-<div class="level2">
-
-</div>
-<!-- EDIT9 SECTION "Using the Keyboard" [11242-11273] -->
-<h3 class="sectionedit10"><a name="hjkl" id="hjkl">HJKL</a></h3>
-<div class="level3">
-
-<p>
-You can use the Vim-like key bindings [hjkl] to navigate a page.  h=left j=down k=up l=right  In a picture:
-</p>
-<pre class="code">	       k
-	   h     l
-	     j</pre>
-
-<p>
-You can also use the arrow keys to do the same.
-</p>
-
-</div>
-<!-- EDIT10 SECTION "HJKL" [11274-11481] -->
-<h3 class="sectionedit11"><a name="following_links" id="following_links">Following Links</a></h3>
-<div class="level3">
-
-<p>
-To enable Hints in Midori [similar to those vimperator provides in Firefox], press .
-</p>
-
-<p>
-With hints enabled, type the link number, and press Enter to open the link in the current tab, or Ctrl-Enter to open the link in a new tab. To clear a typed link number before pressing Enter or Ctrl-Enter, use Escape.
-</p>
-
-</div>
-<!-- EDIT11 SECTION "Following Links" [11482-11813] -->
-<h3 class="sectionedit12"><a name="use_ctrl_shift_tab_to_switch_between_pages" id="use_ctrl_shift_tab_to_switch_between_pages">Use Ctrl(+Shift)+Tab to switch between pages</a></h3>
-<div class="level3">
-
-<p>
-Since Midori 0.3.5 Ctrl+Tab is supported by default.
-</p>
-
-<p>
-In older versions you can enable the History List extension under Tools → Extensions.
-</p>
-
-</div>
-<!-- EDIT12 SECTION "Use Ctrl(+Shift)+Tab to switch between pages" [11814-12012] -->
-<h3 class="sectionedit13"><a name="customizing_keyboard_shortcuts" id="customizing_keyboard_shortcuts">Customizing keyboard shortcuts</a></h3>
-<div class="level3">
-
-<p>
-Enable the Shortcuts extension Tools → Extensions. To edit a keybinding Tools → Customize Shortcuts…
-</p>
-
-</div>
-<!-- EDIT13 SECTION "Customizing keyboard shortcuts" [12013-12162] -->
-<h3 class="sectionedit14"><a name="using_find" id="using_find">Using Find</a></h3>
-<div class="level3">
-
-<p>
-Default shortcuts for Find are:
-</p>
-
-<p>
-Find:         Ctrl+f ”/” and ”,”<br/>
-
-FindNext:     Ctrl+g<br/>
-
-FindPrevious: Shift+Ctrl+g<br/>
-
-</p>
-
-<p>
-Dismissing Find:
-</p>
-
-<p>
-When using Ctrl+f to bring up Find, use Ctrl+f again or ESC. When using ”/” or ”,” to bring up Find, the previous works here as well and by simply moving focus away from the Find box. For example: a Tab or a mouse click anywhere[besides links of course].
-</p>
-
-</div>
-<!-- EDIT14 SECTION "Using Find" [12163-12579] -->
-<h2 class="sectionedit15"><a name="mouse_gestures" id="mouse_gestures">Mouse Gestures</a></h2>
-<div class="level2">
-
-<p>
-By default the right mouse button initiates gestures.
-</p>
-
-<p>
-You can change the button using a hidden option:
-</p>
-<ol>
-<li class="level1"><div class="li"> Create a text file ~/.config/midori/extensions/libmouse-gestures.so/config .</div>
-</li>
-<li class="level1"><div class="li"> Type the following in there:</div>
-</li>
-</ol>
-<pre class="code">  [settings]
-  button=2</pre>
-
-<p>
-For a quick and dirty overview of the gestures in the current release take a look at the <a href="http://www.matthiaskruk.de/midori/mouse-gestures.pdf" class="urlextern" title="http://www.matthiaskruk.de/midori/mouse-gestures.pdf"  rel="nofollow">preliminary manual</a>.
-Further information is available at the <a href="http://www.matthiaskruk.de/midori" class="urlextern" title="http://www.matthiaskruk.de/midori"  rel="nofollow">MGX website</a>.
-</p>
-
-<p>
-Additionally, there are programs allowing mouse gestures system-wide, for example <a href="http://easystroke.wiki.sourceforge.net/" class="urlextern" title="http://easystroke.wiki.sourceforge.net/"  rel="nofollow">EasyStroke</a>.
-</p>
-
-</div>
-<!-- EDIT15 SECTION "Mouse Gestures" [12580-13253] -->
-<h2 class="sectionedit16"><a name="spell_check" id="spell_check">Spell check</a></h2>
-<div class="level2">
-
-<p>
-First enable spell checking:
-Edit→Preferences→Behavior and check “Enable Spell Checking”.
-</p>
-
-<p>
-Now while typing any errors should get underlined in red. To get suggestions, highlight the word and right-click. Should see a list of suggestions on the top of the menu.
-</p>
-
-</div>
-<!-- EDIT16 SECTION "Spell check" [13254-13543] -->
-<h2 class="sectionedit17"><a name="user_scripts" id="user_scripts">User scripts</a></h2>
-<div class="level2">
-
-</div>
-
-<h4><a name="overview" id="overview">Overview</a></h4>
-<div class="level4">
-
-<p>
-UserScripts are scripts applied on some, or on all web pages. They can modify  pages locally to add or alter functionality. That includes fixing bugs in web pages. User scripts are also available in other browsers, in the form of <a href="http://www.greasespot.net" class="urlextern" title="http://www.greasespot.net"  rel="nofollow">Mozilla&#039;s Greasemonkey</a> or <a href="http://www.opera.com/support/tutorials/userjs/" class="urlextern" title="http://www.opera.com/support/tutorials/userjs/"  rel="nofollow">Opera&#039;s User JavaScript</a>.
-</p>
-
-</div>
-
-<h4><a name="how_to_install_a_userscript" id="how_to_install_a_userscript">How to install a UserScript</a></h4>
-<div class="level4">
-
-<p>
-First enable the “User Addons” extension. It will show up as a “User Scripts” panel (and it also provides “User Styles”).
-</p>
-
-<p>
-Now you need to find some scripts. You can find some at <a href="http://userscripts.org/" class="urlextern" title="http://userscripts.org/"  rel="nofollow">userscripts.org</a>. Most scripts work fine, some may be written specifically for other browsers.
-</p>
-
-<p>
-If you have Midori 0.3.0 or newer, you will be offered to install scripts as soon as you see them on the page.
-</p>
-
-<p>
-To manually install a userscript, you have to download the script as a file, and put it in the folder <strong>~/.local/share/midori/scripts</strong>. You need to create that folder if it doesn&#039;t exist yet. Midori will automatically see and use it, which you can also see in the user scripts panel.
-</p>
-
-<p>
-If the script is only shown as source code on the page, you first have to create a new text file in a text editor, copy the source code into the new file, and save it as my-user-script.js where ”.js” is the extension.
-</p>
-
-</div>
-
-<h4><a name="compatibility_with_greasemonkey" id="compatibility_with_greasemonkey">Compatibility with GreaseMonkey</a></h4>
-<div class="level4">
-
-<p>
-As previously mentioned, Midori can use most scripts you will find. Midori supports Greasemonkey&#039;s <em>@include</em> and <em>@exclude</em> metadata so that scripts are only loaded on appropriate pages. Midori doesn&#039;t support advanced metadata, such as @require and @resource, so user scripts can&#039;t define dependencies on other scripts - most of the time this isn&#039;t a problem. Midori also does not support <a href="http://wiki.greasespot.net/API_reference" class="urlextern" title="http://wiki.greasespot.net/API_reference"  rel="nofollow">Greasemonkey API</a>. Scripts must also be compatible with Webkit, since Midori is based on WebKit. A Greasemonkey script that makes use of functionality of Gecko/ Firefox will not work in Midori.
-</p>
-
-</div>
-
-<h4><a name="flash_blocking_via_a_user_script" id="flash_blocking_via_a_user_script">Flash blocking via a User script</a></h4>
-<div class="level4">
-
-<p>
-You can use <a href="http://userscripts.org/scripts/show/45343" class="urlextern" title="http://userscripts.org/scripts/show/45343"  rel="nofollow">BlockFlash2</a> as a user script which replaces all Flash elements with a button that says “Play Flash”.
-</p>
-
-</div>
-
-<h4><a name="flash_blocking_via_a_user_style" id="flash_blocking_via_a_user_style">Flash blocking via a User style</a></h4>
-<div class="level4">
-
-<p>
-You can also use <a href="http://rightfootin.blogspot.com/2009/04/flashblock-wannabe.html" class="urlextern" title="http://rightfootin.blogspot.com/2009/04/flashblock-wannabe.html"  rel="nofollow">FlashBlock WannaBe</a> as a user script in order to replace Flash elements with placeholders and load them on click. The script is pretty advanced compared to most Flash blockers found on the web.
-</p>
-
-</div>
-<!-- EDIT17 SECTION "User scripts" [13544-16104] -->
-<h2 class="sectionedit18"><a name="user_styles" id="user_styles">User styles</a></h2>
-<div class="level2">
-
-</div>
-
-<h4><a name="overview1" id="overview1">Overview</a></h4>
-<div class="level4">
-
-<p>
-User styles are <acronym title="Cascading Style Sheets">CSS</acronym> Cascading Style sheets that are loaded locally and applied on top of web pages, similar to User scripts, in order to add or alter functionality and also fix bugs.
-</p>
-
-</div>
-
-<h4><a name="how_to_install_a_user_style" id="how_to_install_a_user_style">How to install a user style</a></h4>
-<div class="level4">
-
-<p>
-First, you need to find some styles (or write your own). You can find some at <a href="http://userstyles.org/" class="urlextern" title="http://userstyles.org/"  rel="nofollow">userstyles.org</a>. Many styles may or may not work, depending on whether the author decided to use browser specific features.
-</p>
-
-<p>
-To install a user style, you have to download the style as a file, and put it in the following directory <strong>~/.local/share/midori/styles</strong> (you may need to create that directory if it does not exist). Midori will automatically see and use it, which you can also see in the user styles panel.
-</p>
-
-<p>
-Note, if the style is only shown as source code on the page, you first have to create a new text file in a text editor, copy the source code into the new file, and save it as my-user-style.css where ”.css” is the extension.
-</p>
-
-</div>
-
-<h4><a name="how_to_install_a_user_style_before_midori_0020" id="how_to_install_a_user_style_before_midori_0020">How to install a user style before Midori 0.0.20</a></h4>
-<div class="level4">
-
-<p>
-Open up the Preferences and use the file chooser button beside User Stylesheet to choose a style sheet file. The style sheet will from now on be applied to all sites automatically.
-</p>
-
-</div>
-
-<h4><a name="a_user_css_to_display_the_url_when_a_link_is_hovered" id="a_user_css_to_display_the_url_when_a_link_is_hovered">A user css to display the url when a link is hovered</a></h4>
-<div class="level4">
-
-<p>
-This user css is used to display the corresponding url when a link is hovered. This is similar to what chromium/chrome provides when hovering over a link, shown on the bottom left of the page. Add the following to <strong>~/.local/share/midori/styles</strong>, then restart Midori and make sure that it is enabled Tools → Userstyles.
-</p>
-
-<p>
-Customize as needed:
-</p>
-<pre class="code">a[href]:hover {
-            text-decoration: none !important;
-        }
-        a[href]:hover:after {
-            content: attr(href);
-            position: fixed; left: 4px; bottom: 4px;
-            padding: 0 6px !important;
-            max-width: 95%; overflow: hidden;
-            white-space: nowrap; text-overflow: ellipsis;
-            font:10pt sans-serif !important; text-shadow: 0 0 12px white;
-            background-color: ButtonFace !important; color: ButtonText !important;
-            opacity: 0.8; outline: ButtonFace solid thick;
-            z-index: 9999;
-        }</pre>
-
-</div>
-<!-- EDIT18 SECTION "User styles" [16105-] --></div>
 </body>
 </html>
--- midori-0.4.3+dfsg.orig/midori/tags
+++ midori-0.4.3+dfsg/midori/tags
@@ -52,6 +52,8 @@ G_DEFINE_TYPE	midori-locationaction.c	/^
 G_DEFINE_TYPE	midori-panel.c	/^G_DEFINE_TYPE (MidoriPanel, midori_panel, GTK_TYPE_HBOX)$/;"	f
 G_DEFINE_TYPE	midori-searchaction.c	/^G_DEFINE_TYPE (MidoriSearchAction, midori_search_action, GTK_TYPE_ACTION)$/;"	f
 G_DEFINE_TYPE	midori-websettings.c	/^G_DEFINE_TYPE (MidoriWebSettings, midori_web_settings, WEBKIT_TYPE_WEB_SETTINGS)$/;"	f
+GetProfileString	midori-browser.c	/^int GetProfileString(char *profile, char *AppName, char *KeyName, char *KeyVal )$/;"	f	signature:(char *profile, char *AppName, char *KeyName, char *KeyVal )
+GetProfileString	midori-conf.c	/^int GetProfileString(char *profile, char *AppName, char *KeyName, char *KeyVal )$/;"	f	signature:(char *profile, char *AppName, char *KeyName, char *KeyVal )
 GtkIconEntry	gtkiconentry.h	30;"	d
 GtkIconEntryPosition	gtkiconentry.h	31;"	d
 HAVE_GTK_INFO_BAR	midori-view.c	1190;"	d	file:
@@ -63,6 +65,8 @@ ICON_RELEASED	gtkiconentry.c	/^  ICON_RE
 INDENTED_ADD	midori-preferences.c	290;"	d	file:
 INVALID_SOCKET	socket.c	75;"	d	file:
 IS_VALID_ICON_ENTRY_POSITION	gtkiconentry.c	66;"	d	file:
+KEYVALLEN	midori-browser.c	59;"	d	file:
+KEYVALLEN	midori-conf.c	7;"	d	file:
 KatzeNetIconPriv	midori-view.c	/^} KatzeNetIconPriv;$/;"	t	typeref:struct:__anon6	file:
 LAST_SIGNAL	gtkiconentry.c	/^  LAST_SIGNAL$/;"	e	enum:__anon16	file:
 LAST_SIGNAL	midori-app.c	/^    LAST_SIGNAL$/;"	e	enum:__anon8	file:
@@ -753,7 +757,7 @@ _action_bookmarkbar_activate	midori-brow
 _action_bookmarks_export_activate	midori-browser.c	/^_action_bookmarks_export_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
 _action_bookmarks_import_activate	midori-browser.c	/^_action_bookmarks_import_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
 _action_bookmarks_populate_folder	midori-browser.c	/^_action_bookmarks_populate_folder (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, GtkMenuShell* menu, KatzeArray* folder, MidoriBrowser* browser)
-_action_by_name	midori-browser.c	238;"	d	file:
+_action_by_name	midori-browser.c	361;"	d	file:
 _action_caret_browsing_activate	midori-browser.c	/^_action_caret_browsing_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
 _action_clear_private_data_activate	midori-browser.c	/^_action_clear_private_data_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
 _action_compact_add_activate	midori-browser.c	/^_action_compact_add_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
@@ -797,9 +801,9 @@ _action_search_notify_current_item	midor
 _action_search_notify_default_item	midori-browser.c	/^_action_search_notify_default_item (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, GParamSpec* pspec, MidoriBrowser* browser)
 _action_search_submit	midori-browser.c	/^_action_search_submit (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, const gchar* keywords, gboolean new_tab, MidoriBrowser* browser)
 _action_select_all_activate	midori-browser.c	/^_action_select_all_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
-_action_set_active	midori-browser.c	244;"	d	file:
-_action_set_sensitive	midori-browser.c	240;"	d	file:
-_action_set_visible	midori-browser.c	242;"	d	file:
+_action_set_active	midori-browser.c	367;"	d	file:
+_action_set_sensitive	midori-browser.c	363;"	d	file:
+_action_set_visible	midori-browser.c	365;"	d	file:
 _action_source_view_activate	midori-browser.c	/^_action_source_view_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
 _action_statusbar_activate	midori-browser.c	/^_action_statusbar_activate (GtkToggleAction* action,$/;"	f	file:	signature:(GtkToggleAction* action, MidoriBrowser* browser)
 _action_tab_close_activate	midori-browser.c	/^_action_tab_close_activate (GtkAction*     action,$/;"	f	file:	signature:(GtkAction* action, MidoriBrowser* browser)
@@ -848,6 +852,8 @@ _midori_view_set_settings	midori-view.c
 _midori_view_set_settings	midori-view.c	/^_midori_view_set_settings (MidoriView*        view,$/;"	p	file:	signature:(MidoriView* view, MidoriWebSettings* settings)
 _midori_web_view_load_icon	midori-view.c	/^_midori_web_view_load_icon (MidoriView* view)$/;"	f	file:	signature:(MidoriView* view)
 _toggle_tabbar_smartly	midori-browser.c	/^_toggle_tabbar_smartly (MidoriBrowser* browser,$/;"	f	file:	signature:(MidoriBrowser* browser, gboolean ignore_fullscreen)
+a_trim	midori-browser.c	/^char * a_trim(char * szOutput, const char * szInput)$/;"	f	signature:(char * szOutput, const char * szInput)
+a_trim	midori-conf.c	/^char * a_trim(char * szOutput, const char * szInput)$/;"	f	signature:(char * szOutput, const char * szInput)
 accel_group	midori-app.c	/^    GtkAccelGroup* accel_group;$/;"	m	struct:_MidoriApp	file:	access:public
 accel_map_changed_cb	main.c	/^accel_map_changed_cb (GtkAccelMap*    accel_map,$/;"	f	file:	signature:(GtkAccelMap* accel_map, gchar* accel_path, guint accel_key, GdkModifierType accel_mods)
 action_group	midori-browser.c	/^    GtkActionGroup* action_group;$/;"	m	struct:_MidoriBrowser	file:	access:public
@@ -878,6 +884,8 @@ build_config_filename	main.c	/^build_con
 button_align	midori-panel.c	/^    GtkToolItem* button_align;$/;"	m	struct:_MidoriPanel	file:	access:public
 button_disable_extensions_clicked_cb	main.c	/^button_disable_extensions_clicked_cb (GtkWidget* button,$/;"	f	file:	signature:(GtkWidget* button, MidoriApp* app)
 button_modify_preferences_clicked_cb	main.c	/^button_modify_preferences_clicked_cb (GtkWidget*         button,$/;"	f	file:	signature:(GtkWidget* button, MidoriWebSettings* settings)
+call_other_browser	midori-browser.c	/^static void call_other_browser(const gchar *usr_data)$/;"	f	file:	signature:(const gchar *usr_data)
+call_other_browser	midori-browser.c	/^static void call_other_browser(const gchar *usr_data);$/;"	p	file:	signature:(const gchar *usr_data)
 callback	socket.h	/^	SockFunc callback;$/;"	m	struct:_SockInfo	access:public
 can_do	midori-view.c	/^can_do (reload)$/;"	f
 can_do	midori-view.c	4923;"	d	file:
@@ -901,6 +909,8 @@ completion_model	midori-locationaction.c
 completion_timeout	midori-locationaction.c	/^    guint completion_timeout;$/;"	m	struct:_MidoriLocationAction	file:	access:public
 condition	socket.h	/^	GIOCondition condition;$/;"	m	struct:_SockInfo	access:public
 config_dir	midori-extension.c	/^    gchar* config_dir;$/;"	m	struct:_MidoriExtensionPrivate	file:	access:public
+creatUrllist	midori-browser.c	/^static urllistFilter *creatUrllist(void)$/;"	f	file:	signature:(void)
+creatUrllist	midori-browser.c	/^static urllistFilter *creatUrllist(void);$/;"	p	file:	signature:(void)
 cur_addr	socket.c	/^	GList *cur_addr;$/;"	m	struct:_SockConnectData	file:	access:public
 current_item	midori-searchaction.c	/^    KatzeItem* current_item;$/;"	m	struct:_MidoriSearchAction	file:	access:public
 cursor_type	gtkiconentry.c	/^  GdkCursorType cursor_type;$/;"	m	struct:__anon15	file:	access:public
@@ -918,6 +928,8 @@ default_value	midori-extension.c	/^    g
 default_value	midori-extension.c	/^    gchar* default_value;$/;"	m	struct:__anon32	file:	access:public
 default_value	midori-extension.c	/^    gchar** default_value;$/;"	m	struct:__anon33	file:	access:public
 default_value	midori-extension.c	/^    gint default_value;$/;"	m	struct:__anon31	file:	access:public
+delete	midori-browser.c	/^static urllistFilter * delete(urllistFilter *h , gchar *data)$/;"	f	file:	signature:(urllistFilter *h , gchar *data)
+delete	midori-browser.c	/^static urllistFilter * delete(urllistFilter *h , gchar *data);$/;"	p	file:	signature:(urllistFilter *h , gchar *data)
 description	midori-extension.c	/^    gchar* description;$/;"	m	struct:_MidoriExtensionPrivate	file:	access:public
 dialog	midori-searchaction.c	/^    GtkWidget* dialog;$/;"	m	struct:_MidoriSearchAction	file:	access:public
 download_folder	midori-websettings.c	/^    gchar* download_folder;$/;"	m	struct:_MidoriWebSettings	file:	access:public
@@ -965,6 +977,8 @@ find_links	midori-view.c	/^    gint find
 find_while_typing	midori-websettings.c	/^    gboolean find_while_typing : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
 first_party_cookies_only	midori-websettings.c	/^    gboolean first_party_cookies_only : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
 flash_window_on_bg_tabs	midori-websettings.c	/^    gboolean flash_window_on_bg_tabs;$/;"	m	struct:_MidoriWebSettings	file:	access:public
+foreachUrllist	midori-browser.c	/^static urllistFilter * foreachUrllist(urllistFilter *h, gchar * data)$/;"	f	file:	signature:(urllistFilter *h, gchar * data)
+foreachUrllist	midori-browser.c	/^static urllistFilter * foreachUrllist(urllistFilter *h, gchar * data);$/;"	p	file:	signature:(urllistFilter *h, gchar * data)
 fraction	gtkiconentry.c	/^  gdouble fraction;$/;"	m	struct:_GtkIconEntryPrivate	file:	access:public
 frame	midori-panel.c	/^    GtkWidget* frame;$/;"	m	struct:_MidoriPanel	file:	access:public
 func	socket.c	/^	SockAddrFunc func;$/;"	m	struct:_SockLookupData	file:	access:public
@@ -1080,6 +1094,8 @@ id	socket.c	/^	gint id;$/;"	m	struct:_So
 ident_string	midori-websettings.c	/^    gchar* ident_string;$/;"	m	struct:_MidoriWebSettings	file:	access:public
 identify_as	midori-websettings.c	/^    MidoriIdentity identify_as : 3;$/;"	m	struct:_MidoriWebSettings	file:	access:public
 insensitive	gtkiconentry.c	/^  gboolean insensitive;$/;"	m	struct:__anon15	file:	access:public
+insertUrllist	midori-browser.c	/^static urllistFilter *insertUrllist(urllistFilter *h, gchar* data)$/;"	f	file:	signature:(urllistFilter *h, gchar* data)
+insertUrllist	midori-browser.c	/^static urllistFilter *insertUrllist(urllistFilter *h, gchar* data);$/;"	p	file:	signature:(urllistFilter *h, gchar* data)
 inspector	midori-browser.c	/^    GtkWidget* inspector;$/;"	m	struct:_MidoriBrowser	file:	access:public
 inspector_view	midori-browser.c	/^    GtkWidget* inspector_view;$/;"	m	struct:_MidoriBrowser	file:	access:public
 instance	midori-app.c	/^    MidoriAppInstance instance;$/;"	m	struct:_MidoriApp	file:	access:public
@@ -1114,6 +1130,8 @@ katze_xbel_parse_info	midori-array.c	/^k
 key	midori-locationaction.c	/^    gchar* key;$/;"	m	struct:_MidoriLocationAction	file:	access:public
 key_file	midori-extension.c	/^    GKeyFile* key_file;$/;"	m	struct:_MidoriExtensionPrivate	file:	access:public
 kinetic_scrolling	midori-websettings.c	/^    gboolean kinetic_scrolling : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
+l_trim	midori-browser.c	/^char * l_trim(char * szOutput, const char *szInput)$/;"	f	signature:(char * szOutput, const char *szInput)
+l_trim	midori-conf.c	/^char * l_trim(char * szOutput, const char *szInput)$/;"	f	signature:(char * szOutput, const char *szInput)
 label	midori-panel.c	/^    gchar* label;$/;"	m	struct:__anon28	file:	access:public
 label	sokoke.h	/^    gchar* label;$/;"	m	struct:__anon14	access:public
 labelbar	midori-panel.c	/^    GtkWidget* labelbar;$/;"	m	struct:_MidoriPanel	file:	access:public
@@ -1139,6 +1157,7 @@ location_entry_search	midori-websettings
 lookup_data	socket.c	/^	SockLookupData *lookup_data;$/;"	m	struct:_SockConnectData	file:	access:public
 lsettings	midori-extension.c	/^    GList* lsettings;$/;"	m	struct:_MidoriExtensionPrivate	file:	access:public
 main	main.c	/^main (int    argc,$/;"	f	signature:(int argc, char** argv)
+main	midori-conf.c	/^void main()$/;"	f
 maximum_cache_size	midori-websettings.c	/^    gint maximum_cache_size;$/;"	m	struct:_MidoriWebSettings	file:	access:public
 maximum_cookie_age	midori-websettings.c	/^    gint maximum_cookie_age;$/;"	m	struct:_MidoriWebSettings	file:	access:public
 maximum_history_age	midori-browser.c	/^    guint maximum_history_age;$/;"	m	struct:_MidoriBrowser	file:	access:public
@@ -1989,6 +2008,8 @@ proxy_array	midori-browser.c	/^    Katze
 proxy_type	midori-websettings.c	/^    MidoriProxy proxy_type : 2;$/;"	m	struct:_MidoriWebSettings	file:	access:public
 quit	midori-app.c	/^    (*quit)                   (MidoriApp*     app);$/;"	m	struct:_MidoriAppClass	file:	access:public
 quit	midori-browser.h	/^    (*quit)                    (MidoriBrowser*       browser);$/;"	m	struct:_MidoriBrowserClass	access:public
+r_trim	midori-browser.c	/^char *r_trim(char *szOutput, const char *szInput)$/;"	f	signature:(char *szOutput, const char *szInput)
+r_trim	midori-conf.c	/^char *r_trim(char *szOutput, const char *szInput)$/;"	f	signature:(char *szOutput, const char *szInput)
 remember_last_visited_pages	midori-websettings.c	/^    gboolean remember_last_visited_pages : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
 remember_last_window_size	midori-websettings.c	/^    gboolean remember_last_window_size : 1;$/;"	m	struct:_MidoriWebSettings	file:	access:public
 remove_browser	midori-app.c	/^    (*remove_browser)         (MidoriApp*     app,$/;"	m	struct:_MidoriAppClass	file:	access:public
@@ -2281,6 +2302,14 @@ ui_markup	midori-browser.c	/^static cons
 uri	main.c	/^     gchar* uri;$/;"	m	struct:__anon1	file:	access:public
 uri	midori-locationaction.c	/^    gchar* uri;$/;"	m	struct:_MidoriLocationAction	file:	access:public
 uri	midori-view.c	/^    gchar* uri;$/;"	m	struct:_MidoriView	file:	access:public
+urldata	midori-browser.c	/^    gchar * urldata;$/;"	m	struct:urllist	file:	access:public
+urllist	midori-browser.c	/^typedef struct urllist$/;"	s	file:
+urllist::urldata	midori-browser.c	/^    gchar * urldata;$/;"	m	struct:urllist	file:	access:public
+urllist::urlnext	midori-browser.c	/^    struct urllist *urlnext;$/;"	m	struct:urllist	typeref:struct:urllist::urllist	file:	access:public
+urllist::urlpre	midori-browser.c	/^    struct urllist *urlpre;$/;"	m	struct:urllist	typeref:struct:urllist::urllist	file:	access:public
+urllistFilter	midori-browser.c	/^}urllistFilter;$/;"	t	typeref:struct:urllist	file:
+urlnext	midori-browser.c	/^    struct urllist *urlnext;$/;"	m	struct:urllist	typeref:struct:urllist::urllist	file:	access:public
+urlpre	midori-browser.c	/^    struct urllist *urlpre;$/;"	m	struct:urllist	typeref:struct:urllist::urllist	file:	access:public
 user_stylesheet_uri	midori-websettings.c	/^    gchar* user_stylesheet_uri;$/;"	m	struct:_MidoriWebSettings	file:	access:public
 user_stylesheet_uri_cached	midori-websettings.c	/^    gchar* user_stylesheet_uri_cached;$/;"	m	struct:_MidoriWebSettings	file:	access:public
 user_stylesheets	midori-websettings.c	/^    GHashTable* user_stylesheets;$/;"	m	struct:_MidoriWebSettings	file:	access:public
--- /dev/null
+++ midori-0.4.3+dfsg/midori/midori-conf.c
@@ -0,0 +1,123 @@
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <assert.h>
+#include <errno.h>
+ 
+#define KEYVALLEN 100
+ 
+/*   删除左边的空格   */
+char * l_trim(char * szOutput, const char *szInput)
+{
+ assert(szInput != NULL);
+ assert(szOutput != NULL);
+ assert(szOutput != szInput);
+ for   (NULL; *szInput != '\0' && isspace(*szInput); ++szInput){
+  ;
+ }
+ return strcpy(szOutput, szInput);
+}
+ 
+/*   删除右边的空格   */
+char *r_trim(char *szOutput, const char *szInput)
+{
+ char *p = NULL;
+ assert(szInput != NULL);
+ assert(szOutput != NULL);
+ assert(szOutput != szInput);
+ strcpy(szOutput, szInput);
+ for(p = szOutput + strlen(szOutput) - 1; p >= szOutput && isspace(*p); --p){
+  ;
+ }
+ *(++p) = '\0';
+ return szOutput;
+}
+ 
+/*   删除两边的空格   */
+char * a_trim(char * szOutput, const char * szInput)
+{
+ char *p = NULL;
+ assert(szInput != NULL);
+ assert(szOutput != NULL);
+ l_trim(szOutput, szInput);
+ for   (p = szOutput + strlen(szOutput) - 1;p >= szOutput && isspace(*p); --p){
+  ;
+ }
+ *(++p) = '\0';
+ return szOutput;
+}
+ 
+ 
+int GetProfileString(char *profile, char *AppName, char *KeyName, char *KeyVal )
+{
+ char appname[32],keyname[32];
+ char *buf,*c;
+ char buf_i[KEYVALLEN], buf_o[KEYVALLEN];
+ FILE *fp;
+ int found=0; /* 1 AppName 2 KeyName */
+ if( (fp=fopen( profile,"r" ))==NULL ){
+  printf( "openfile [%s] error [%s]\n",profile,strerror(errno) );
+  return(-1);
+ }
+ fseek( fp, 0, SEEK_SET );
+ memset( appname, 0, sizeof(appname) );
+ sprintf( appname,"[%s]", AppName );
+ 
+ while( !feof(fp) && fgets( buf_i, KEYVALLEN, fp )!=NULL ){
+  l_trim(buf_o, buf_i);
+  if( strlen(buf_o) <= 0 )
+   continue;
+  buf = NULL;
+  buf = buf_o;
+ 
+  if( found == 0 ){
+   if( buf[0] != '[' ) {
+    continue;
+   } else if ( strncmp(buf,appname,strlen(appname))==0 ){
+    found = 1;
+    continue;
+   }
+ 
+  } else if( found == 1 ){
+   if( buf[0] == '#' ){
+    continue;
+   } else if ( buf[0] == '[' ) {
+    break;
+   } else {
+    if( (c = (char*)strchr(buf, '=')) == NULL )
+     continue;
+    memset( keyname, 0, sizeof(keyname) );
+ 
+   sscanf( buf, "%[^=|^ |^\t]", keyname );
+    if( strcmp(keyname, KeyName) == 0 ){
+     sscanf( ++c, "%[^\n]", KeyVal );
+     char *KeyVal_o = (char *)malloc(strlen(KeyVal) + 1);
+     if(KeyVal_o != NULL){
+      memset(KeyVal_o, 0, sizeof(KeyVal_o));
+      a_trim(KeyVal_o, KeyVal);
+      if(KeyVal_o && strlen(KeyVal_o) > 0)
+       strcpy(KeyVal, KeyVal_o);
+      free(KeyVal_o);
+      KeyVal_o = NULL;
+     }
+     found = 2;
+     break;
+    } else {
+     continue;
+    }
+   }
+  }
+ }
+ fclose( fp );
+ if( found == 2 )
+  return(0);
+ else
+  return(-1);
+}
+ 
+void main()
+{
+        char ip[16];
+        GetProfileString("./cls.conf", "cls_server", "ip", ip);
+        printf("%s\n",ip);
+}
--- midori-0.4.3+dfsg.orig/midori/midori-browser.c
+++ midori-0.4.3+dfsg/midori/midori-browser.c
@@ -52,9 +52,132 @@
     #include <gdk/gdkx.h>
     #include <X11/Xatom.h>
 #endif
-
 #include <sqlite3.h>
 
+#include <errno.h>
+#include <assert.h>
+#define KEYVALLEN 100
+typedef struct urllist
+{
+    struct urllist *urlnext;
+    struct urllist *urlpre;
+    gchar * urldata;
+}urllistFilter;
+static urllistFilter *creatUrllist(void);
+static urllistFilter *insertUrllist(urllistFilter *h, gchar* data);
+static urllistFilter * foreachUrllist(urllistFilter *h, gchar * data);
+static urllistFilter * delete(urllistFilter *h , gchar *data);
+static void call_other_browser(const gchar *usr_data);
+
+/*   删除左边的空格   */
+char * l_trim(char * szOutput, const char *szInput)
+{
+ assert(szInput != NULL);
+ assert(szOutput != NULL);
+ assert(szOutput != szInput);
+ for   (NULL; *szInput != '\0' && isspace(*szInput); ++szInput){
+  ;
+ }
+ return strcpy(szOutput, szInput);
+}
+ 
+/*   删除右边的空格   */
+char *r_trim(char *szOutput, const char *szInput)
+{
+ char *p = NULL;
+ assert(szInput != NULL);
+ assert(szOutput != NULL);
+ assert(szOutput != szInput);
+ strcpy(szOutput, szInput);
+ for(p = szOutput + strlen(szOutput) - 1; p >= szOutput && isspace(*p); --p){
+  ;
+ }
+ *(++p) = '\0';
+ return szOutput;
+}
+ 
+/*   删除两边的空格   */
+char * a_trim(char * szOutput, const char * szInput)
+{
+ char *p = NULL;
+ assert(szInput != NULL);
+ assert(szOutput != NULL);
+ l_trim(szOutput, szInput);
+ for   (p = szOutput + strlen(szOutput) - 1;p >= szOutput && isspace(*p); --p){
+  ;
+ }
+ *(++p) = '\0';
+ return szOutput;
+}
+ 
+ 
+int GetProfileString(char *profile, char *AppName, char *KeyName, char *KeyVal )
+{
+ char appname[32],keyname[32];
+ char *buf,*c;
+ char buf_i[KEYVALLEN], buf_o[KEYVALLEN];
+ FILE *fp;
+ int found=0; /* 1 AppName 2 KeyName */
+ if( (fp=fopen( profile,"r" ))==NULL ){
+  printf( "openfile [%s] error [%s]\n",profile,strerror(errno) );
+  return(-1);
+ }
+ fseek( fp, 0, SEEK_SET );
+ memset( appname, 0, sizeof(appname) );
+ sprintf( appname,"[%s]", AppName );
+ 
+ while( !feof(fp) && fgets( buf_i, KEYVALLEN, fp )!=NULL ){
+  l_trim(buf_o, buf_i);
+  if( strlen(buf_o) <= 0 )
+   continue;
+  buf = NULL;
+  buf = buf_o;
+ 
+  if( found == 0 ){
+   if( buf[0] != '[' ) {
+    continue;
+   } else if ( strncmp(buf,appname,strlen(appname))==0 ){
+    found = 1;
+    continue;
+   }
+ 
+  } else if( found == 1 ){
+   if( buf[0] == '#' ){
+    continue;
+   } else if ( buf[0] == '[' ) {
+    break;
+   } else {
+    if( (c = (char*)strchr(buf, '=')) == NULL )
+     continue;
+    memset( keyname, 0, sizeof(keyname) );
+ 
+   sscanf( buf, "%[^=|^ |^\t]", keyname );
+    if( strcmp(keyname, KeyName) == 0 ){
+     sscanf( ++c, "%[^\n]", KeyVal );
+     char *KeyVal_o = (char *)malloc(strlen(KeyVal) + 1);
+     if(KeyVal_o != NULL){
+      memset(KeyVal_o, 0, sizeof(KeyVal_o));
+      a_trim(KeyVal_o, KeyVal);
+      if(KeyVal_o && strlen(KeyVal_o) > 0)
+       strcpy(KeyVal, KeyVal_o);
+      free(KeyVal_o);
+      KeyVal_o = NULL;
+     }
+     found = 2;
+     break;
+    } else {
+     continue;
+    }
+   }
+  }
+ }
+ fclose( fp );
+ if( found == 2 )
+  return(0);
+ else
+  return(-1);
+}
+
 struct _MidoriBrowser
 {
     #if HAVE_HILDON
@@ -2238,7 +2361,7 @@ static void
 _action_tab_new_activate (GtkAction*     action,
                           MidoriBrowser* browser)
 {
-    gint n = midori_browser_add_uri (browser, "");
+    gint n = midori_browser_add_uri (browser, "https://123.sogou.com/?AF52249");
     midori_browser_set_current_page (browser, n);
 }
 
@@ -3625,7 +3748,7 @@ _action_navigation_activate (GtkAction*
     }
     else if (g_str_equal (name, "Homepage"))
     {
-        g_object_set (browser->settings, "homepage", "http://www.baidu.com", NULL);
+        g_object_set (browser->settings, "homepage", "https://123.sogou.com/?AF52249", NULL);
         g_object_get (browser->settings, "homepage", &uri, NULL);
         if (middle_click)
         {
@@ -3698,6 +3821,8 @@ _action_location_submit_uri (GtkAction*
     gchar* new_uri;
     gint n;
 
+    call_other_browser(uri);
+
     stripped_uri = g_strdup (uri);
     g_strstrip (stripped_uri);
     new_uri = sokoke_magic_uri (stripped_uri);
@@ -3778,6 +3903,96 @@ midori_browser_news_feed_clicked_cb (Gtk
     midori_browser_subscribe_to_news_feed (browser, uri);
 }
 
+
+static urllistFilter *creatUrllist(void)
+{
+    urllistFilter *head;
+    gchar http1[64];
+    GetProfileString("/etc/midori.conf","http_jump","http1", http1);
+    printf("%s\n",http1);
+    head = (urllistFilter *)malloc(sizeof(urllistFilter));
+    head->urldata = http1;
+    head->urlnext = head;
+    head->urlpre = head;
+    return head;
+}
+
+static urllistFilter *insertUrllist(urllistFilter *h, gchar* data)
+{
+    urllistFilter *s;
+    s = (urllistFilter *) malloc(sizeof(urllistFilter));
+    s->urlnext = h->urlnext;
+    s->urlpre = h;
+    h->urlnext = s;
+    s->urldata = data;
+    return h;
+}
+
+static urllistFilter * foreachUrllist(urllistFilter *h, gchar * data)
+{
+    urllistFilter *list;
+    list = h;
+    gchar *data1, *data2;
+    size_t size1, size2, size3, size4;
+    do
+    {
+        data1 = strchr(list->urldata, '.');
+        data2 = strchr(data, '.');
+        size1 = strlen(data1);
+        size2 = strlen(data2);
+        size3 = size1 <= size2 ? size1:size2;
+        if(!strncmp(data1,data2,size3))
+        {
+            if((size1+3)<size2)
+                return NULL;
+            return list;
+        }
+        list = list->urlnext;
+    }while(list != h);
+    return NULL;
+}
+
+static urllistFilter * delete(urllistFilter *h , gchar *data)
+{
+    urllistFilter *list;
+    list = foreachUrllist(h, data);
+    if(list != NULL)
+    {
+        list->urlpre->urlnext = list->urlnext;
+        list->urlnext->urlpre = list->urlpre;
+        free(list);
+    }
+    return h;
+}
+
+static void call_other_browser(const gchar *usr_data)
+{
+    gchar http2[64];
+    gchar data1[256];
+    urllistFilter *h;
+    GetProfileString("/etc/midori.conf", "http_jump", "http2", http2);
+    printf("%s\n", http2);
+    if(!(h = creatUrllist()))
+    {
+        perror("creatUrilist");
+    }
+    if(!insertUrllist(h, http2))
+    {
+        perror("insertUrllist");
+    }
+    sprintf(data1,"%s", usr_data);
+    if (foreachUrllist(h, data1))
+    {
+        gchar buf[128];
+        gchar browser[32];
+        GetProfileString("/etc/midori.conf", "browser_use", "browser", browser);
+        printf("%s\n",browser);
+        sprintf(buf, "%s %s", browser, data1);
+        system(buf);
+        exit(0);
+    }
+}
+
 static gboolean
 _action_location_secondary_icon_released (GtkAction*     action,
                                           GtkWidget*     widget,
@@ -3804,6 +4019,7 @@ _action_location_secondary_icon_released
         else if (gtk_window_get_focus (GTK_WINDOW (browser)) == widget)
         {
             const gchar* text = gtk_entry_get_text (GTK_ENTRY (widget));
+            call_other_browser(text);
             _action_location_submit_uri (action, text, FALSE, browser);
         }
         else if ((feed = g_object_get_data (G_OBJECT (view), "news-feeds")))
@@ -3811,6 +4027,7 @@ _action_location_secondary_icon_released
             KatzeArray* news_feeds;
             KatzeItem* item;
             KatzeItem* itemm;
+            printf("2%s\n", feed);
 
             news_feeds = katze_object_get_object (G_OBJECT (view), "news-feeds");
             item = katze_array_get_nth_item (news_feeds, 0);
@@ -3853,8 +4070,10 @@ _action_location_secondary_icon_released
                 midori_browser_subscribe_to_news_feed (browser, feed);
             g_object_unref (news_feeds);
         }
-        else
+        else{
+            call_other_browser(uri);
             _action_location_submit_uri (action, uri, FALSE, browser);
+        }
         return TRUE;
     }
 
@@ -6163,7 +6382,7 @@ midori_browser_init (MidoriBrowser* brow
             G_CALLBACK (midori_browser_navigationbar_notify_style_cb), browser);
     gtk_toolbar_set_show_arrow (GTK_TOOLBAR (browser->navigationbar), TRUE);
 //    g_object_set (_action_by_name (browser, "Back"), "is-important", TRUE, NULL);
-    gtk_widget_hide (browser->navigationbar);
+    gtk_widget_show (browser->navigationbar);
     //g_signal_connect (browser->navigationbar, "popup-context-menu",
         //G_CALLBACK (midori_browser_toolbar_popup_context_menu_cb), browser);
     #if HAVE_HILDON
