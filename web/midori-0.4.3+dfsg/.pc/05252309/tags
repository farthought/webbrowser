!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ABI	waf-modules/wafadmin/Constants.py	/^ABI=7$/;"	v
ACTIVATE	midori/midori-extension.c	/^    ACTIVATE,$/;"	e	enum:__anon74	file:
ACTIVATE_ACTION	midori/midori-browser.c	/^    ACTIVATE_ACTION,$/;"	e	enum:__anon46	file:
ACTIVATE_ACTION	midori/midori-view.c	/^    ACTIVATE_ACTION,$/;"	e	enum:__anon44	file:
ACTIVATE_ITEM	katze/katze-arrayaction.c	/^    ACTIVATE_ITEM,$/;"	e	enum:__anon37	file:
ACTIVATE_ITEM_ALT	katze/katze-arrayaction.c	/^    ACTIVATE_ITEM_ALT,$/;"	e	enum:__anon37	file:
ACTIVE_CHANGED	midori/midori-locationaction.c	/^    ACTIVE_CHANGED,$/;"	e	enum:__anon49	file:
ADBLOCK_FILTER_IS_SET	extensions/adblock.c	29;"	d	file:
ADBLOCK_FILTER_SET	extensions/adblock.c	27;"	d	file:
ADBLOCK_FILTER_VALID	extensions/adblock.c	24;"	d	file:
ADDONS	extensions/addons.c	37;"	d	file:
ADDONS_CLASS	extensions/addons.c	39;"	d	file:
ADDONS_GET_CLASS	extensions/addons.c	45;"	d	file:
ADDONS_TYPE	extensions/addons.c	35;"	d	file:
ADDONS_USER_SCRIPTS	extensions/addons.c	/^    ADDONS_USER_SCRIPTS,$/;"	e	enum:__anon18	file:
ADDONS_USER_STYLES	extensions/addons.c	/^    ADDONS_USER_STYLES$/;"	e	enum:__anon18	file:
ADDON_NONE	extensions/addons.c	/^    ADDON_NONE,$/;"	e	enum:__anon18	file:
ADD_BOOKMARK	midori/midori-view.c	/^    ADD_BOOKMARK,$/;"	e	enum:__anon44	file:
ADD_BROWSER	midori/midori-app.c	/^    ADD_BROWSER,$/;"	e	enum:__anon47	file:
ADD_DOWNLOAD	midori/midori-browser.c	/^    ADD_DOWNLOAD,$/;"	e	enum:__anon46	file:
ADD_FEED	extensions/feed-panel/feed-panel.c	/^    ADD_FEED,$/;"	e	enum:__anon14	file:
ADD_ITEM	katze/katze-array.c	/^    ADD_ITEM,$/;"	e	enum:__anon39	file:
ADD_SPEED_DIAL	midori/midori-view.c	/^    ADD_SPEED_DIAL,$/;"	e	enum:__anon44	file:
ADD_TAB	midori/midori-browser.c	/^    ADD_TAB,$/;"	e	enum:__anon46	file:
ALL	waf-modules/wafadmin/Tools/ccroot.py	/^	ALL=[ULTRADEBUG,DEBUG,RELEASE,OPTIMIZED,CUSTOM]$/;"	v	class:DEBUG_LEVELS
APPNAME	waf-modules/wafadmin/Constants.py	/^APPNAME='APPNAME'$/;"	v
AR	_build_/c4che/default.cache.py	/^AR = '\/usr\/bin\/ar'$/;"	v
ARFLAGS	_build_/c4che/default.cache.py	/^ARFLAGS = 'rcs'$/;"	v
ASK_LATER	waf-modules/wafadmin/Constants.py	/^ASK_LATER=-1$/;"	v
ATTACH_INSPECTOR	midori/midori-view.c	/^    ATTACH_INSPECTOR,$/;"	e	enum:__anon44	file:
AddonElement	extensions/addons.c	/^struct AddonElement$/;"	s	file:
Addons	extensions/addons.c	/^typedef struct _Addons                Addons;$/;"	t	typeref:struct:_Addons	file:
AddonsClass	extensions/addons.c	/^typedef struct _AddonsClass           AddonsClass;$/;"	t	typeref:struct:_AddonsClass	file:
AddonsKind	extensions/addons.c	/^} AddonsKind;$/;"	t	typeref:enum:__anon18	file:
AddonsList	extensions/addons.c	/^struct AddonsList$/;"	s	file:
AnsiTerm	waf-modules/wafadmin/ansiterm.py	/^	class AnsiTerm(object):$/;"	c
AutoSuggestControl	data/autosuggestcontrol.js	/^function AutoSuggestControl(oTextbox \/*:HTMLInputElement*\/,$/;"	c
AutoSuggestControl	debian/midori/usr/share/midori/res/autosuggestcontrol.js	/^function AutoSuggestControl(oTextbox \/*:HTMLInputElement*\/,$/;"	c
AutoSuggestControl	debian/tmp/usr/share/midori/res/autosuggestcontrol.js	/^function AutoSuggestControl(oTextbox \/*:HTMLInputElement*\/,$/;"	c
AutoSuggestControl.autosuggest	data/autosuggestcontrol.js	/^AutoSuggestControl.prototype.autosuggest = function (aSuggestions \/*:Array*\/) {$/;"	m
AutoSuggestControl.autosuggest	debian/midori/usr/share/midori/res/autosuggestcontrol.js	/^AutoSuggestControl.prototype.autosuggest = function (aSuggestions \/*:Array*\/) {$/;"	m
AutoSuggestControl.autosuggest	debian/tmp/usr/share/midori/res/autosuggestcontrol.js	/^AutoSuggestControl.prototype.autosuggest = function (aSuggestions \/*:Array*\/) {$/;"	m
AutoSuggestControl.createDropDown	data/autosuggestcontrol.js	/^AutoSuggestControl.prototype.createDropDown = function () {$/;"	m
AutoSuggestControl.createDropDown	debian/midori/usr/share/midori/res/autosuggestcontrol.js	/^AutoSuggestControl.prototype.createDropDown = function () {$/;"	m
AutoSuggestControl.createDropDown	debian/tmp/usr/share/midori/res/autosuggestcontrol.js	/^AutoSuggestControl.prototype.createDropDown = function () {$/;"	m
AutoSuggestControl.getLeft	data/autosuggestcontrol.js	/^AutoSuggestControl.prototype.getLeft = function () \/*:int*\/ {$/;"	m
AutoSuggestControl.getLeft	debian/midori/usr/share/midori/res/autosuggestcontrol.js	/^AutoSuggestControl.prototype.getLeft = function () \/*:int*\/ {$/;"	m
AutoSuggestControl.getLeft	debian/tmp/usr/share/midori/res/autosuggestcontrol.js	/^AutoSuggestControl.prototype.getLeft = function () \/*:int*\/ {$/;"	m
AutoSuggestControl.getTop	data/autosuggestcontrol.js	/^AutoSuggestControl.prototype.getTop = function () \/*:int*\/ {$/;"	m
AutoSuggestControl.getTop	debian/midori/usr/share/midori/res/autosuggestcontrol.js	/^AutoSuggestControl.prototype.getTop = function () \/*:int*\/ {$/;"	m
AutoSuggestControl.getTop	debian/tmp/usr/share/midori/res/autosuggestcontrol.js	/^AutoSuggestControl.prototype.getTop = function () \/*:int*\/ {$/;"	m
AutoSuggestControl.handleKeyDown	data/autosuggestcontrol.js	/^AutoSuggestControl.prototype.handleKeyDown = function (oEvent \/*:Event*\/) {$/;"	m
AutoSuggestControl.handleKeyDown	debian/midori/usr/share/midori/res/autosuggestcontrol.js	/^AutoSuggestControl.prototype.handleKeyDown = function (oEvent \/*:Event*\/) {$/;"	m
AutoSuggestControl.handleKeyDown	debian/tmp/usr/share/midori/res/autosuggestcontrol.js	/^AutoSuggestControl.prototype.handleKeyDown = function (oEvent \/*:Event*\/) {$/;"	m
AutoSuggestControl.handleKeyUp	data/autosuggestcontrol.js	/^AutoSuggestControl.prototype.handleKeyUp = function (oEvent \/*:Event*\/) {$/;"	m
AutoSuggestControl.handleKeyUp	debian/midori/usr/share/midori/res/autosuggestcontrol.js	/^AutoSuggestControl.prototype.handleKeyUp = function (oEvent \/*:Event*\/) {$/;"	m
AutoSuggestControl.handleKeyUp	debian/tmp/usr/share/midori/res/autosuggestcontrol.js	/^AutoSuggestControl.prototype.handleKeyUp = function (oEvent \/*:Event*\/) {$/;"	m
AutoSuggestControl.hideSuggestions	data/autosuggestcontrol.js	/^AutoSuggestControl.prototype.hideSuggestions = function () {$/;"	m
AutoSuggestControl.hideSuggestions	debian/midori/usr/share/midori/res/autosuggestcontrol.js	/^AutoSuggestControl.prototype.hideSuggestions = function () {$/;"	m
AutoSuggestControl.hideSuggestions	debian/tmp/usr/share/midori/res/autosuggestcontrol.js	/^AutoSuggestControl.prototype.hideSuggestions = function () {$/;"	m
AutoSuggestControl.highlightSuggestion	data/autosuggestcontrol.js	/^AutoSuggestControl.prototype.highlightSuggestion = function (oSuggestionNode) {$/;"	m
AutoSuggestControl.highlightSuggestion	debian/midori/usr/share/midori/res/autosuggestcontrol.js	/^AutoSuggestControl.prototype.highlightSuggestion = function (oSuggestionNode) {$/;"	m
AutoSuggestControl.highlightSuggestion	debian/tmp/usr/share/midori/res/autosuggestcontrol.js	/^AutoSuggestControl.prototype.highlightSuggestion = function (oSuggestionNode) {$/;"	m
AutoSuggestControl.nextSuggestion	data/autosuggestcontrol.js	/^AutoSuggestControl.prototype.nextSuggestion = function () {$/;"	m
AutoSuggestControl.nextSuggestion	debian/midori/usr/share/midori/res/autosuggestcontrol.js	/^AutoSuggestControl.prototype.nextSuggestion = function () {$/;"	m
AutoSuggestControl.nextSuggestion	debian/tmp/usr/share/midori/res/autosuggestcontrol.js	/^AutoSuggestControl.prototype.nextSuggestion = function () {$/;"	m
AutoSuggestControl.previousSuggestion	data/autosuggestcontrol.js	/^AutoSuggestControl.prototype.previousSuggestion = function () {$/;"	m
AutoSuggestControl.previousSuggestion	debian/midori/usr/share/midori/res/autosuggestcontrol.js	/^AutoSuggestControl.prototype.previousSuggestion = function () {$/;"	m
AutoSuggestControl.previousSuggestion	debian/tmp/usr/share/midori/res/autosuggestcontrol.js	/^AutoSuggestControl.prototype.previousSuggestion = function () {$/;"	m
AutoSuggestControl.showSuggestions	data/autosuggestcontrol.js	/^AutoSuggestControl.prototype.showSuggestions = function (aSuggestions \/*:Array*\/) {$/;"	m
AutoSuggestControl.showSuggestions	debian/midori/usr/share/midori/res/autosuggestcontrol.js	/^AutoSuggestControl.prototype.showSuggestions = function (aSuggestions \/*:Array*\/) {$/;"	m
AutoSuggestControl.showSuggestions	debian/tmp/usr/share/midori/res/autosuggestcontrol.js	/^AutoSuggestControl.prototype.showSuggestions = function (aSuggestions \/*:Array*\/) {$/;"	m
AutoSuggestControl.this.textbox	data/autosuggestcontrol.js	/^    this.textbox.onkeyup = function (oEvent) {$/;"	m
AutoSuggestControl.this.textbox	debian/midori/usr/share/midori/res/autosuggestcontrol.js	/^    this.textbox.onkeyup = function (oEvent) {$/;"	m
AutoSuggestControl.this.textbox	debian/tmp/usr/share/midori/res/autosuggestcontrol.js	/^    this.textbox.onkeyup = function (oEvent) {$/;"	m
BACKGROUND_COL	midori/midori-locationaction.c	/^    BACKGROUND_COL,$/;"	e	enum:__anon50	file:
BINDIR	_build_/c4che/default.cache.py	/^BINDIR = '\/usr\/bin'$/;"	v
BLDDIR	waf-modules/wafadmin/Constants.py	/^BLDDIR='blddir'$/;"	v
BOOKMARK_FILE	midori/main.c	48;"	d	file:
BOOKMARK_FILE	midori/main.c	50;"	d	file:
BREAK	waf-modules/wafadmin/Constants.py	/^BREAK="break"$/;"	v
BUFFSIZE	midori/socket.c	67;"	d	file:
BUILD	waf-modules/wafadmin/Node.py	/^BUILD=3$/;"	v
Block1Data	_build_/default/extensions/history-list.c	/^typedef struct _Block1Data Block1Data;$/;"	t	typeref:struct:_Block1Data	file:
Block2Data	_build_/default/extensions/history-list.c	/^typedef struct _Block2Data Block2Data;$/;"	t	typeref:struct:_Block2Data	file:
BuildContext	waf-modules/wafadmin/Build.py	/^class BuildContext(Utils.Context):$/;"	c
BuildError	waf-modules/wafadmin/Build.py	/^class BuildError(Utils.WafError):$/;"	c
C1	waf	/^C1='#)'$/;"	v
C1	waf-unpacked	/^C1='#*'$/;"	v
C2	waf	/^C2='#%'$/;"	v
C2	waf-unpacked	/^C2='#%'$/;"	v
CACHE_DIR	waf-modules/wafadmin/Constants.py	/^CACHE_DIR='c4che'$/;"	v
CACHE_SUFFIX	waf-modules/wafadmin/Constants.py	/^CACHE_SUFFIX='.cache.py'$/;"	v
CC	_build_/c4che/default.cache.py	/^CC = ['\/usr\/bin\/gcc']$/;"	v
CCDEFINES_ST	_build_/c4che/default.cache.py	/^CCDEFINES_ST = '-D%s'$/;"	v
CCFLAGS	debian/rules	/^export CCFLAGS=$(CFLAGS)$/;"	m
CCFLAGS_DEBUG	_build_/c4che/default.cache.py	/^CCFLAGS_DEBUG = ['-g']$/;"	v
CCFLAGS_GIO	_build_/c4che/default.cache.py	/^CCFLAGS_GIO = ['-pthread']$/;"	v
CCFLAGS_GMODULE	_build_/c4che/default.cache.py	/^CCFLAGS_GMODULE = ['-pthread']$/;"	v
CCFLAGS_GTHREAD	_build_/c4che/default.cache.py	/^CCFLAGS_GTHREAD = ['-pthread']$/;"	v
CCFLAGS_GTK	_build_/c4che/default.cache.py	/^CCFLAGS_GTK = ['-pthread']$/;"	v
CCFLAGS_LIBNOTIFY	_build_/c4che/default.cache.py	/^CCFLAGS_LIBNOTIFY = ['-pthread']$/;"	v
CCFLAGS_LIBSOUP	_build_/c4che/default.cache.py	/^CCFLAGS_LIBSOUP = ['-pthread']$/;"	v
CCFLAGS_LIBSOUP_2_29_3	_build_/c4che/default.cache.py	/^CCFLAGS_LIBSOUP_2_29_3 = ['-pthread']$/;"	v
CCFLAGS_LIBSOUP_2_29_91	_build_/c4che/default.cache.py	/^CCFLAGS_LIBSOUP_2_29_91 = ['-pthread']$/;"	v
CCFLAGS_LIBSOUP_2_37_1	_build_/c4che/default.cache.py	/^CCFLAGS_LIBSOUP_2_37_1 = ['-pthread']$/;"	v
CCFLAGS_MACBUNDLE	_build_/c4che/default.cache.py	/^CCFLAGS_MACBUNDLE = ['-fPIC']$/;"	v
CCFLAGS_RELEASE	_build_/c4che/default.cache.py	/^CCFLAGS_RELEASE = ['-O2']$/;"	v
CCFLAGS_UNIQUE	_build_/c4che/default.cache.py	/^CCFLAGS_UNIQUE = ['-pthread']$/;"	v
CCFLAGS_WEBKIT	_build_/c4che/default.cache.py	/^CCFLAGS_WEBKIT = ['-pthread']$/;"	v
CCLNK_SRC_F	_build_/c4che/default.cache.py	/^CCLNK_SRC_F = ''$/;"	v
CCLNK_TGT_F	_build_/c4che/default.cache.py	/^CCLNK_TGT_F = ['-o', '']$/;"	v
CC_NAME	_build_/c4che/default.cache.py	/^CC_NAME = 'gcc'$/;"	v
CC_SRC_F	_build_/c4che/default.cache.py	/^CC_SRC_F = ''$/;"	v
CC_TGT_F	_build_/c4che/default.cache.py	/^CC_TGT_F = ['-c', '-o', '']$/;"	v
CC_VERSION	_build_/c4che/default.cache.py	/^CC_VERSION = ('4', '7', '3')$/;"	v
CFG_FILES	waf-modules/wafadmin/Constants.py	/^CFG_FILES='cfg_files'$/;"	v
CFLAGS	debian/rules	/^CFLAGS=$(shell dpkg-buildflags --get CFLAGS)$/;"	m
CHAR	waf-modules/wafadmin/Tools/preproc.py	/^CHAR='c'$/;"	v
CLEAR	katze/katze-array.c	/^    CLEAR,$/;"	e	enum:__anon39	file:
CLOSE	midori/midori-panel.c	/^    CLOSE,$/;"	e	enum:__anon66	file:
CMD	debian/rules	/^CMD=$(shell echo $@ | sed 's\/override_\/\/')$/;"	m
CMPathWalkFunc	extensions/cookie-manager/cookie-manager-page.c	/^typedef void (*CMPathWalkFunc) (GtkTreePath *path);$/;"	t	file:
CM_EMPTY_LABEL_TEXT	extensions/cookie-manager/cookie-manager-page.c	21;"	d	file:
COL_EXPIRY	katze/katze-http-cookies-sqlite.c	/^    COL_EXPIRY,$/;"	e	enum:__anon25	file:
COL_HOST	katze/katze-http-cookies-sqlite.c	/^    COL_HOST,$/;"	e	enum:__anon25	file:
COL_HTTP_ONLY	katze/katze-http-cookies-sqlite.c	/^    COL_HTTP_ONLY,$/;"	e	enum:__anon25	file:
COL_ID	katze/katze-http-cookies-sqlite.c	/^    COL_ID,$/;"	e	enum:__anon25	file:
COL_LAST_ACCESS	katze/katze-http-cookies-sqlite.c	/^    COL_LAST_ACCESS,$/;"	e	enum:__anon25	file:
COL_NAME	katze/katze-http-cookies-sqlite.c	/^    COL_NAME,$/;"	e	enum:__anon25	file:
COL_PATH	katze/katze-http-cookies-sqlite.c	/^    COL_PATH,$/;"	e	enum:__anon25	file:
COL_SECURE	katze/katze-http-cookies-sqlite.c	/^    COL_SECURE,$/;"	e	enum:__anon25	file:
COL_VALUE	katze/katze-http-cookies-sqlite.c	/^    COL_VALUE,$/;"	e	enum:__anon25	file:
COMPILER_CC	_build_/c4che/default.cache.py	/^COMPILER_CC = 'gcc'$/;"	v
COMPLETION_DELAY	midori/midori-locationaction.c	28;"	d	file:
COMPLETION_DELAY	panels/midori-bookmarks.c	26;"	d	file:
COMPLETION_DELAY	panels/midori-history.c	25;"	d	file:
CONFIG_FILE	debian/rules	/^CONFIG_FILE=debian\/config\/$(DISTRO).h$/;"	m
CONN_ESTABLISHED	midori/socket.h	/^	CONN_ESTABLISHED,$/;"	e	enum:__anon65
CONN_FAILED	midori/socket.h	/^	CONN_FAILED$/;"	e	enum:__anon65
CONN_LOOKUPFAILED	midori/socket.h	/^	CONN_LOOKUPFAILED,$/;"	e	enum:__anon65
CONN_LOOKUPSUCCESS	midori/socket.h	/^	CONN_LOOKUPSUCCESS,$/;"	e	enum:__anon65
CONN_READY	midori/socket.h	/^	CONN_READY,$/;"	e	enum:__anon65
CONSOLE_CURSOR_INFO	waf-modules/wafadmin/ansiterm.py	/^	class CONSOLE_CURSOR_INFO(Structure):$/;"	c
CONSOLE_MESSAGE	midori/midori-view.c	/^    CONSOLE_MESSAGE,$/;"	e	enum:__anon44	file:
CONSOLE_SCREEN_BUFFER_INFO	waf-modules/wafadmin/ansiterm.py	/^	class CONSOLE_SCREEN_BUFFER_INFO(Structure):$/;"	c
CONTINUE	waf-modules/wafadmin/Constants.py	/^CONTINUE="continue"$/;"	v
COOKIES_CHANGED	extensions/cookie-manager/cookie-manager.c	/^	COOKIES_CHANGED,$/;"	e	enum:__anon22	file:
COOKIE_MANAGER	extensions/cookie-manager/cookie-manager.h	30;"	d
COOKIE_MANAGER_CLASS	extensions/cookie-manager/cookie-manager.h	32;"	d
COOKIE_MANAGER_COL_COOKIE	extensions/cookie-manager/cookie-manager.h	/^	COOKIE_MANAGER_COL_COOKIE,$/;"	e	enum:__anon21
COOKIE_MANAGER_COL_NAME	extensions/cookie-manager/cookie-manager.h	/^	COOKIE_MANAGER_COL_NAME,$/;"	e	enum:__anon21
COOKIE_MANAGER_COL_VISIBLE	extensions/cookie-manager/cookie-manager.h	/^	COOKIE_MANAGER_COL_VISIBLE,$/;"	e	enum:__anon21
COOKIE_MANAGER_N_COLUMNS	extensions/cookie-manager/cookie-manager.h	/^	COOKIE_MANAGER_N_COLUMNS$/;"	e	enum:__anon21
COOKIE_MANAGER_PAGE	extensions/cookie-manager/cookie-manager-page.h	18;"	d
COOKIE_MANAGER_PAGE_CLASS	extensions/cookie-manager/cookie-manager-page.h	20;"	d
COOKIE_MANAGER_PAGE_TYPE	extensions/cookie-manager/cookie-manager-page.h	17;"	d
COOKIE_MANAGER_TYPE	extensions/cookie-manager/cookie-manager.h	29;"	d
COORD	waf-modules/wafadmin/ansiterm.py	/^	class COORD(Structure):$/;"	c
CPP	_build_/c4che/default.cache.py	/^CPP = '\/usr\/bin\/cpp'$/;"	v
CPPPATH_GIO	_build_/c4che/default.cache.py	/^CPPPATH_GIO = ['\/usr\/include\/glib-2.0', '\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include']$/;"	v
CPPPATH_GMODULE	_build_/c4che/default.cache.py	/^CPPPATH_GMODULE = ['\/usr\/include\/glib-2.0', '\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include']$/;"	v
CPPPATH_GOBJECT	_build_/c4che/default.cache.py	/^CPPPATH_GOBJECT = ['\/usr\/include\/glib-2.0', '\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include']$/;"	v
CPPPATH_GTHREAD	_build_/c4che/default.cache.py	/^CPPPATH_GTHREAD = ['\/usr\/include\/glib-2.0', '\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include']$/;"	v
CPPPATH_GTK	_build_/c4che/default.cache.py	/^CPPPATH_GTK = ['\/usr\/include\/gtk-2.0', '\/usr\/lib\/i386-linux-gnu\/gtk-2.0\/include', '\/usr\/include\/atk-1.0', '\/usr\/include\/cairo', '\/usr\/include\/gdk-pixbuf-2.0', '\/usr\/include\/pango-1.0', '\/usr\/include\/gio-unix-2.0\/', '\/usr\/include\/glib-2.0', '\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include', '\/usr\/include\/pixman-1', '\/usr\/include\/freetype2', '\/usr\/include\/libpng12', '\/usr\/include\/harfbuzz']$/;"	v
CPPPATH_JAVASCRIPTCOREGTK	_build_/c4che/default.cache.py	/^CPPPATH_JAVASCRIPTCOREGTK = ['\/usr\/include\/glib-2.0', '\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include', '\/usr\/include\/webkitgtk-1.0']$/;"	v
CPPPATH_LIBNOTIFY	_build_/c4che/default.cache.py	/^CPPPATH_LIBNOTIFY = ['\/usr\/include\/gdk-pixbuf-2.0', '\/usr\/include\/glib-2.0', '\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include', '\/usr\/include\/libpng12']$/;"	v
CPPPATH_LIBSOUP	_build_/c4che/default.cache.py	/^CPPPATH_LIBSOUP = ['\/usr\/include\/libsoup-2.4', '\/usr\/include\/libxml2', '\/usr\/include\/glib-2.0', '\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include']$/;"	v
CPPPATH_LIBSOUP_2_29_3	_build_/c4che/default.cache.py	/^CPPPATH_LIBSOUP_2_29_3 = ['\/usr\/include\/libsoup-2.4', '\/usr\/include\/libxml2', '\/usr\/include\/glib-2.0', '\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include']$/;"	v
CPPPATH_LIBSOUP_2_29_91	_build_/c4che/default.cache.py	/^CPPPATH_LIBSOUP_2_29_91 = ['\/usr\/include\/libsoup-2.4', '\/usr\/include\/libxml2', '\/usr\/include\/glib-2.0', '\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include']$/;"	v
CPPPATH_LIBSOUP_2_37_1	_build_/c4che/default.cache.py	/^CPPPATH_LIBSOUP_2_37_1 = ['\/usr\/include\/libsoup-2.4', '\/usr\/include\/libxml2', '\/usr\/include\/glib-2.0', '\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include']$/;"	v
CPPPATH_LIBXML	_build_/c4che/default.cache.py	/^CPPPATH_LIBXML = ['\/usr\/include\/libxml2']$/;"	v
CPPPATH_ST	_build_/c4che/default.cache.py	/^CPPPATH_ST = '-I%s'$/;"	v
CPPPATH_UNIQUE	_build_/c4che/default.cache.py	/^CPPPATH_UNIQUE = ['\/usr\/include\/gtk-2.0', '\/usr\/lib\/i386-linux-gnu\/gtk-2.0\/include', '\/usr\/include\/atk-1.0', '\/usr\/include\/cairo', '\/usr\/include\/gdk-pixbuf-2.0', '\/usr\/include\/pango-1.0', '\/usr\/include\/gio-unix-2.0\/', '\/usr\/include\/glib-2.0', '\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include', '\/usr\/include\/pixman-1', '\/usr\/include\/freetype2', '\/usr\/include\/libpng12', '\/usr\/include\/harfbuzz', '\/usr\/include\/unique-1.0']$/;"	v
CPPPATH_WEBKIT	_build_/c4che/default.cache.py	/^CPPPATH_WEBKIT = ['\/usr\/include\/glib-2.0', '\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include', '\/usr\/include\/gtk-2.0', '\/usr\/include\/libsoup-2.4', '\/usr\/lib\/i386-linux-gnu\/gtk-2.0\/include', '\/usr\/include\/atk-1.0', '\/usr\/include\/cairo', '\/usr\/include\/gdk-pixbuf-2.0', '\/usr\/include\/pango-1.0', '\/usr\/include\/gio-unix-2.0\/', '\/usr\/include\/pixman-1', '\/usr\/include\/freetype2', '\/usr\/include\/libpng12', '\/usr\/include\/harfbuzz', '\/usr\/include\/libxml2', '\/usr\/include\/webkitgtk-1.0']$/;"	v
CRASHED	waf-modules/wafadmin/Constants.py	/^CRASHED=2$/;"	v
CREATE_TABLE	katze/katze-http-cookies-sqlite.c	30;"	d	file:
CUSTOM	waf-modules/wafadmin/Tools/ccroot.py	/^	CUSTOM="custom"$/;"	v	class:DEBUG_LEVELS
CUSTOM_LIST_NAME	extensions/adblock.c	23;"	d	file:
CXXFLAGS_GIO	_build_/c4che/default.cache.py	/^CXXFLAGS_GIO = ['-pthread']$/;"	v
CXXFLAGS_GMODULE	_build_/c4che/default.cache.py	/^CXXFLAGS_GMODULE = ['-pthread']$/;"	v
CXXFLAGS_GTHREAD	_build_/c4che/default.cache.py	/^CXXFLAGS_GTHREAD = ['-pthread']$/;"	v
CXXFLAGS_GTK	_build_/c4che/default.cache.py	/^CXXFLAGS_GTK = ['-pthread']$/;"	v
CXXFLAGS_LIBNOTIFY	_build_/c4che/default.cache.py	/^CXXFLAGS_LIBNOTIFY = ['-pthread']$/;"	v
CXXFLAGS_LIBSOUP	_build_/c4che/default.cache.py	/^CXXFLAGS_LIBSOUP = ['-pthread']$/;"	v
CXXFLAGS_LIBSOUP_2_29_3	_build_/c4che/default.cache.py	/^CXXFLAGS_LIBSOUP_2_29_3 = ['-pthread']$/;"	v
CXXFLAGS_LIBSOUP_2_29_91	_build_/c4che/default.cache.py	/^CXXFLAGS_LIBSOUP_2_29_91 = ['-pthread']$/;"	v
CXXFLAGS_LIBSOUP_2_37_1	_build_/c4che/default.cache.py	/^CXXFLAGS_LIBSOUP_2_37_1 = ['-pthread']$/;"	v
CXXFLAGS_UNIQUE	_build_/c4che/default.cache.py	/^CXXFLAGS_UNIQUE = ['-pthread']$/;"	v
CXXFLAGS_WEBKIT	_build_/c4che/default.cache.py	/^CXXFLAGS_WEBKIT = ['-pthread']$/;"	v
CalledProcessError	waf-modules/wafadmin/pproc.py	/^class CalledProcessError(Exception):$/;"	c
ConfigurationContext	waf-modules/wafadmin/Configure.py	/^class ConfigurationContext(Utils.Context):$/;"	c
ConfigurationError	waf-modules/wafadmin/Configure.py	/^class ConfigurationError(Utils.WscriptError):$/;"	c
ConnectionState	midori/socket.h	/^} ConnectionState;$/;"	t	typeref:enum:__anon65
ContentHandler	waf-modules/wafadmin/Tools/qt4.py	/^	ContentHandler=object$/;"	v
Context	waf-modules/wafadmin/Utils.py	/^class Context(object):$/;"	c
CookieManager	extensions/cookie-manager/cookie-manager.h	/^typedef struct _CookieManager			CookieManager;$/;"	t	typeref:struct:_CookieManager
CookieManagerClass	extensions/cookie-manager/cookie-manager.h	/^typedef struct _CookieManagerClass		CookieManagerClass;$/;"	t	typeref:struct:_CookieManagerClass
CookieManagerPage	extensions/cookie-manager/cookie-manager-page.h	/^typedef struct _CookieManagerPage				CookieManagerPage;$/;"	t	typeref:struct:_CookieManagerPage
CookieManagerPageClass	extensions/cookie-manager/cookie-manager-page.h	/^typedef struct _CookieManagerPageClass			CookieManagerPageClass;$/;"	t	typeref:struct:_CookieManagerPageClass
CookieManagerPagePrivate	extensions/cookie-manager/cookie-manager-page.h	/^typedef struct _CookieManagerPagePrivate			CookieManagerPagePrivate;$/;"	t	typeref:struct:_CookieManagerPagePrivate
CookieManagerPrivate	extensions/cookie-manager/cookie-manager.c	/^typedef struct _CookieManagerPrivate			CookieManagerPrivate;$/;"	t	typeref:struct:_CookieManagerPrivate	file:
DATADIR	_build_/c4che/default.cache.py	/^DATADIR = ()$/;"	v
DATAROOTDIR	_build_/c4che/default.cache.py	/^DATAROOTDIR = '\/usr\/share'$/;"	v
DBFILE	waf-modules/wafadmin/Constants.py	/^DBFILE='.wafpickle-%d'%ABI$/;"	v
DEACTIVATE	midori/midori-extension.c	/^    DEACTIVATE,$/;"	e	enum:__anon74	file:
DEBIAN_DISTRO_DEFAULT_HOMEPAGE	debian/config/Debian.h	1;"	d
DEBIAN_DISTRO_DEFAULT_HOMEPAGE	debian/config/Ubuntu.h	1;"	d
DEBIAN_WWW_ALTERNATIVES_PRIORITY	debian/config/Debian.h	2;"	d
DEBIAN_WWW_ALTERNATIVES_PRIORITY	debian/config/Ubuntu.h	2;"	d
DEBUG	waf-modules/wafadmin/Tools/ccroot.py	/^	DEBUG="debug"$/;"	v	class:DEBUG_LEVELS
DEBUG_LEVELS	waf-modules/wafadmin/Tools/ccroot.py	/^class DEBUG_LEVELS:$/;"	c
DEB_BUILD_HARDENING	debian/rules	/^export DEB_BUILD_HARDENING=1$/;"	m
DEFAULT	waf-modules/wafadmin/Constants.py	/^DEFAULT='default'$/;"	v
DEFAULT_DECELERATION	katze/katze-scrolled.c	22;"	d	file:
DEFAULT_DRAGGING_STOPPED_DELAY	katze/katze-scrolled.c	23;"	d	file:
DEFAULT_FORMAT	extensions/status-clock.c	33;"	d	file:
DEFAULT_INTERVAL	katze/katze-scrolled.c	21;"	d	file:
DEFINES	waf-modules/wafadmin/Constants.py	/^DEFINES='defines'$/;"	v
DEST_BINFMT	_build_/c4che/default.cache.py	/^DEST_BINFMT = 'elf'$/;"	v
DEST_CPU	_build_/c4che/default.cache.py	/^DEST_CPU = 'x86'$/;"	v
DEST_OS	_build_/c4che/default.cache.py	/^DEST_OS = 'linux'$/;"	v
DETACH_INSPECTOR	midori/midori-view.c	/^    DETACH_INSPECTOR,$/;"	e	enum:__anon44	file:
DEVIANCE	extensions/mouse-gestures.c	38;"	d	file:
DIR	waf-modules/wafadmin/Node.py	/^DIR=1$/;"	v
DISTRO	debian/rules	/^	DISTRO=Debian$/;"	m
DISTRO	debian/rules	/^DISTRO=$(shell lsb_release -is)$/;"	m
DOCDIR	_build_/c4che/default.cache.py	/^DOCDIR = '\/usr\/share\/doc\/midori'$/;"	v
DOCDIR	_build_/default/config.h	14;"	d
DOWNLOAD_REQUESTED	midori/midori-view.c	/^    DOWNLOAD_REQUESTED,$/;"	e	enum:__anon44	file:
DVIDIR	_build_/c4che/default.cache.py	/^DVIDIR = '\/usr\/share\/doc\/midori'$/;"	v
D_METHS	waf-modules/wafadmin/Tools/d.py	/^D_METHS=['apply_core','apply_vnum','apply_objdeps']$/;"	v
DefaultDict	waf-modules/wafadmin/Utils.py	/^	class DefaultDict(dict):$/;"	c
ENABLE_NLS	_build_/c4che/default.cache.py	/^ENABLE_NLS = 1$/;"	v
ENABLE_NLS	_build_/default/config.h	10;"	d
EXCEPTION	waf-modules/wafadmin/Constants.py	/^EXCEPTION=3$/;"	v
EXEC_PREFIX	_build_/c4che/default.cache.py	/^EXEC_PREFIX = '\/usr'$/;"	v
EXTENSION_NAME	extensions/feed-panel/main.c	18;"	d	file:
EXT_ASM	waf-modules/wafadmin/Tools/gas.py	/^EXT_ASM=['.s','.S','.asm','.ASM','.spp','.SPP']$/;"	v
EXT_CC	waf-modules/wafadmin/Tools/cc.py	/^EXT_CC=['.c']$/;"	v
EXT_CXX	waf-modules/wafadmin/Tools/cxx.py	/^EXT_CXX=['.cpp','.cc','.cxx','.C','.c++']$/;"	v
EXT_D	waf-modules/wafadmin/Tools/d.py	/^EXT_D=['.d','.di','.D']$/;"	v
EXT_ML	waf-modules/wafadmin/Tools/ocaml.py	/^EXT_ML=['.ml']$/;"	v
EXT_MLC	waf-modules/wafadmin/Tools/ocaml.py	/^EXT_MLC=['.c']$/;"	v
EXT_MLI	waf-modules/wafadmin/Tools/ocaml.py	/^EXT_MLI=['.mli']$/;"	v
EXT_MLL	waf-modules/wafadmin/Tools/ocaml.py	/^EXT_MLL=['.mll']$/;"	v
EXT_MLY	waf-modules/wafadmin/Tools/ocaml.py	/^EXT_MLY=['.mly']$/;"	v
EXT_NASM	waf-modules/wafadmin/Tools/nasm.py	/^EXT_NASM=['.s','.S','.asm','.ASM','.spp','.SPP']$/;"	v
EXT_PY	waf-modules/wafadmin/Tools/python.py	/^EXT_PY=['.py']$/;"	v
EXT_QT4	waf-modules/wafadmin/Tools/qt4.py	/^EXT_QT4=['.cpp','.cc','.cxx','.C']$/;"	v
EXT_RCC	waf-modules/wafadmin/Tools/qt4.py	/^EXT_RCC=['.qrc']$/;"	v
EXT_UI	waf-modules/wafadmin/Tools/qt4.py	/^EXT_UI=['.ui']$/;"	v
EXT_VALA	waf-modules/wafadmin/Tools/vala.py	/^EXT_VALA=['.vala','.gs']$/;"	v
EXT_WINRC	waf-modules/wafadmin/Tools/winres.py	/^EXT_WINRC=['.rc']$/;"	v
EXT_XS	waf-modules/wafadmin/Tools/perl.py	/^EXT_XS=['.xs']$/;"	v
EntryIconInfo	midori/gtkiconentry.c	/^} EntryIconInfo;$/;"	t	typeref:struct:__anon54	file:
Environment	waf-modules/wafadmin/Environment.py	/^class Environment(object):$/;"	c
EventHandlerData	katze/katze-scrolled.c	/^} EventHandlerData;$/;"	t	typeref:struct:__anon24	file:
FAVICON_COL	midori/midori-locationaction.c	/^    FAVICON_COL,$/;"	e	enum:__anon50	file:
FEED_IS_PANEL	extensions/feed-panel/feed-panel.h	25;"	d
FEED_IS_PANEL_CLASS	extensions/feed-panel/feed-panel.h	27;"	d
FEED_PANEL	extensions/feed-panel/feed-panel.h	21;"	d
FEED_PANEL_CLASS	extensions/feed-panel/feed-panel.h	23;"	d
FEED_PANEL_GET_CLASS	extensions/feed-panel/feed-panel.h	29;"	d
FEED_PARSE_ERROR	extensions/feed-panel/feed-parse.h	27;"	d
FEED_PARSE_ERROR_INVALID_FORMAT	extensions/feed-panel/feed-parse.h	/^    FEED_PARSE_ERROR_INVALID_FORMAT,$/;"	e	enum:__anon15
FEED_PARSE_ERROR_INVALID_VERSION	extensions/feed-panel/feed-parse.h	/^    FEED_PARSE_ERROR_INVALID_VERSION,$/;"	e	enum:__anon15
FEED_PARSE_ERROR_MISSING_ELEMENT	extensions/feed-panel/feed-parse.h	/^    FEED_PARSE_ERROR_MISSING_ELEMENT$/;"	e	enum:__anon15
FEED_PARSE_ERROR_PARSE	extensions/feed-panel/feed-parse.h	/^    FEED_PARSE_ERROR_PARSE,$/;"	e	enum:__anon15
FEED_READ	extensions/feed-panel/main.c	/^    FEED_READ = 1,$/;"	e	enum:__anon13	file:
FEED_REMOVE	extensions/feed-panel/main.c	/^    FEED_REMOVE$/;"	e	enum:__anon13	file:
FEED_TYPE_PANEL	extensions/feed-panel/feed-panel.h	19;"	d
FILE	waf-modules/wafadmin/Node.py	/^FILE=2$/;"	v
FILLED_ADD	midori/midori-preferences.c	288;"	d	file:
FILTER_CHANGED	extensions/cookie-manager/cookie-manager.c	/^	FILTER_CHANGED,$/;"	e	enum:__anon22	file:
FOCUS_IN	midori/midori-locationaction.c	/^    FOCUS_IN,$/;"	e	enum:__anon49	file:
FOCUS_OUT	midori/midori-locationaction.c	/^    FOCUS_OUT,$/;"	e	enum:__anon49	file:
FOCUS_OUT	midori/midori-searchaction.c	/^    FOCUS_OUT,$/;"	e	enum:__anon75	file:
FRAME_NEW	midori/midori-preferences.c	286;"	d	file:
FULLSTATIC_MARKER	_build_/c4che/default.cache.py	/^FULLSTATIC_MARKER = '-static'$/;"	v
False	waf-modules/wafadmin/pproc.py	/^	False=0$/;"	v
FeedBarError	extensions/feed-panel/feed-parse.h	/^} FeedBarError;$/;"	t	typeref:enum:__anon15
FeedNetPrivate	extensions/feed-panel/main.c	/^} FeedNetPrivate;$/;"	t	typeref:struct:__anon12	file:
FeedPanel	extensions/feed-panel/feed-panel.h	/^typedef struct _FeedPanel                FeedPanel;$/;"	t	typeref:struct:_FeedPanel
FeedPanelClass	extensions/feed-panel/feed-panel.h	/^typedef struct _FeedPanelClass           FeedPanelClass;$/;"	t	typeref:struct:_FeedPanelClass
FeedParser	extensions/feed-panel/feed-parse.h	/^} FeedParser;$/;"	t	typeref:struct:_FeedParser
FeedPrivate	extensions/feed-panel/main.c	/^} FeedPrivate;$/;"	t	typeref:struct:__anon11	file:
FormSuggestions	data/autosuggestcontrol.js	/^FormSuggestions.prototype.requestSuggestions = function (oAutoSuggestControl \/*:AutoSuggestControl*\/) {$/;"	c
FormSuggestions	debian/midori/usr/share/midori/res/autosuggestcontrol.js	/^FormSuggestions.prototype.requestSuggestions = function (oAutoSuggestControl \/*:AutoSuggestControl*\/) {$/;"	c
FormSuggestions	debian/tmp/usr/share/midori/res/autosuggestcontrol.js	/^FormSuggestions.prototype.requestSuggestions = function (oAutoSuggestControl \/*:AutoSuggestControl*\/) {$/;"	c
FormSuggestions.requestSuggestions	data/autosuggestcontrol.js	/^FormSuggestions.prototype.requestSuggestions = function (oAutoSuggestControl \/*:AutoSuggestControl*\/) {$/;"	m
FormSuggestions.requestSuggestions	debian/midori/usr/share/midori/res/autosuggestcontrol.js	/^FormSuggestions.prototype.requestSuggestions = function (oAutoSuggestControl \/*:AutoSuggestControl*\/) {$/;"	m
FormSuggestions.requestSuggestions	debian/tmp/usr/share/midori/res/autosuggestcontrol.js	/^FormSuggestions.prototype.requestSuggestions = function (oAutoSuggestControl \/*:AutoSuggestControl*\/) {$/;"	m
GAP	waf-modules/wafadmin/Runner.py	/^GAP=15$/;"	v
GDK_KEY_0	katze/gtk3-compat.h	122;"	d
GDK_KEY_B	katze/gtk3-compat.h	146;"	d
GDK_KEY_BackSpace	katze/gtk3-compat.h	123;"	d
GDK_KEY_Delete	katze/gtk3-compat.h	143;"	d
GDK_KEY_Down	katze/gtk3-compat.h	144;"	d
GDK_KEY_Escape	katze/gtk3-compat.h	140;"	d
GDK_KEY_F5	katze/gtk3-compat.h	125;"	d
GDK_KEY_H	katze/gtk3-compat.h	147;"	d
GDK_KEY_ISO_Enter	katze/gtk3-compat.h	137;"	d
GDK_KEY_ISO_Left_Tab	katze/gtk3-compat.h	135;"	d
GDK_KEY_J	katze/gtk3-compat.h	148;"	d
GDK_KEY_KP_Delete	katze/gtk3-compat.h	130;"	d
GDK_KEY_KP_Divide	katze/gtk3-compat.h	133;"	d
GDK_KEY_KP_Down	katze/gtk3-compat.h	131;"	d
GDK_KEY_KP_Enter	katze/gtk3-compat.h	127;"	d
GDK_KEY_KP_Equal	katze/gtk3-compat.h	126;"	d
GDK_KEY_KP_Left	katze/gtk3-compat.h	128;"	d
GDK_KEY_KP_Right	katze/gtk3-compat.h	129;"	d
GDK_KEY_KP_Up	katze/gtk3-compat.h	132;"	d
GDK_KEY_Left	katze/gtk3-compat.h	138;"	d
GDK_KEY_Page_Down	katze/gtk3-compat.h	142;"	d
GDK_KEY_Page_Up	katze/gtk3-compat.h	141;"	d
GDK_KEY_Return	katze/gtk3-compat.h	149;"	d
GDK_KEY_Right	katze/gtk3-compat.h	139;"	d
GDK_KEY_Tab	katze/gtk3-compat.h	134;"	d
GDK_KEY_Up	katze/gtk3-compat.h	145;"	d
GDK_KEY_equal	katze/gtk3-compat.h	136;"	d
GDK_KEY_space	katze/gtk3-compat.h	124;"	d
GETTEXT_PACKAGE	_build_/c4che/default.cache.py	/^GETTEXT_PACKAGE = 'midori'$/;"	v
GETTEXT_PACKAGE	_build_/default/config.h	44;"	d
GLIB_GENMARSHAL	_build_/c4che/default.cache.py	/^GLIB_GENMARSHAL = '\/usr\/bin\/glib-genmarshal'$/;"	v
GLIB_MKENUMS	_build_/c4che/default.cache.py	/^GLIB_MKENUMS = '\/usr\/bin\/glib-mkenums'$/;"	v
GTKLAUNCHER	debian/rules	/^GTKLAUNCHER=$(shell dpkg-query -L $(LIBWEBKIT_PKG) | grep GtkLauncher)$/;"	m
GTK_ACTIVATABLE	katze/gtk3-compat.h	53;"	d
GTK_COMBO_BOX_TEXT	katze/gtk3-compat.h	117;"	d
GTK_DIALOG_NO_SEPARATOR	katze/gtk3-compat.h	87;"	d
GTK_ICON_ENTRY	midori/gtkiconentry.h	34;"	d
GTK_ICON_ENTRY_PRIMARY	midori/gtkiconentry.h	32;"	d
GTK_ICON_ENTRY_SECONDARY	midori/gtkiconentry.h	33;"	d
GTK_PARAM_READABLE	midori/gtkiconentry.c	50;"	d	file:
GTK_PARAM_READWRITE	midori/gtkiconentry.c	58;"	d	file:
GTK_PARAM_WRITABLE	midori/gtkiconentry.c	54;"	d	file:
GTK_TYPE_HBOX	katze/gtk3-compat.h	16;"	d
GTK_TYPE_ICON_ENTRY	midori/gtkiconentry.h	35;"	d
GTK_TYPE_VBOX	katze/gtk3-compat.h	10;"	d
G_CONST_RETURN	midori/midori-app.c	47;"	d	file:
G_CONST_RETUTN	midori/midori-app.c	51;"	d	file:
G_DEFINE_TYPE	midori/midori-app.c	/^G_DEFINE_TYPE (MidoriApp, midori_app, G_TYPE_OBJECT)$/;"	f
G_DEFINE_TYPE	midori/midori-browser.c	/^G_DEFINE_TYPE (MidoriBrowser, midori_browser, HILDON_TYPE_WINDOW)$/;"	f
G_DEFINE_TYPE	midori/midori-locationaction.c	/^G_DEFINE_TYPE (MidoriLocationAction, midori_location_action, GTK_TYPE_ACTION)$/;"	f
G_DEFINE_TYPE	midori/midori-panel.c	/^G_DEFINE_TYPE (MidoriPanel, midori_panel, GTK_TYPE_HBOX)$/;"	f
G_DEFINE_TYPE	midori/midori-searchaction.c	/^G_DEFINE_TYPE (MidoriSearchAction, midori_search_action, GTK_TYPE_ACTION)$/;"	f
G_DEFINE_TYPE	midori/midori-websettings.c	/^G_DEFINE_TYPE (MidoriWebSettings, midori_web_settings, WEBKIT_TYPE_WEB_SETTINGS)$/;"	f
G_SOURCE_CONTINUE	katze/gtk3-compat.h	35;"	d
G_SOURCE_REMOVE	katze/gtk3-compat.h	34;"	d
GtkComboBoxText	katze/gtk3-compat.h	118;"	d
GtkHBox	katze/gtk3-compat.h	17;"	d
GtkHBoxClass	katze/gtk3-compat.h	18;"	d
GtkIconEntry	midori/gtkiconentry.h	30;"	d
GtkIconEntryPosition	midori/gtkiconentry.h	31;"	d
GtkVBox	katze/gtk3-compat.h	11;"	d
GtkVBoxClass	katze/gtk3-compat.h	12;"	d
HAVE_GIO	_build_/c4che/default.cache.py	/^HAVE_GIO = 1$/;"	v
HAVE_GIO	_build_/default/config.h	21;"	d
HAVE_GMODULE	_build_/c4che/default.cache.py	/^HAVE_GMODULE = 1$/;"	v
HAVE_GMODULE	_build_/default/config.h	20;"	d
HAVE_GOBJECT	_build_/c4che/default.cache.py	/^HAVE_GOBJECT = 1$/;"	v
HAVE_GOBJECT	_build_/default/config.h	5;"	d
HAVE_GTHREAD	_build_/c4che/default.cache.py	/^HAVE_GTHREAD = 1$/;"	v
HAVE_GTHREAD	_build_/default/config.h	6;"	d
HAVE_GTK	_build_/c4che/default.cache.py	/^HAVE_GTK = 1$/;"	v
HAVE_GTK	_build_/default/config.h	24;"	d
HAVE_GTK3	_build_/c4che/default.cache.py	/^HAVE_GTK3 = False$/;"	v
HAVE_GTK_INFO_BAR	midori/midori-view.c	1190;"	d	file:
HAVE_HILDON	_build_/c4che/default.cache.py	/^HAVE_HILDON = 0$/;"	v
HAVE_HILDON	_build_/default/config.h	38;"	d
HAVE_JAVASCRIPTCOREGTK	_build_/c4che/default.cache.py	/^HAVE_JAVASCRIPTCOREGTK = 1$/;"	v
HAVE_JAVASCRIPTCOREGTK	_build_/default/config.h	27;"	d
HAVE_LIBNOTIFY	_build_/c4che/default.cache.py	/^HAVE_LIBNOTIFY = 1$/;"	v
HAVE_LIBNOTIFY	_build_/default/config.h	18;"	d
HAVE_LIBSOUP	_build_/c4che/default.cache.py	/^HAVE_LIBSOUP = 1$/;"	v
HAVE_LIBSOUP	_build_/default/config.h	28;"	d
HAVE_LIBSOUP_2_25_2	_build_/c4che/default.cache.py	/^HAVE_LIBSOUP_2_25_2 = 1$/;"	v
HAVE_LIBSOUP_2_25_2	_build_/default/config.h	29;"	d
HAVE_LIBSOUP_2_27_90	_build_/c4che/default.cache.py	/^HAVE_LIBSOUP_2_27_90 = 1$/;"	v
HAVE_LIBSOUP_2_27_90	_build_/default/config.h	30;"	d
HAVE_LIBSOUP_2_29_3	_build_/c4che/default.cache.py	/^HAVE_LIBSOUP_2_29_3 = 1$/;"	v
HAVE_LIBSOUP_2_29_3	_build_/default/config.h	31;"	d
HAVE_LIBSOUP_2_29_91	_build_/c4che/default.cache.py	/^HAVE_LIBSOUP_2_29_91 = 1$/;"	v
HAVE_LIBSOUP_2_29_91	_build_/default/config.h	32;"	d
HAVE_LIBSOUP_2_37_1	_build_/c4che/default.cache.py	/^HAVE_LIBSOUP_2_37_1 = 1$/;"	v
HAVE_LIBSOUP_2_37_1	_build_/default/config.h	33;"	d
HAVE_LIBXML	_build_/c4che/default.cache.py	/^HAVE_LIBXML = 1$/;"	v
HAVE_LIBXML	_build_/default/config.h	36;"	d
HAVE_LOCALE_H	_build_/c4che/default.cache.py	/^HAVE_LOCALE_H = 1$/;"	v
HAVE_LOCALE_H	_build_/default/config.h	9;"	d
HAVE_OFFSCREEN	midori/main.c	1444;"	d	file:
HAVE_OFFSCREEN	midori/midori-view.c	1191;"	d	file:
HAVE_OSX	_build_/c4che/default.cache.py	/^HAVE_OSX = 0$/;"	v
HAVE_OSX	_build_/default/config.h	40;"	d
HAVE_SIGNAL_H	_build_/c4che/default.cache.py	/^HAVE_SIGNAL_H = 1$/;"	v
HAVE_SIGNAL_H	_build_/default/config.h	41;"	d
HAVE_SPINNER	katze/katze-throbber.c	19;"	d	file:
HAVE_SQLITE	_build_/c4che/default.cache.py	/^HAVE_SQLITE = 1$/;"	v
HAVE_SQLITE	_build_/default/config.h	37;"	d
HAVE_UNIQUE	_build_/c4che/default.cache.py	/^HAVE_UNIQUE = 1$/;"	v
HAVE_UNIQUE	_build_/default/config.h	15;"	d
HAVE_UNISTD_H	_build_/c4che/default.cache.py	/^HAVE_UNISTD_H = 1$/;"	v
HAVE_UNISTD_H	_build_/default/config.h	39;"	d
HAVE_WEBKIT	_build_/c4che/default.cache.py	/^HAVE_WEBKIT = 1$/;"	v
HAVE_WEBKIT	_build_/default/config.h	25;"	d
HAVE_X11	_build_/c4che/default.cache.py	/^HAVE_X11 = 1$/;"	v
HAVE_X11	_build_/default/config.h	22;"	d
HAVE_X11_EXTENSIONS_SCRNSAVER_H	_build_/c4che/default.cache.py	/^HAVE_X11_EXTENSIONS_SCRNSAVER_H = 1$/;"	v
HAVE_X11_EXTENSIONS_SCRNSAVER_H	_build_/default/config.h	23;"	d
HEXVERSION	waf-modules/wafadmin/Constants.py	/^HEXVERSION=0x105019$/;"	v
HISTORY_LIST_HISTORY_WINDOW	_build_/default/extensions/history-list.c	34;"	d	file:
HISTORY_LIST_HISTORY_WINDOW_BROWSER	_build_/default/extensions/history-list.c	/^	HISTORY_LIST_HISTORY_WINDOW_BROWSER$/;"	e	enum:__anon4	file:
HISTORY_LIST_HISTORY_WINDOW_CLASS	_build_/default/extensions/history-list.c	35;"	d	file:
HISTORY_LIST_HISTORY_WINDOW_DUMMY_PROPERTY	_build_/default/extensions/history-list.c	/^	HISTORY_LIST_HISTORY_WINDOW_DUMMY_PROPERTY,$/;"	e	enum:__anon4	file:
HISTORY_LIST_HISTORY_WINDOW_GET_CLASS	_build_/default/extensions/history-list.c	38;"	d	file:
HISTORY_LIST_HISTORY_WINDOW_GET_PRIVATE	_build_/default/extensions/history-list.c	204;"	d	file:
HISTORY_LIST_IS_HISTORY_WINDOW	_build_/default/extensions/history-list.c	36;"	d	file:
HISTORY_LIST_IS_HISTORY_WINDOW_CLASS	_build_/default/extensions/history-list.c	37;"	d	file:
HISTORY_LIST_IS_MANAGER	_build_/default/extensions/history-list.c	82;"	d	file:
HISTORY_LIST_IS_MANAGER_CLASS	_build_/default/extensions/history-list.c	83;"	d	file:
HISTORY_LIST_IS_NEW_TAB_WINDOW	_build_/default/extensions/history-list.c	60;"	d	file:
HISTORY_LIST_IS_NEW_TAB_WINDOW_CLASS	_build_/default/extensions/history-list.c	61;"	d	file:
HISTORY_LIST_IS_PREFERENCES_DIALOG	_build_/default/extensions/history-list.c	71;"	d	file:
HISTORY_LIST_IS_PREFERENCES_DIALOG_CLASS	_build_/default/extensions/history-list.c	72;"	d	file:
HISTORY_LIST_IS_TAB_WINDOW	_build_/default/extensions/history-list.c	49;"	d	file:
HISTORY_LIST_IS_TAB_WINDOW_CLASS	_build_/default/extensions/history-list.c	50;"	d	file:
HISTORY_LIST_MANAGER	_build_/default/extensions/history-list.c	80;"	d	file:
HISTORY_LIST_MANAGER_CLASS	_build_/default/extensions/history-list.c	81;"	d	file:
HISTORY_LIST_MANAGER_DUMMY_PROPERTY	_build_/default/extensions/history-list.c	/^	HISTORY_LIST_MANAGER_DUMMY_PROPERTY$/;"	e	enum:__anon8	file:
HISTORY_LIST_MANAGER_GET_CLASS	_build_/default/extensions/history-list.c	84;"	d	file:
HISTORY_LIST_NEW_TAB_WINDOW	_build_/default/extensions/history-list.c	58;"	d	file:
HISTORY_LIST_NEW_TAB_WINDOW_CLASS	_build_/default/extensions/history-list.c	59;"	d	file:
HISTORY_LIST_NEW_TAB_WINDOW_DUMMY_PROPERTY	_build_/default/extensions/history-list.c	/^	HISTORY_LIST_NEW_TAB_WINDOW_DUMMY_PROPERTY$/;"	e	enum:__anon6	file:
HISTORY_LIST_NEW_TAB_WINDOW_GET_CLASS	_build_/default/extensions/history-list.c	62;"	d	file:
HISTORY_LIST_PREFERENCES_DIALOG	_build_/default/extensions/history-list.c	69;"	d	file:
HISTORY_LIST_PREFERENCES_DIALOG_CLASS	_build_/default/extensions/history-list.c	70;"	d	file:
HISTORY_LIST_PREFERENCES_DIALOG_DUMMY_PROPERTY	_build_/default/extensions/history-list.c	/^	HISTORY_LIST_PREFERENCES_DIALOG_DUMMY_PROPERTY$/;"	e	enum:__anon7	file:
HISTORY_LIST_PREFERENCES_DIALOG_GET_CLASS	_build_/default/extensions/history-list.c	73;"	d	file:
HISTORY_LIST_TAB_CLOSING_BEHAVIOR_LAST	_build_/default/extensions/history-list.c	/^	HISTORY_LIST_TAB_CLOSING_BEHAVIOR_LAST,$/;"	e	enum:__anon2	file:
HISTORY_LIST_TAB_CLOSING_BEHAVIOR_MODEL_TEXT	_build_/default/extensions/history-list.c	/^	HISTORY_LIST_TAB_CLOSING_BEHAVIOR_MODEL_TEXT,$/;"	e	enum:__anon3	file:
HISTORY_LIST_TAB_CLOSING_BEHAVIOR_MODEL_VALUE	_build_/default/extensions/history-list.c	/^	HISTORY_LIST_TAB_CLOSING_BEHAVIOR_MODEL_VALUE$/;"	e	enum:__anon3	file:
HISTORY_LIST_TAB_CLOSING_BEHAVIOR_NEW	_build_/default/extensions/history-list.c	/^	HISTORY_LIST_TAB_CLOSING_BEHAVIOR_NEW$/;"	e	enum:__anon2	file:
HISTORY_LIST_TAB_CLOSING_BEHAVIOR_NONE	_build_/default/extensions/history-list.c	/^	HISTORY_LIST_TAB_CLOSING_BEHAVIOR_NONE,$/;"	e	enum:__anon2	file:
HISTORY_LIST_TAB_TREE_CELLS_TREE_CELL_COUNT	_build_/default/extensions/history-list.c	/^	HISTORY_LIST_TAB_TREE_CELLS_TREE_CELL_COUNT$/;"	e	enum:__anon1	file:
HISTORY_LIST_TAB_TREE_CELLS_TREE_CELL_PIXBUF	_build_/default/extensions/history-list.c	/^	HISTORY_LIST_TAB_TREE_CELLS_TREE_CELL_PIXBUF,$/;"	e	enum:__anon1	file:
HISTORY_LIST_TAB_TREE_CELLS_TREE_CELL_POINTER	_build_/default/extensions/history-list.c	/^	HISTORY_LIST_TAB_TREE_CELLS_TREE_CELL_POINTER,$/;"	e	enum:__anon1	file:
HISTORY_LIST_TAB_TREE_CELLS_TREE_CELL_STRING	_build_/default/extensions/history-list.c	/^	HISTORY_LIST_TAB_TREE_CELLS_TREE_CELL_STRING,$/;"	e	enum:__anon1	file:
HISTORY_LIST_TAB_WINDOW	_build_/default/extensions/history-list.c	47;"	d	file:
HISTORY_LIST_TAB_WINDOW_CLASS	_build_/default/extensions/history-list.c	48;"	d	file:
HISTORY_LIST_TAB_WINDOW_DUMMY_PROPERTY	_build_/default/extensions/history-list.c	/^	HISTORY_LIST_TAB_WINDOW_DUMMY_PROPERTY$/;"	e	enum:__anon5	file:
HISTORY_LIST_TAB_WINDOW_GET_CLASS	_build_/default/extensions/history-list.c	51;"	d	file:
HISTORY_LIST_TYPE_HISTORY_WINDOW	_build_/default/extensions/history-list.c	33;"	d	file:
HISTORY_LIST_TYPE_MANAGER	_build_/default/extensions/history-list.c	79;"	d	file:
HISTORY_LIST_TYPE_NEW_TAB_WINDOW	_build_/default/extensions/history-list.c	57;"	d	file:
HISTORY_LIST_TYPE_PREFERENCES_DIALOG	_build_/default/extensions/history-list.c	68;"	d	file:
HISTORY_LIST_TYPE_TAB_CLOSING_BEHAVIOR	_build_/default/extensions/history-list.c	29;"	d	file:
HISTORY_LIST_TYPE_TAB_CLOSING_BEHAVIOR_MODEL	_build_/default/extensions/history-list.c	31;"	d	file:
HISTORY_LIST_TYPE_TAB_TREE_CELLS	_build_/default/extensions/history-list.c	27;"	d	file:
HISTORY_LIST_TYPE_TAB_WINDOW	_build_/default/extensions/history-list.c	46;"	d	file:
HOUR_FORMAT	waf-modules/wafadmin/Constants.py	/^HOUR_FORMAT="%H:%M:%S"$/;"	v
HTMLDIR	_build_/c4che/default.cache.py	/^HTMLDIR = '\/usr\/share\/doc\/midori'$/;"	v
H_GTK3_COMPAT_20110110	katze/gtk3-compat.h	5;"	d
Handler	waf-modules/wafadmin/Options.py	/^class Handler(Utils.Context):$/;"	c
HistoryListHistoryWindow	_build_/default/extensions/history-list.c	/^typedef struct _HistoryListHistoryWindow HistoryListHistoryWindow;$/;"	t	typeref:struct:_HistoryListHistoryWindow	file:
HistoryListHistoryWindowClass	_build_/default/extensions/history-list.c	/^typedef struct _HistoryListHistoryWindowClass HistoryListHistoryWindowClass;$/;"	t	typeref:struct:_HistoryListHistoryWindowClass	file:
HistoryListHistoryWindowPrivate	_build_/default/extensions/history-list.c	/^typedef struct _HistoryListHistoryWindowPrivate HistoryListHistoryWindowPrivate;$/;"	t	typeref:struct:_HistoryListHistoryWindowPrivate	file:
HistoryListManager	_build_/default/extensions/history-list.c	/^typedef struct _HistoryListManager HistoryListManager;$/;"	t	typeref:struct:_HistoryListManager	file:
HistoryListManagerClass	_build_/default/extensions/history-list.c	/^typedef struct _HistoryListManagerClass HistoryListManagerClass;$/;"	t	typeref:struct:_HistoryListManagerClass	file:
HistoryListManagerPrivate	_build_/default/extensions/history-list.c	/^typedef struct _HistoryListManagerPrivate HistoryListManagerPrivate;$/;"	t	typeref:struct:_HistoryListManagerPrivate	file:
HistoryListNewTabWindow	_build_/default/extensions/history-list.c	/^typedef struct _HistoryListNewTabWindow HistoryListNewTabWindow;$/;"	t	typeref:struct:_HistoryListNewTabWindow	file:
HistoryListNewTabWindowClass	_build_/default/extensions/history-list.c	/^typedef struct _HistoryListNewTabWindowClass HistoryListNewTabWindowClass;$/;"	t	typeref:struct:_HistoryListNewTabWindowClass	file:
HistoryListNewTabWindowPrivate	_build_/default/extensions/history-list.c	/^typedef struct _HistoryListNewTabWindowPrivate HistoryListNewTabWindowPrivate;$/;"	t	typeref:struct:_HistoryListNewTabWindowPrivate	file:
HistoryListPreferencesDialog	_build_/default/extensions/history-list.c	/^typedef struct _HistoryListPreferencesDialog HistoryListPreferencesDialog;$/;"	t	typeref:struct:_HistoryListPreferencesDialog	file:
HistoryListPreferencesDialogClass	_build_/default/extensions/history-list.c	/^typedef struct _HistoryListPreferencesDialogClass HistoryListPreferencesDialogClass;$/;"	t	typeref:struct:_HistoryListPreferencesDialogClass	file:
HistoryListPreferencesDialogPrivate	_build_/default/extensions/history-list.c	/^typedef struct _HistoryListPreferencesDialogPrivate HistoryListPreferencesDialogPrivate;$/;"	t	typeref:struct:_HistoryListPreferencesDialogPrivate	file:
HistoryListTabClosingBehavior	_build_/default/extensions/history-list.c	/^} HistoryListTabClosingBehavior;$/;"	t	typeref:enum:__anon2	file:
HistoryListTabClosingBehaviorModel	_build_/default/extensions/history-list.c	/^} HistoryListTabClosingBehaviorModel;$/;"	t	typeref:enum:__anon3	file:
HistoryListTabTreeCells	_build_/default/extensions/history-list.c	/^} HistoryListTabTreeCells;$/;"	t	typeref:enum:__anon1	file:
HistoryListTabWindow	_build_/default/extensions/history-list.c	/^typedef struct _HistoryListTabWindow HistoryListTabWindow;$/;"	t	typeref:struct:_HistoryListTabWindow	file:
HistoryListTabWindowClass	_build_/default/extensions/history-list.c	/^typedef struct _HistoryListTabWindowClass HistoryListTabWindowClass;$/;"	t	typeref:struct:_HistoryListTabWindowClass	file:
HistoryListTabWindowPrivate	_build_/default/extensions/history-list.c	/^typedef struct _HistoryListTabWindowPrivate HistoryListTabWindowPrivate;$/;"	t	typeref:struct:_HistoryListTabWindowPrivate	file:
ICON_MARGIN	midori/gtkiconentry.c	63;"	d	file:
ICON_PRESSED	midori/gtkiconentry.c	/^  ICON_PRESSED,$/;"	e	enum:__anon55	file:
ICON_RELEASED	midori/gtkiconentry.c	/^  ICON_RELEASED,$/;"	e	enum:__anon55	file:
IDENT	waf-modules/wafadmin/Tools/preproc.py	/^IDENT='T'$/;"	v
INCLUDEDIR	_build_/c4che/default.cache.py	/^INCLUDEDIR = '\/usr\/include'$/;"	v
INDENTED_ADD	midori/midori-preferences.c	290;"	d	file:
INFODIR	_build_/c4che/default.cache.py	/^INFODIR = '\/usr\/share\/info'$/;"	v
INSTALL	waf	/^INSTALL=''$/;"	v
INSTALL	waf-modules/wafadmin/Constants.py	/^INSTALL=1337$/;"	v
INSTALL	waf-unpacked	/^INSTALL=''$/;"	v
INTLTOOL	_build_/c4che/default.cache.py	/^INTLTOOL = '\/usr\/bin\/intltool-merge'$/;"	v
INVALID_SOCKET	midori/socket.c	75;"	d	file:
IS_ADDONS	extensions/addons.c	41;"	d	file:
IS_ADDONS_CLASS	extensions/addons.c	43;"	d	file:
IS_COOKIE_MANAGER	extensions/cookie-manager/cookie-manager.h	34;"	d
IS_COOKIE_MANAGER_CLASS	extensions/cookie-manager/cookie-manager.h	36;"	d
IS_COOKIE_MANAGER_PAGE	extensions/cookie-manager/cookie-manager-page.h	22;"	d
IS_COOKIE_MANAGER_PAGE_CLASS	extensions/cookie-manager/cookie-manager-page.h	24;"	d
IS_VALID_ICON_ENTRY_POSITION	midori/gtkiconentry.c	66;"	d	file:
I_	katze/katze-utils.c	36;"	d	file:
JOBCONTROL	waf-modules/wafadmin/Constants.py	/^JOBCONTROL="JOBCONTROL"$/;"	v
KATZE_ARRAY	katze/katze-array.h	21;"	d
KATZE_ARRAY_ACTION	katze/katze-arrayaction.h	23;"	d
KATZE_ARRAY_ACTION_CLASS	katze/katze-arrayaction.h	25;"	d
KATZE_ARRAY_ACTION_GET_CLASS	katze/katze-arrayaction.h	31;"	d
KATZE_ARRAY_CLASS	katze/katze-array.h	23;"	d
KATZE_ARRAY_FOREACH_ITEM	katze/katze-array.h	96;"	d
KATZE_ARRAY_FOREACH_ITEM_L	katze/katze-array.h	112;"	d
KATZE_ARRAY_GET_CLASS	katze/katze-array.h	29;"	d
KATZE_HTTP_AUTH	katze/katze-http-auth.h	23;"	d
KATZE_HTTP_AUTH_CLASS	katze/katze-http-auth.h	25;"	d
KATZE_HTTP_AUTH_GET_CLASS	katze/katze-http-auth.h	31;"	d
KATZE_HTTP_COOKIES	katze/katze-http-cookies.h	23;"	d
KATZE_HTTP_COOKIES_CLASS	katze/katze-http-cookies.h	25;"	d
KATZE_HTTP_COOKIES_GET_CLASS	katze/katze-http-cookies.h	31;"	d
KATZE_HTTP_COOKIES_SQLITE	katze/katze-http-cookies-sqlite.h	23;"	d
KATZE_HTTP_COOKIES_SQLITE_CLASS	katze/katze-http-cookies-sqlite.h	25;"	d
KATZE_HTTP_COOKIES_SQLITE_GET_CLASS	katze/katze-http-cookies-sqlite.h	31;"	d
KATZE_IS_ARRAY	katze/katze-array.h	25;"	d
KATZE_IS_ARRAY_ACTION	katze/katze-arrayaction.h	27;"	d
KATZE_IS_ARRAY_ACTION_CLASS	katze/katze-arrayaction.h	29;"	d
KATZE_IS_ARRAY_CLASS	katze/katze-array.h	27;"	d
KATZE_IS_HTTP_AUTH	katze/katze-http-auth.h	27;"	d
KATZE_IS_HTTP_AUTH_CLASS	katze/katze-http-auth.h	29;"	d
KATZE_IS_HTTP_COOKIES	katze/katze-http-cookies.h	27;"	d
KATZE_IS_HTTP_COOKIES_CLASS	katze/katze-http-cookies.h	29;"	d
KATZE_IS_HTTP_COOKIES_SQLITE	katze/katze-http-cookies-sqlite.h	27;"	d
KATZE_IS_HTTP_COOKIES_SQLITE_CLASS	katze/katze-http-cookies-sqlite.h	29;"	d
KATZE_IS_ITEM	katze/katze-item.h	25;"	d
KATZE_IS_ITEM_CLASS	katze/katze-item.h	27;"	d
KATZE_IS_NET	katze/katze-net.h	27;"	d
KATZE_IS_NET_CLASS	katze/katze-net.h	29;"	d
KATZE_IS_PREFERENCES	katze/katze-preferences.h	25;"	d
KATZE_IS_PREFERENCES_CLASS	katze/katze-preferences.h	27;"	d
KATZE_IS_SCROLLED	katze/katze-scrolled.h	24;"	d
KATZE_IS_SCROLLED_CLASS	katze/katze-scrolled.h	25;"	d
KATZE_IS_SEPARATOR_ACTION	katze/katze-separatoraction.h	27;"	d
KATZE_IS_SEPARATOR_ACTION_CLASS	katze/katze-separatoraction.h	29;"	d
KATZE_IS_THROBBER	katze/katze-throbber.h	25;"	d
KATZE_IS_THROBBER_CLASS	katze/katze-throbber.h	27;"	d
KATZE_ITEM	katze/katze-item.h	21;"	d
KATZE_ITEM_CLASS	katze/katze-item.h	23;"	d
KATZE_ITEM_GET_CLASS	katze/katze-item.h	29;"	d
KATZE_ITEM_IS_BOOKMARK	katze/katze-item.h	31;"	d
KATZE_ITEM_IS_FOLDER	katze/katze-item.h	32;"	d
KATZE_ITEM_IS_SEPARATOR	katze/katze-item.h	33;"	d
KATZE_MENU_POSITION_CURSOR	katze/katze-utils.h	/^    KATZE_MENU_POSITION_CURSOR = 0,$/;"	e	enum:__anon38
KATZE_MENU_POSITION_LEFT	katze/katze-utils.h	/^    KATZE_MENU_POSITION_LEFT,$/;"	e	enum:__anon38
KATZE_MENU_POSITION_RIGHT	katze/katze-utils.h	/^    KATZE_MENU_POSITION_RIGHT$/;"	e	enum:__anon38
KATZE_NET	katze/katze-net.h	23;"	d
KATZE_NET_CLASS	katze/katze-net.h	25;"	d
KATZE_NET_DONE	katze/katze-net.h	/^    KATZE_NET_DONE$/;"	e	enum:__anon33
KATZE_NET_FAILED	katze/katze-net.h	/^    KATZE_NET_FAILED,$/;"	e	enum:__anon33
KATZE_NET_GET_CLASS	katze/katze-net.h	31;"	d
KATZE_NET_MOVED	katze/katze-net.h	/^    KATZE_NET_MOVED,$/;"	e	enum:__anon33
KATZE_NET_NOT_FOUND	katze/katze-net.h	/^    KATZE_NET_NOT_FOUND,$/;"	e	enum:__anon33
KATZE_NET_VERIFIED	katze/katze-net.h	/^    KATZE_NET_VERIFIED,$/;"	e	enum:__anon33
KATZE_OBJECT_NAME	katze/katze-utils.h	28;"	d
KATZE_PREFERENCES	katze/katze-preferences.h	21;"	d
KATZE_PREFERENCES_CLASS	katze/katze-preferences.h	23;"	d
KATZE_PREFERENCES_GET_CLASS	katze/katze-preferences.h	29;"	d
KATZE_SCROLLED	katze/katze-scrolled.h	22;"	d
KATZE_SCROLLED_CLASS	katze/katze-scrolled.h	23;"	d
KATZE_SCROLLED_GET_CLASS	katze/katze-scrolled.h	26;"	d
KATZE_SCROLLED_H	katze/katze-scrolled.h	15;"	d
KATZE_SEPARATOR_ACTION	katze/katze-separatoraction.h	21;"	d
KATZE_SEPARATOR_ACTION_CLASS	katze/katze-separatoraction.h	24;"	d
KATZE_SEPARATOR_ACTION_GET_CLASS	katze/katze-separatoraction.h	31;"	d
KATZE_THROBBER	katze/katze-throbber.h	21;"	d
KATZE_THROBBER_CLASS	katze/katze-throbber.h	23;"	d
KATZE_THROBBER_GET_CLASS	katze/katze-throbber.h	29;"	d
KATZE_TYPE_ARRAY	katze/katze-array.h	19;"	d
KATZE_TYPE_ARRAY_ACTION	katze/katze-arrayaction.h	21;"	d
KATZE_TYPE_HTTP_AUTH	katze/katze-http-auth.h	21;"	d
KATZE_TYPE_HTTP_COOKIES	katze/katze-http-cookies.h	21;"	d
KATZE_TYPE_HTTP_COOKIES_SQLITE	katze/katze-http-cookies-sqlite.h	21;"	d
KATZE_TYPE_ITEM	katze/katze-item.h	19;"	d
KATZE_TYPE_NET	katze/katze-net.h	21;"	d
KATZE_TYPE_PREFERENCES	katze/katze-preferences.h	19;"	d
KATZE_TYPE_SCROLLED	katze/katze-scrolled.h	21;"	d
KATZE_TYPE_SEPARATOR_ACTION	katze/katze-separatoraction.h	19;"	d
KATZE_TYPE_THROBBER	katze/katze-throbber.h	19;"	d
KatzeArray	katze/katze-array.h	/^typedef struct _KatzeArray                       KatzeArray;$/;"	t	typeref:struct:_KatzeArray
KatzeArrayAction	katze/katze-arrayaction.h	/^typedef struct _KatzeArrayAction         KatzeArrayAction;$/;"	t	typeref:struct:_KatzeArrayAction
KatzeArrayActionClass	katze/katze-arrayaction.h	/^typedef struct _KatzeArrayActionClass    KatzeArrayActionClass;$/;"	t	typeref:struct:_KatzeArrayActionClass
KatzeArrayClass	katze/katze-array.h	/^typedef struct _KatzeArrayClass                  KatzeArrayClass;$/;"	t	typeref:struct:_KatzeArrayClass
KatzeHttpAuth	katze/katze-http-auth.h	/^typedef struct _KatzeHttpAuth                KatzeHttpAuth;$/;"	t	typeref:struct:_KatzeHttpAuth
KatzeHttpAuthClass	katze/katze-http-auth.h	/^typedef struct _KatzeHttpAuthClass           KatzeHttpAuthClass;$/;"	t	typeref:struct:_KatzeHttpAuthClass
KatzeHttpAuthLogin	katze/katze-http-auth.c	/^} KatzeHttpAuthLogin;$/;"	t	typeref:struct:__anon30	file:
KatzeHttpAuthSave	katze/katze-http-auth.c	/^} KatzeHttpAuthSave;$/;"	t	typeref:struct:__anon29	file:
KatzeHttpCookies	katze/katze-http-cookies.h	/^typedef struct _KatzeHttpCookies                KatzeHttpCookies;$/;"	t	typeref:struct:_KatzeHttpCookies
KatzeHttpCookiesClass	katze/katze-http-cookies.h	/^typedef struct _KatzeHttpCookiesClass           KatzeHttpCookiesClass;$/;"	t	typeref:struct:_KatzeHttpCookiesClass
KatzeHttpCookiesSqlite	katze/katze-http-cookies-sqlite.h	/^typedef struct _KatzeHttpCookiesSqlite                KatzeHttpCookiesSqlite;$/;"	t	typeref:struct:_KatzeHttpCookiesSqlite
KatzeHttpCookiesSqliteClass	katze/katze-http-cookies-sqlite.h	/^typedef struct _KatzeHttpCookiesSqliteClass           KatzeHttpCookiesSqliteClass;$/;"	t	typeref:struct:_KatzeHttpCookiesSqliteClass
KatzeItem	katze/katze-item.h	/^typedef struct _KatzeItem                KatzeItem;$/;"	t	typeref:struct:_KatzeItem
KatzeItemClass	katze/katze-item.h	/^typedef struct _KatzeItemClass           KatzeItemClass;$/;"	t	typeref:struct:_KatzeItemClass
KatzeMenuPos	katze/katze-utils.h	/^} KatzeMenuPos;$/;"	t	typeref:enum:__anon38
KatzeNet	katze/katze-net.h	/^typedef struct _KatzeNet                KatzeNet;$/;"	t	typeref:struct:_KatzeNet
KatzeNetClass	katze/katze-net.h	/^typedef struct _KatzeNetClass           KatzeNetClass;$/;"	t	typeref:struct:_KatzeNetClass
KatzeNetIconPriv	midori/midori-view.c	/^} KatzeNetIconPriv;$/;"	t	typeref:struct:__anon45	file:
KatzeNetPriv	katze/katze-net.c	/^} KatzeNetPriv;$/;"	t	typeref:struct:__anon32	file:
KatzeNetRequest	katze/katze-net.h	/^} KatzeNetRequest;$/;"	t	typeref:struct:__anon34
KatzeNetStatus	katze/katze-net.h	/^} KatzeNetStatus;$/;"	t	typeref:enum:__anon33
KatzeNetStatusCb	katze/katze-net.h	/^typedef gboolean (*KatzeNetStatusCb)     (KatzeNetRequest*   request,$/;"	t
KatzeNetTransferCb	katze/katze-net.h	/^typedef void     (*KatzeNetTransferCb)   (KatzeNetRequest*   request,$/;"	t
KatzePopupInfo	katze/katze-utils.c	/^} KatzePopupInfo;$/;"	t	typeref:struct:__anon35	file:
KatzePreferences	katze/katze-preferences.h	/^typedef struct _KatzePreferences                KatzePreferences;$/;"	t	typeref:struct:_KatzePreferences
KatzePreferencesClass	katze/katze-preferences.h	/^typedef struct _KatzePreferencesClass           KatzePreferencesClass;$/;"	t	typeref:struct:_KatzePreferencesClass
KatzePreferencesPrivate	katze/katze-preferences.h	/^typedef struct _KatzePreferencesPrivate         KatzePreferencesPrivate;$/;"	t	typeref:struct:_KatzePreferencesPrivate
KatzeScrolled	katze/katze-scrolled.h	/^typedef struct _KatzeScrolled KatzeScrolled;$/;"	t	typeref:struct:_KatzeScrolled
KatzeScrolledClass	katze/katze-scrolled.h	/^typedef struct _KatzeScrolledClass KatzeScrolledClass;$/;"	t	typeref:struct:_KatzeScrolledClass
KatzeScrolledEventHandler	katze/katze-scrolled.c	/^typedef gboolean (*KatzeScrolledEventHandler)(GdkEvent*           event,$/;"	t	file:
KatzeScrolledPrivate	katze/katze-scrolled.h	/^typedef struct _KatzeScrolledPrivate KatzeScrolledPrivate;$/;"	t	typeref:struct:_KatzeScrolledPrivate
KatzeScrolledState	katze/katze-scrolled.c	/^typedef struct _KatzeScrolledState KatzeScrolledState;$/;"	t	typeref:struct:_KatzeScrolledState	file:
KatzeSeparatorAction	katze/katze-separatoraction.h	/^typedef struct _KatzeSeparatorAction         KatzeSeparatorAction;$/;"	t	typeref:struct:_KatzeSeparatorAction
KatzeSeparatorActionClass	katze/katze-separatoraction.h	/^typedef struct _KatzeSeparatorActionClass    KatzeSeparatorActionClass;$/;"	t	typeref:struct:_KatzeSeparatorActionClass
KatzeThrobber	katze/katze-throbber.h	/^typedef struct _KatzeThrobber                KatzeThrobber;$/;"	t	typeref:struct:_KatzeThrobber
KatzeThrobberClass	katze/katze-throbber.h	/^typedef struct _KatzeThrobberClass           KatzeThrobberClass;$/;"	t	typeref:struct:_KatzeThrobberClass
KatzeThrobberPrivate	katze/katze-throbber.h	/^typedef struct _KatzeThrobberPrivate         KatzeThrobberPrivate;$/;"	t	typeref:struct:_KatzeThrobberPrivate
LAST_SIGNAL	extensions/cookie-manager/cookie-manager.c	/^	LAST_SIGNAL$/;"	e	enum:__anon22	file:
LAST_SIGNAL	extensions/feed-panel/feed-panel.c	/^    LAST_SIGNAL$/;"	e	enum:__anon14	file:
LAST_SIGNAL	katze/katze-array.c	/^    LAST_SIGNAL$/;"	e	enum:__anon39	file:
LAST_SIGNAL	katze/katze-arrayaction.c	/^    LAST_SIGNAL$/;"	e	enum:__anon37	file:
LAST_SIGNAL	katze/katze-item.c	/^    LAST_SIGNAL$/;"	e	enum:__anon28	file:
LAST_SIGNAL	midori/gtkiconentry.c	/^  LAST_SIGNAL$/;"	e	enum:__anon55	file:
LAST_SIGNAL	midori/midori-app.c	/^    LAST_SIGNAL$/;"	e	enum:__anon47	file:
LAST_SIGNAL	midori/midori-browser.c	/^    LAST_SIGNAL$/;"	e	enum:__anon46	file:
LAST_SIGNAL	midori/midori-extension.c	/^    LAST_SIGNAL$/;"	e	enum:__anon74	file:
LAST_SIGNAL	midori/midori-locationaction.c	/^    LAST_SIGNAL$/;"	e	enum:__anon49	file:
LAST_SIGNAL	midori/midori-panel.c	/^    LAST_SIGNAL$/;"	e	enum:__anon66	file:
LAST_SIGNAL	midori/midori-searchaction.c	/^    LAST_SIGNAL$/;"	e	enum:__anon75	file:
LAST_SIGNAL	midori/midori-view.c	/^    LAST_SIGNAL$/;"	e	enum:__anon44	file:
LAST_SIGNAL	midori/midori-viewable.c	/^    LAST_SIGNAL$/;"	e	enum:__anon41	file:
LDFLAGS	debian/rules	/^LDFLAGS=$(shell dpkg-buildflags --get LDFLAGS)$/;"	m
LIBDIR	_build_/c4che/default.cache.py	/^LIBDIR = '\/usr\/lib'$/;"	v
LIBDIR	_build_/default/config.h	11;"	d
LIBEXECDIR	_build_/c4che/default.cache.py	/^LIBEXECDIR = '\/usr\/libexec'$/;"	v
LIBNOTIFY_VERSION	_build_/c4che/default.cache.py	/^LIBNOTIFY_VERSION = '0.7.5'$/;"	v
LIBNOTIFY_VERSION	_build_/default/config.h	19;"	d
LIBPATH_ST	_build_/c4che/default.cache.py	/^LIBPATH_ST = '-L%s'$/;"	v
LIBPATH_XSS	_build_/c4che/default.cache.py	/^LIBPATH_XSS = ['\/usr\/X11R6\/lib']$/;"	v
LIBSOUP_2_4_VERSION	_build_/c4che/default.cache.py	/^LIBSOUP_2_4_VERSION = '2.40.3'$/;"	v
LIBSOUP_2_4_VERSION	_build_/default/config.h	34;"	d
LIBSOUP_USE_UNSTABLE_REQUEST_API	midori/main.c	39;"	d	file:
LIBSOUP_USE_UNSTABLE_REQUEST_API	midori/midori-preferences.c	21;"	d	file:
LIBSOUP_VERSION	_build_/c4che/default.cache.py	/^LIBSOUP_VERSION = '2.40.3'$/;"	v
LIBSOUP_VERSION	_build_/default/config.h	35;"	d
LIBWEBKIT_PKG	debian/rules	/^LIBWEBKIT_PKG=$(shell dpkg-query -p libwebkitgtk-dev | grep Depends | sed -r 's\/.*(libwebkitgtk[^ ]+).*\/\\1\/')$/;"	m
LIB_GIO	_build_/c4che/default.cache.py	/^LIB_GIO = ['gio-2.0', 'gobject-2.0', 'glib-2.0']$/;"	v
LIB_GMODULE	_build_/c4che/default.cache.py	/^LIB_GMODULE = ['gmodule-2.0', 'glib-2.0']$/;"	v
LIB_GOBJECT	_build_/c4che/default.cache.py	/^LIB_GOBJECT = ['gobject-2.0', 'glib-2.0']$/;"	v
LIB_GTHREAD	_build_/c4che/default.cache.py	/^LIB_GTHREAD = ['gthread-2.0', 'glib-2.0']$/;"	v
LIB_GTK	_build_/c4che/default.cache.py	/^LIB_GTK = ['gtk-x11-2.0', 'gdk-x11-2.0', 'atk-1.0', 'gio-2.0', 'pangoft2-1.0', 'pangocairo-1.0', 'gdk_pixbuf-2.0', 'cairo', 'pango-1.0', 'freetype', 'fontconfig', 'gobject-2.0', 'glib-2.0']$/;"	v
LIB_JAVASCRIPTCOREGTK	_build_/c4che/default.cache.py	/^LIB_JAVASCRIPTCOREGTK = ['javascriptcoregtk-1.0', 'glib-2.0']$/;"	v
LIB_LIBNOTIFY	_build_/c4che/default.cache.py	/^LIB_LIBNOTIFY = ['notify', 'gdk_pixbuf-2.0', 'gio-2.0', 'gobject-2.0', 'glib-2.0']$/;"	v
LIB_LIBSOUP	_build_/c4che/default.cache.py	/^LIB_LIBSOUP = ['soup-2.4', 'gio-2.0', 'gobject-2.0', 'glib-2.0']$/;"	v
LIB_LIBSOUP_2_29_3	_build_/c4che/default.cache.py	/^LIB_LIBSOUP_2_29_3 = ['soup-2.4', 'gio-2.0', 'gobject-2.0', 'glib-2.0']$/;"	v
LIB_LIBSOUP_2_29_91	_build_/c4che/default.cache.py	/^LIB_LIBSOUP_2_29_91 = ['soup-2.4', 'gio-2.0', 'gobject-2.0', 'glib-2.0']$/;"	v
LIB_LIBSOUP_2_37_1	_build_/c4che/default.cache.py	/^LIB_LIBSOUP_2_37_1 = ['soup-2.4', 'gio-2.0', 'gobject-2.0', 'glib-2.0']$/;"	v
LIB_LIBXML	_build_/c4che/default.cache.py	/^LIB_LIBXML = ['xml2']$/;"	v
LIB_M	_build_/c4che/default.cache.py	/^LIB_M = ['m']$/;"	v
LIB_SQLITE	_build_/c4che/default.cache.py	/^LIB_SQLITE = ['sqlite3']$/;"	v
LIB_ST	_build_/c4che/default.cache.py	/^LIB_ST = '-l%s'$/;"	v
LIB_UNIQUE	_build_/c4che/default.cache.py	/^LIB_UNIQUE = ['unique-1.0', 'gtk-x11-2.0', 'gdk-x11-2.0', 'atk-1.0', 'gio-2.0', 'pangoft2-1.0', 'pangocairo-1.0', 'gdk_pixbuf-2.0', 'cairo', 'pango-1.0', 'freetype', 'fontconfig', 'gobject-2.0', 'glib-2.0']$/;"	v
LIB_WEBKIT	_build_/c4che/default.cache.py	/^LIB_WEBKIT = ['webkitgtk-1.0', 'gtk-x11-2.0', 'soup-2.4', 'javascriptcoregtk-1.0', 'gdk-x11-2.0', 'atk-1.0', 'pangoft2-1.0', 'pangocairo-1.0', 'gdk_pixbuf-2.0', 'cairo', 'pango-1.0', 'freetype', 'fontconfig', 'gio-2.0', 'gobject-2.0', 'glib-2.0']$/;"	v
LIB_X11	_build_/c4che/default.cache.py	/^LIB_X11 = ['X11']$/;"	v
LIB_XSS	_build_/c4che/default.cache.py	/^LIB_XSS = ['Xss']$/;"	v
LINKFLAGS	_build_/c4che/default.cache.py	/^LINKFLAGS = ['-Wl,-Bsymbolic-functions', '-Wl,-z,relro', '-Wl,--as-needed', '-Wl,-O1']$/;"	v
LINKFLAGS	debian/rules	/^export LINKFLAGS=$(LDFLAGS)$/;"	m
LINKFLAGS_GIO	_build_/c4che/default.cache.py	/^LINKFLAGS_GIO = ['-pthread']$/;"	v
LINKFLAGS_GMODULE	_build_/c4che/default.cache.py	/^LINKFLAGS_GMODULE = ['-pthread', '-Wl,--export-dynamic']$/;"	v
LINKFLAGS_GTHREAD	_build_/c4che/default.cache.py	/^LINKFLAGS_GTHREAD = ['-pthread']$/;"	v
LINKFLAGS_GTK	_build_/c4che/default.cache.py	/^LINKFLAGS_GTK = ['-pthread']$/;"	v
LINKFLAGS_LIBNOTIFY	_build_/c4che/default.cache.py	/^LINKFLAGS_LIBNOTIFY = ['-pthread']$/;"	v
LINKFLAGS_LIBSOUP	_build_/c4che/default.cache.py	/^LINKFLAGS_LIBSOUP = ['-pthread']$/;"	v
LINKFLAGS_LIBSOUP_2_29_3	_build_/c4che/default.cache.py	/^LINKFLAGS_LIBSOUP_2_29_3 = ['-pthread']$/;"	v
LINKFLAGS_LIBSOUP_2_29_91	_build_/c4che/default.cache.py	/^LINKFLAGS_LIBSOUP_2_29_91 = ['-pthread']$/;"	v
LINKFLAGS_LIBSOUP_2_37_1	_build_/c4che/default.cache.py	/^LINKFLAGS_LIBSOUP_2_37_1 = ['-pthread']$/;"	v
LINKFLAGS_MACBUNDLE	_build_/c4che/default.cache.py	/^LINKFLAGS_MACBUNDLE = ['-bundle', '-undefined', 'dynamic_lookup']$/;"	v
LINKFLAGS_UNIQUE	_build_/c4che/default.cache.py	/^LINKFLAGS_UNIQUE = ['-pthread']$/;"	v
LINKFLAGS_WEBKIT	_build_/c4che/default.cache.py	/^LINKFLAGS_WEBKIT = ['-pthread']$/;"	v
LINK_CC	_build_/c4che/default.cache.py	/^LINK_CC = ['\/usr\/bin\/gcc']$/;"	v
LOCALEDIR	_build_/c4che/default.cache.py	/^LOCALEDIR = '\/usr\/share\/locale'$/;"	v
LOCALEDIR	_build_/default/config.h	7;"	d
LOCALSTATEDIR	_build_/c4che/default.cache.py	/^LOCALSTATEDIR = '\/usr\/var'$/;"	v
LOG_FORMAT	waf-modules/wafadmin/Constants.py	/^LOG_FORMAT="%(asctime)s %(c1)s%(zone)s%(c2)s %(message)s"$/;"	v
MANDIR	_build_/c4che/default.cache.py	/^MANDIR = '\/usr\/share\/man'$/;"	v
MAXCHARS	extensions/formhistory.c	11;"	d	file:
MAXFD	waf-modules/wafadmin/pproc.py	/^	MAXFD=256$/;"	v
MAXFD	waf-modules/wafadmin/pproc.py	/^	MAXFD=os.sysconf("SC_OPEN_MAX")$/;"	v
MAXHOSTS	midori/sokoke.c	1432;"	d	file:
MAXJOBS	waf-modules/wafadmin/Constants.py	/^MAXJOBS=99999999$/;"	v
MAXLENGTH	extensions/web-cache.c	24;"	d	file:
MAXPARALLEL	waf-modules/wafadmin/Constants.py	/^MAXPARALLEL="MAXPARALLEL"$/;"	v
MAX_ICONS	midori/gtkiconentry.c	64;"	d	file:
MAX_ITEMS	midori/midori-locationaction.c	29;"	d	file:
MCE_SIGNAL_MATCH	midori/midori-browser.c	48;"	d	file:
MDATADIR	_build_/c4che/default.cache.py	/^MDATADIR = '\/usr\/share'$/;"	v
MDATADIR	_build_/default/config.h	13;"	d
MESettingBoolean	midori/midori-extension.c	/^} MESettingBoolean;$/;"	t	typeref:struct:__anon69	file:
MESettingInteger	midori/midori-extension.c	/^} MESettingInteger;$/;"	t	typeref:struct:__anon70	file:
MESettingString	midori/midori-extension.c	/^} MESettingString;$/;"	t	typeref:struct:__anon71	file:
MESettingStringList	midori/midori-extension.c	/^} MESettingStringList;$/;"	t	typeref:struct:__anon72	file:
META_DATA_CHANGED	katze/katze-item.c	/^    META_DATA_CHANGED,$/;"	e	enum:__anon28	file:
MIDORI_APP	midori/midori-app.h	24;"	d
MIDORI_APP_CLASS	midori/midori-app.h	26;"	d
MIDORI_APP_GET_CLASS	midori/midori-app.h	32;"	d
MIDORI_BOOKMARKS	panels/midori-bookmarks.h	23;"	d
MIDORI_BOOKMARKS_CLASS	panels/midori-bookmarks.h	25;"	d
MIDORI_BOOKMARKS_GET_CLASS	panels/midori-bookmarks.h	31;"	d
MIDORI_BROWSER	midori/midori-browser.h	27;"	d
MIDORI_BROWSER_CLASS	midori/midori-browser.h	29;"	d
MIDORI_BROWSER_GET_CLASS	midori/midori-browser.h	35;"	d
MIDORI_CHECK_VERSION	midori/midori.h	32;"	d
MIDORI_CLEAR_COOKIES	midori/midori-websettings.h	/^    MIDORI_CLEAR_COOKIES = 2, \/* deprecated *\/$/;"	e	enum:__anon57
MIDORI_CLEAR_FLASH_COOKIES	midori/midori-websettings.h	/^    MIDORI_CLEAR_FLASH_COOKIES = 4, \/* deprecated *\/$/;"	e	enum:__anon57
MIDORI_CLEAR_HISTORY	midori/midori-websettings.h	/^    MIDORI_CLEAR_HISTORY = 1,$/;"	e	enum:__anon57
MIDORI_CLEAR_NONE	midori/midori-websettings.h	/^    MIDORI_CLEAR_NONE = 0,$/;"	e	enum:__anon57
MIDORI_CLEAR_ON_QUIT	midori/midori-websettings.h	/^    MIDORI_CLEAR_ON_QUIT = 32,$/;"	e	enum:__anon57
MIDORI_CLEAR_SESSION	midori/midori-websettings.h	/^    MIDORI_CLEAR_SESSION = 128,$/;"	e	enum:__anon57
MIDORI_CLEAR_TRASH	midori/midori-websettings.h	/^    MIDORI_CLEAR_TRASH = 16, \/* deprecated *\/$/;"	e	enum:__anon57
MIDORI_CLEAR_WEBSITE_ICONS	midori/midori-websettings.h	/^    MIDORI_CLEAR_WEBSITE_ICONS = 8, \/* deprecated *\/$/;"	e	enum:__anon57
MIDORI_CLEAR_WEB_CACHE	midori/midori-websettings.h	/^    MIDORI_CLEAR_WEB_CACHE = 64, \/* deprecated *\/$/;"	e	enum:__anon57
MIDORI_DUMMY_VIEWABLE	midori/midori-panel.c	954;"	d	file:
MIDORI_ENCODING_CHINESE	midori/midori-websettings.h	/^    MIDORI_ENCODING_CHINESE,$/;"	e	enum:__anon60
MIDORI_ENCODING_CUSTOM	midori/midori-websettings.h	/^    MIDORI_ENCODING_CUSTOM$/;"	e	enum:__anon60
MIDORI_ENCODING_JAPANESE	midori/midori-websettings.h	/^    MIDORI_ENCODING_JAPANESE,$/;"	e	enum:__anon60
MIDORI_ENCODING_KOREAN	midori/midori-websettings.h	/^    MIDORI_ENCODING_KOREAN,$/;"	e	enum:__anon60
MIDORI_ENCODING_RUSSIAN	midori/midori-websettings.h	/^    MIDORI_ENCODING_RUSSIAN,$/;"	e	enum:__anon60
MIDORI_ENCODING_UNICODE	midori/midori-websettings.h	/^    MIDORI_ENCODING_UNICODE,$/;"	e	enum:__anon60
MIDORI_ENCODING_WESTERN	midori/midori-websettings.h	/^    MIDORI_ENCODING_WESTERN,$/;"	e	enum:__anon60
MIDORI_EVENT_CONTEXT_MENU	midori/midori-platform.h	27;"	d
MIDORI_EVENT_CONTEXT_MENU	midori/midori-platform.h	31;"	d
MIDORI_EVENT_NEW_TAB	midori/midori-platform.h	35;"	d
MIDORI_EXTENSION	midori/midori-extension.h	21;"	d
MIDORI_EXTENSIONS	panels/midori-extensions.h	23;"	d
MIDORI_EXTENSIONS_CLASS	panels/midori-extensions.h	25;"	d
MIDORI_EXTENSIONS_COLUMN	_build_/default/midori/midori-core.h	28;"	d
MIDORI_EXTENSIONS_COLUMN	_build_/default/midori/midori-extensions-column.c	11;"	d	file:
MIDORI_EXTENSIONS_COLUMN_CLASS	_build_/default/midori/midori-core.h	29;"	d
MIDORI_EXTENSIONS_COLUMN_CLASS	_build_/default/midori/midori-extensions-column.c	12;"	d	file:
MIDORI_EXTENSIONS_COLUMN_DUMMY_PROPERTY	_build_/default/midori/midori-extensions-column.c	/^	MIDORI_EXTENSIONS_COLUMN_DUMMY_PROPERTY$/;"	e	enum:__anon10	file:
MIDORI_EXTENSIONS_COLUMN_GET_CLASS	_build_/default/midori/midori-core.h	32;"	d
MIDORI_EXTENSIONS_COLUMN_GET_CLASS	_build_/default/midori/midori-extensions-column.c	15;"	d	file:
MIDORI_EXTENSIONS_GET_CLASS	panels/midori-extensions.h	31;"	d
MIDORI_EXTENSION_CLASS	midori/midori-extension.h	23;"	d
MIDORI_EXTENSION_GET_CLASS	midori/midori-extension.h	29;"	d
MIDORI_FINDBAR	toolbars/midori-findbar.h	21;"	d
MIDORI_FINDBAR_CLASS	toolbars/midori-findbar.h	23;"	d
MIDORI_FINDBAR_GET_CLASS	toolbars/midori-findbar.h	29;"	d
MIDORI_HISTORY	panels/midori-history.h	21;"	d
MIDORI_HISTORY_CLASS	panels/midori-history.h	23;"	d
MIDORI_HISTORY_GET_CLASS	panels/midori-history.h	29;"	d
MIDORI_IDENT_CUSTOM	midori/midori-websettings.h	/^    MIDORI_IDENT_CUSTOM,$/;"	e	enum:__anon64
MIDORI_IDENT_EXPLORER	midori/midori-websettings.h	/^    MIDORI_IDENT_EXPLORER,$/;"	e	enum:__anon64
MIDORI_IDENT_FIREFOX	midori/midori-websettings.h	/^    MIDORI_IDENT_FIREFOX,$/;"	e	enum:__anon64
MIDORI_IDENT_GENUINE	midori/midori-websettings.h	/^    MIDORI_IDENT_GENUINE \/* Midori *\/,$/;"	e	enum:__anon64
MIDORI_IDENT_IPHONE	midori/midori-websettings.h	/^    MIDORI_IDENT_IPHONE,$/;"	e	enum:__anon64
MIDORI_IDENT_MIDORI	midori/midori-websettings.h	/^    MIDORI_IDENT_MIDORI \/* Automatic *\/,$/;"	e	enum:__anon64
MIDORI_IDENT_SAFARI	midori/midori-websettings.h	/^    MIDORI_IDENT_SAFARI,$/;"	e	enum:__anon64
MIDORI_IS_APP	midori/midori-app.h	28;"	d
MIDORI_IS_APP_CLASS	midori/midori-app.h	30;"	d
MIDORI_IS_BOOKMARKS	panels/midori-bookmarks.h	27;"	d
MIDORI_IS_BOOKMARKS_CLASS	panels/midori-bookmarks.h	29;"	d
MIDORI_IS_BROWSER	midori/midori-browser.h	31;"	d
MIDORI_IS_BROWSER_CLASS	midori/midori-browser.h	33;"	d
MIDORI_IS_DUMMY_VIEWABLE	midori/midori-panel.c	956;"	d	file:
MIDORI_IS_EXTENSION	midori/midori-extension.h	25;"	d
MIDORI_IS_EXTENSIONS	panels/midori-extensions.h	27;"	d
MIDORI_IS_EXTENSIONS_CLASS	panels/midori-extensions.h	29;"	d
MIDORI_IS_EXTENSIONS_COLUMN	_build_/default/midori/midori-core.h	30;"	d
MIDORI_IS_EXTENSIONS_COLUMN	_build_/default/midori/midori-extensions-column.c	13;"	d	file:
MIDORI_IS_EXTENSIONS_COLUMN_CLASS	_build_/default/midori/midori-core.h	31;"	d
MIDORI_IS_EXTENSIONS_COLUMN_CLASS	_build_/default/midori/midori-extensions-column.c	14;"	d	file:
MIDORI_IS_EXTENSION_CLASS	midori/midori-extension.h	27;"	d
MIDORI_IS_FINDBAR	toolbars/midori-findbar.h	25;"	d
MIDORI_IS_FINDBAR_CLASS	toolbars/midori-findbar.h	27;"	d
MIDORI_IS_HISTORY	panels/midori-history.h	25;"	d
MIDORI_IS_HISTORY_CLASS	panels/midori-history.h	27;"	d
MIDORI_IS_LOCATION_ACTION	midori/midori-locationaction.h	26;"	d
MIDORI_IS_LOCATION_ACTION_CLASS	midori/midori-locationaction.h	28;"	d
MIDORI_IS_PANED_ACTION	midori/midori-panedaction.h	25;"	d
MIDORI_IS_PANED_ACTION_CLASS	midori/midori-panedaction.h	27;"	d
MIDORI_IS_PANEL	midori/midori-panel.h	29;"	d
MIDORI_IS_PANEL_CLASS	midori/midori-panel.h	31;"	d
MIDORI_IS_PREFERENCES	midori/midori-preferences.h	27;"	d
MIDORI_IS_PREFERENCES_CLASS	midori/midori-preferences.h	29;"	d
MIDORI_IS_SEARCH_ACTION	midori/midori-searchaction.h	25;"	d
MIDORI_IS_SEARCH_ACTION_CLASS	midori/midori-searchaction.h	27;"	d
MIDORI_IS_TRANSFERBAR	toolbars/midori-transferbar.h	25;"	d
MIDORI_IS_TRANSFERBAR_CLASS	toolbars/midori-transferbar.h	27;"	d
MIDORI_IS_TRANSFERS	panels/midori-transfers.h	29;"	d
MIDORI_IS_TRANSFERS_CLASS	panels/midori-transfers.h	31;"	d
MIDORI_IS_URI	_build_/default/katze/midori-uri.c	25;"	d	file:
MIDORI_IS_URI	_build_/default/midori/midori-core.h	19;"	d
MIDORI_IS_URI_CLASS	_build_/default/katze/midori-uri.c	26;"	d	file:
MIDORI_IS_URI_CLASS	_build_/default/midori/midori-core.h	20;"	d
MIDORI_IS_VIEW	midori/midori-view.h	60;"	d
MIDORI_IS_VIEWABLE	midori/midori-viewable.h	23;"	d
MIDORI_IS_VIEW_CLASS	midori/midori-view.h	62;"	d
MIDORI_IS_WEB_SETTINGS	midori/midori-websettings.h	27;"	d
MIDORI_IS_WEB_SETTINGS_CLASS	midori/midori-websettings.h	29;"	d
MIDORI_KEYS_MODIFIER_MASK	midori/midori-view.c	1659;"	d	file:
MIDORI_LOAD_COMMITTED	midori/midori-view.h	22;"	d
MIDORI_LOAD_FINISHED	midori/midori-view.h	23;"	d
MIDORI_LOAD_PROVISIONAL	midori/midori-view.h	21;"	d
MIDORI_LOCATION_ACTION	midori/midori-locationaction.h	22;"	d
MIDORI_LOCATION_ACTION_CLASS	midori/midori-locationaction.h	24;"	d
MIDORI_LOCATION_ACTION_GET_CLASS	midori/midori-locationaction.h	30;"	d
MIDORI_MAJOR_VERSION	_build_/c4che/default.cache.py	/^MIDORI_MAJOR_VERSION = 0$/;"	v
MIDORI_MAJOR_VERSION	_build_/default/config.h	46;"	d
MIDORI_MICRO_VERSION	_build_/c4che/default.cache.py	/^MIDORI_MICRO_VERSION = 3$/;"	v
MIDORI_MICRO_VERSION	_build_/default/config.h	48;"	d
MIDORI_MINOR_VERSION	_build_/c4che/default.cache.py	/^MIDORI_MINOR_VERSION = 4$/;"	v
MIDORI_MINOR_VERSION	_build_/default/config.h	47;"	d
MIDORI_MODULE_PREFIX	midori/midori-platform.h	41;"	d
MIDORI_MODULE_PREFIX	midori/midori-platform.h	43;"	d
MIDORI_MOD_BACKGROUND	midori/midori-platform.h	23;"	d
MIDORI_MOD_NEW_TAB	midori/midori-platform.h	22;"	d
MIDORI_MOD_NEW_WINDOW	midori/midori-platform.h	21;"	d
MIDORI_MOD_SCROLL	midori/midori-platform.h	24;"	d
MIDORI_NEW_PAGE_CURRENT	midori/midori-websettings.h	/^    MIDORI_NEW_PAGE_CURRENT$/;"	e	enum:__anon61
MIDORI_NEW_PAGE_TAB	midori/midori-websettings.h	/^    MIDORI_NEW_PAGE_TAB,$/;"	e	enum:__anon61
MIDORI_NEW_PAGE_WINDOW	midori/midori-websettings.h	/^    MIDORI_NEW_PAGE_WINDOW,$/;"	e	enum:__anon61
MIDORI_NEW_VIEW_BACKGROUND	midori/midori-view.h	/^    MIDORI_NEW_VIEW_BACKGROUND,$/;"	e	enum:__anon51
MIDORI_NEW_VIEW_TAB	midori/midori-view.h	/^    MIDORI_NEW_VIEW_TAB,$/;"	e	enum:__anon51
MIDORI_NEW_VIEW_WINDOW	midori/midori-view.h	/^    MIDORI_NEW_VIEW_WINDOW$/;"	e	enum:__anon51
MIDORI_PANED_ACTION	midori/midori-panedaction.h	21;"	d
MIDORI_PANED_ACTION_CLASS	midori/midori-panedaction.h	23;"	d
MIDORI_PANED_ACTION_GET_CLASS	midori/midori-panedaction.h	29;"	d
MIDORI_PANEL	midori/midori-panel.h	25;"	d
MIDORI_PANEL_CLASS	midori/midori-panel.h	27;"	d
MIDORI_PANEL_GET_CLASS	midori/midori-panel.h	33;"	d
MIDORI_PARAM_DELAY_SAVING	midori/midori-websettings.h	37;"	d
MIDORI_PREFERENCES	midori/midori-preferences.h	23;"	d
MIDORI_PREFERENCES_CLASS	midori/midori-preferences.h	25;"	d
MIDORI_PREFERENCES_GET_CLASS	midori/midori-preferences.h	31;"	d
MIDORI_PROXY_AUTOMATIC	midori/midori-websettings.h	/^    MIDORI_PROXY_AUTOMATIC,$/;"	e	enum:__anon63
MIDORI_PROXY_HTTP	midori/midori-websettings.h	/^    MIDORI_PROXY_HTTP,$/;"	e	enum:__anon63
MIDORI_PROXY_NONE	midori/midori-websettings.h	/^    MIDORI_PROXY_NONE$/;"	e	enum:__anon63
MIDORI_SEARCH_ACTION	midori/midori-searchaction.h	21;"	d
MIDORI_SEARCH_ACTION_CLASS	midori/midori-searchaction.h	23;"	d
MIDORI_SEARCH_ACTION_GET_CLASS	midori/midori-searchaction.h	29;"	d
MIDORI_SECURITY_NONE	midori/midori-view.h	/^    MIDORI_SECURITY_NONE, \/* The connection is neither encrypted nor verified. *\/$/;"	e	enum:__anon52
MIDORI_SECURITY_TRUSTED	midori/midori-view.h	/^    MIDORI_SECURITY_TRUSTED \/* The security is validated and trusted. *\/$/;"	e	enum:__anon52
MIDORI_SECURITY_UNKNOWN	midori/midori-view.h	/^    MIDORI_SECURITY_UNKNOWN, \/* The security is unknown, due to lack of validation. *\/$/;"	e	enum:__anon52
MIDORI_STARTUP_BLANK_PAGE	midori/midori-websettings.h	/^    MIDORI_STARTUP_BLANK_PAGE, \/* One blank tab or speed dial is opened *\/$/;"	e	enum:__anon59
MIDORI_STARTUP_DELAYED_PAGES	midori/midori-websettings.h	/^    MIDORI_STARTUP_DELAYED_PAGES \/* The session is saved, loading pages is delayed *\/$/;"	e	enum:__anon59
MIDORI_STARTUP_HOMEPAGE	midori/midori-websettings.h	/^    MIDORI_STARTUP_HOMEPAGE, \/* One homepage tab is opened *\/$/;"	e	enum:__anon59
MIDORI_STARTUP_LAST_OPEN_PAGES	midori/midori-websettings.h	/^    MIDORI_STARTUP_LAST_OPEN_PAGES, \/* The session is loaded and saved *\/$/;"	e	enum:__anon59
MIDORI_TOOLBAR_BOTH	midori/midori-websettings.h	/^    MIDORI_TOOLBAR_BOTH,$/;"	e	enum:__anon62
MIDORI_TOOLBAR_BOTH_HORIZ	midori/midori-websettings.h	/^    MIDORI_TOOLBAR_BOTH_HORIZ$/;"	e	enum:__anon62
MIDORI_TOOLBAR_DEFAULT	midori/midori-websettings.h	/^    MIDORI_TOOLBAR_DEFAULT,$/;"	e	enum:__anon62
MIDORI_TOOLBAR_ICONS	midori/midori-websettings.h	/^    MIDORI_TOOLBAR_ICONS,$/;"	e	enum:__anon62
MIDORI_TOOLBAR_SMALL_ICONS	midori/midori-websettings.h	/^    MIDORI_TOOLBAR_SMALL_ICONS,$/;"	e	enum:__anon62
MIDORI_TOOLBAR_TEXT	midori/midori-websettings.h	/^    MIDORI_TOOLBAR_TEXT,$/;"	e	enum:__anon62
MIDORI_TRANSFERBAR	toolbars/midori-transferbar.h	21;"	d
MIDORI_TRANSFERBAR_CLASS	toolbars/midori-transferbar.h	23;"	d
MIDORI_TRANSFERBAR_GET_CLASS	toolbars/midori-transferbar.h	29;"	d
MIDORI_TRANSFERS	panels/midori-transfers.h	25;"	d
MIDORI_TRANSFERS_CLASS	panels/midori-transfers.h	27;"	d
MIDORI_TRANSFERS_GET_CLASS	panels/midori-transfers.h	33;"	d
MIDORI_TYPE_APP	midori/midori-app.h	22;"	d
MIDORI_TYPE_BOOKMARKS	panels/midori-bookmarks.h	21;"	d
MIDORI_TYPE_BROWSER	midori/midori-browser.h	25;"	d
MIDORI_TYPE_DUMMY_VIEWABLE	midori/midori-panel.c	953;"	d	file:
MIDORI_TYPE_EXTENSION	midori/midori-extension.h	19;"	d
MIDORI_TYPE_EXTENSIONS	panels/midori-extensions.h	21;"	d
MIDORI_TYPE_EXTENSIONS_COLUMN	_build_/default/midori/midori-core.h	27;"	d
MIDORI_TYPE_EXTENSIONS_COLUMN	_build_/default/midori/midori-extensions-column.c	10;"	d	file:
MIDORI_TYPE_FINDBAR	toolbars/midori-findbar.h	19;"	d
MIDORI_TYPE_HISTORY	panels/midori-history.h	19;"	d
MIDORI_TYPE_IDENTITY	midori/midori-websettings.h	154;"	d
MIDORI_TYPE_LOAD_STATUS	midori/midori-view.h	25;"	d
MIDORI_TYPE_LOCATION_ACTION	midori/midori-locationaction.h	20;"	d
MIDORI_TYPE_NEW_PAGE	midori/midori-websettings.h	108;"	d
MIDORI_TYPE_NEW_VIEW	midori/midori-view.h	37;"	d
MIDORI_TYPE_PANED_ACTION	midori/midori-panedaction.h	19;"	d
MIDORI_TYPE_PANEL	midori/midori-panel.h	23;"	d
MIDORI_TYPE_PREFERENCES	midori/midori-preferences.h	21;"	d
MIDORI_TYPE_PREFERRED_ENCODING	midori/midori-websettings.h	95;"	d
MIDORI_TYPE_PROXY	midori/midori-websettings.h	137;"	d
MIDORI_TYPE_SEARCH_ACTION	midori/midori-searchaction.h	19;"	d
MIDORI_TYPE_SECURITY	midori/midori-view.h	53;"	d
MIDORI_TYPE_STARTUP	midori/midori-websettings.h	78;"	d
MIDORI_TYPE_TOOLBAR_STYLE	midori/midori-websettings.h	124;"	d
MIDORI_TYPE_TRANSFERBAR	toolbars/midori-transferbar.h	19;"	d
MIDORI_TYPE_TRANSFERS	panels/midori-transfers.h	23;"	d
MIDORI_TYPE_URI	_build_/default/katze/midori-uri.c	22;"	d	file:
MIDORI_TYPE_URI	_build_/default/midori/midori-core.h	16;"	d
MIDORI_TYPE_VIEW	midori/midori-view.h	40;"	d
MIDORI_TYPE_VIEWABLE	midori/midori-viewable.h	19;"	d
MIDORI_TYPE_WEB_SETTINGS	midori/midori-websettings.h	21;"	d
MIDORI_TYPE_WINDOW_STATE	midori/midori-websettings.h	63;"	d
MIDORI_UNIQUE_COMMAND	midori/midori-app.c	53;"	d	file:
MIDORI_URI	_build_/default/katze/midori-uri.c	23;"	d	file:
MIDORI_URI	_build_/default/midori/midori-core.h	17;"	d
MIDORI_URI_CLASS	_build_/default/katze/midori-uri.c	24;"	d	file:
MIDORI_URI_CLASS	_build_/default/midori/midori-core.h	18;"	d
MIDORI_URI_DUMMY_PROPERTY	_build_/default/katze/midori-uri.c	/^	MIDORI_URI_DUMMY_PROPERTY$/;"	e	enum:__anon9	file:
MIDORI_URI_GET_CLASS	_build_/default/katze/midori-uri.c	27;"	d	file:
MIDORI_URI_GET_CLASS	_build_/default/midori/midori-core.h	21;"	d
MIDORI_VERSION	_build_/c4che/default.cache.py	/^MIDORI_VERSION = '0.4.3'$/;"	v
MIDORI_VERSION	_build_/default/config.h	45;"	d
MIDORI_VIEW	midori/midori-view.h	56;"	d
MIDORI_VIEWABLE	midori/midori-viewable.h	21;"	d
MIDORI_VIEWABLE_GET_IFACE	midori/midori-viewable.h	25;"	d
MIDORI_VIEW_CLASS	midori/midori-view.h	58;"	d
MIDORI_VIEW_GET_CLASS	midori/midori-view.h	64;"	d
MIDORI_WEB_SETTINGS	midori/midori-websettings.h	23;"	d
MIDORI_WEB_SETTINGS_CLASS	midori/midori-websettings.h	25;"	d
MIDORI_WEB_SETTINGS_GET_CLASS	midori/midori-websettings.h	31;"	d
MIDORI_WINDOW_FULLSCREEN	midori/midori-websettings.h	/^    MIDORI_WINDOW_FULLSCREEN,$/;"	e	enum:__anon58
MIDORI_WINDOW_MAXIMIZED	midori/midori-websettings.h	/^    MIDORI_WINDOW_MAXIMIZED,$/;"	e	enum:__anon58
MIDORI_WINDOW_MINIMIZED	midori/midori-websettings.h	/^    MIDORI_WINDOW_MINIMIZED,$/;"	e	enum:__anon58
MIDORI_WINDOW_NORMAL	midori/midori-websettings.h	/^    MIDORI_WINDOW_NORMAL,$/;"	e	enum:__anon58
MINCHARS	extensions/formhistory.c	12;"	d	file:
MINLENGTH	extensions/mouse-gestures.c	39;"	d	file:
MISSING	waf-modules/wafadmin/Constants.py	/^MISSING=1$/;"	v
MOC_H	waf-modules/wafadmin/Tools/qt4.py	/^MOC_H=['.h','.hpp','.hxx','.hh']$/;"	v
MOUSE_BUTTON_LEFT	extensions/mouse-gestures.c	/^    MOUSE_BUTTON_LEFT = 1,$/;"	e	enum:_MouseButton	file:
MOUSE_BUTTON_MIDDLE	extensions/mouse-gestures.c	/^    MOUSE_BUTTON_MIDDLE = 2,$/;"	e	enum:_MouseButton	file:
MOUSE_BUTTON_RIGHT	extensions/mouse-gestures.c	/^    MOUSE_BUTTON_RIGHT = 3,$/;"	e	enum:_MouseButton	file:
MOUSE_BUTTON_UNSET	extensions/mouse-gestures.c	/^    MOUSE_BUTTON_UNSET = 0$/;"	e	enum:_MouseButton	file:
MOVE_ITEM	katze/katze-array.c	/^    MOVE_ITEM,$/;"	e	enum:__anon39	file:
MOVE_TAB	midori/midori-browser.c	/^    MOVE_TAB,$/;"	e	enum:__anon46	file:
MSVC_INCDIR	waf-modules/wafadmin/Tools/msvc.py	/^			MSVC_INCDIR=[i for i in line[8:].split(';')if i]$/;"	v
MSVC_LIBDIR	waf-modules/wafadmin/Tools/msvc.py	/^			MSVC_LIBDIR=[i for i in line[4:].split(';')if i]$/;"	v
MSVC_PATH	waf-modules/wafadmin/Tools/msvc.py	/^			MSVC_PATH=path.split(';')$/;"	v
MidoriApp	midori/midori-app.h	/^typedef struct _MidoriApp                MidoriApp;$/;"	t	typeref:struct:_MidoriApp
MidoriAppClass	midori/midori-app.h	/^typedef struct _MidoriAppClass           MidoriAppClass;$/;"	t	typeref:struct:_MidoriAppClass
MidoriAppInstance	midori/midori-app.c	/^    typedef gint MidoriAppInstance;$/;"	t	file:
MidoriAppInstance	midori/midori-app.c	/^    typedef gpointer MidoriAppInstance;$/;"	t	file:
MidoriAppInstance	midori/midori-app.c	/^    typedef osso_context_t* MidoriAppInstance;$/;"	t	file:
MidoriAppInstanceNull	midori/midori-app.c	42;"	d	file:
MidoriAppInstanceNull	midori/midori-app.c	45;"	d	file:
MidoriAppInstanceNull	midori/midori-app.c	56;"	d	file:
MidoriBookmarks	panels/midori-bookmarks.h	/^typedef struct _MidoriBookmarks                MidoriBookmarks;$/;"	t	typeref:struct:_MidoriBookmarks
MidoriBookmarksClass	panels/midori-bookmarks.h	/^typedef struct _MidoriBookmarksClass           MidoriBookmarksClass;$/;"	t	typeref:struct:_MidoriBookmarksClass
MidoriBrowser	midori/midori-browser.h	/^typedef struct _MidoriBrowser                MidoriBrowser;$/;"	t	typeref:struct:_MidoriBrowser
MidoriBrowserClass	midori/midori-browser.h	/^typedef struct _MidoriBrowserClass           MidoriBrowserClass;$/;"	t	typeref:struct:_MidoriBrowserClass
MidoriDummyViewable	midori/midori-panel.c	/^} MidoriDummyViewable;$/;"	t	typeref:struct:__anon67	file:
MidoriDummyViewableClass	midori/midori-panel.c	/^}  MidoriDummyViewableClass;$/;"	t	typeref:struct:__anon68	file:
MidoriExtension	midori/midori-extension.h	/^typedef struct _MidoriExtension                MidoriExtension;$/;"	t	typeref:struct:_MidoriExtension
MidoriExtensionClass	midori/midori-extension.h	/^typedef struct _MidoriExtensionClass           MidoriExtensionClass;$/;"	t	typeref:struct:_MidoriExtensionClass
MidoriExtensionPrivate	midori/midori-extension.h	/^typedef struct _MidoriExtensionPrivate         MidoriExtensionPrivate;$/;"	t	typeref:struct:_MidoriExtensionPrivate
MidoriExtensions	panels/midori-extensions.h	/^typedef struct _MidoriExtensions                MidoriExtensions;$/;"	t	typeref:struct:_MidoriExtensions
MidoriExtensionsClass	panels/midori-extensions.h	/^typedef struct _MidoriExtensionsClass           MidoriExtensionsClass;$/;"	t	typeref:struct:_MidoriExtensionsClass
MidoriExtensionsColumn	_build_/default/midori/midori-core.h	/^typedef struct _MidoriExtensionsColumn MidoriExtensionsColumn;$/;"	t	typeref:struct:_MidoriExtensionsColumn
MidoriExtensionsColumn	_build_/default/midori/midori-extensions-column.c	/^typedef struct _MidoriExtensionsColumn MidoriExtensionsColumn;$/;"	t	typeref:struct:_MidoriExtensionsColumn	file:
MidoriExtensionsColumnClass	_build_/default/midori/midori-core.h	/^typedef struct _MidoriExtensionsColumnClass MidoriExtensionsColumnClass;$/;"	t	typeref:struct:_MidoriExtensionsColumnClass
MidoriExtensionsColumnClass	_build_/default/midori/midori-extensions-column.c	/^typedef struct _MidoriExtensionsColumnClass MidoriExtensionsColumnClass;$/;"	t	typeref:struct:_MidoriExtensionsColumnClass	file:
MidoriExtensionsColumnPrivate	_build_/default/midori/midori-core.h	/^typedef struct _MidoriExtensionsColumnPrivate MidoriExtensionsColumnPrivate;$/;"	t	typeref:struct:_MidoriExtensionsColumnPrivate
MidoriExtensionsColumnPrivate	_build_/default/midori/midori-extensions-column.c	/^typedef struct _MidoriExtensionsColumnPrivate MidoriExtensionsColumnPrivate;$/;"	t	typeref:struct:_MidoriExtensionsColumnPrivate	file:
MidoriFindbar	toolbars/midori-findbar.h	/^typedef struct _MidoriFindbar                MidoriFindbar;$/;"	t	typeref:struct:_MidoriFindbar
MidoriFindbarClass	toolbars/midori-findbar.h	/^typedef struct _MidoriFindbarClass           MidoriFindbarClass;$/;"	t	typeref:struct:_MidoriFindbarClass
MidoriHistory	panels/midori-history.h	/^typedef struct _MidoriHistory                MidoriHistory;$/;"	t	typeref:struct:_MidoriHistory
MidoriHistoryClass	panels/midori-history.h	/^typedef struct _MidoriHistoryClass           MidoriHistoryClass;$/;"	t	typeref:struct:_MidoriHistoryClass
MidoriIdentity	midori/midori-websettings.h	/^} MidoriIdentity;$/;"	t	typeref:enum:__anon64
MidoriInactivityTimeout	midori/main.c	/^} MidoriInactivityTimeout;$/;"	t	typeref:struct:__anon40	file:
MidoriLoadStatus	midori/midori-view.h	24;"	d
MidoriLocationAction	midori/midori-locationaction.h	/^typedef struct _MidoriLocationAction         MidoriLocationAction;$/;"	t	typeref:struct:_MidoriLocationAction
MidoriLocationActionClass	midori/midori-locationaction.h	/^typedef struct _MidoriLocationActionClass    MidoriLocationActionClass;$/;"	t	typeref:struct:_MidoriLocationActionClass
MidoriNewPage	midori/midori-websettings.h	/^} MidoriNewPage;$/;"	t	typeref:enum:__anon61
MidoriNewView	midori/midori-view.h	/^} MidoriNewView;$/;"	t	typeref:enum:__anon51
MidoriPanedAction	midori/midori-panedaction.h	/^typedef struct _MidoriPanedAction                  MidoriPanedAction;$/;"	t	typeref:struct:_MidoriPanedAction
MidoriPanedActionClass	midori/midori-panedaction.h	/^typedef struct _MidoriPanedActionClass             MidoriPanedActionClass;$/;"	t	typeref:struct:_MidoriPanedActionClass
MidoriPanel	midori/midori-panel.h	/^typedef struct _MidoriPanel                MidoriPanel;$/;"	t	typeref:struct:_MidoriPanel
MidoriPanelClass	midori/midori-panel.h	/^typedef struct _MidoriPanelClass           MidoriPanelClass;$/;"	t	typeref:struct:_MidoriPanelClass
MidoriPreferences	midori/midori-preferences.h	/^typedef struct _MidoriPreferences                MidoriPreferences;$/;"	t	typeref:struct:_MidoriPreferences
MidoriPreferencesClass	midori/midori-preferences.h	/^typedef struct _MidoriPreferencesClass           MidoriPreferencesClass;$/;"	t	typeref:struct:_MidoriPreferencesClass
MidoriPreferredEncoding	midori/midori-websettings.h	/^} MidoriPreferredEncoding;$/;"	t	typeref:enum:__anon60
MidoriProxy	midori/midori-websettings.h	/^} MidoriProxy;$/;"	t	typeref:enum:__anon63
MidoriSearchAction	midori/midori-searchaction.h	/^typedef struct _MidoriSearchAction         MidoriSearchAction;$/;"	t	typeref:struct:_MidoriSearchAction
MidoriSearchActionClass	midori/midori-searchaction.h	/^typedef struct _MidoriSearchActionClass    MidoriSearchActionClass;$/;"	t	typeref:struct:_MidoriSearchActionClass
MidoriSecurity	midori/midori-view.h	/^} MidoriSecurity;$/;"	t	typeref:enum:__anon52
MidoriStartup	midori/midori-websettings.h	/^} MidoriStartup;$/;"	t	typeref:enum:__anon59
MidoriToolbarStyle	midori/midori-websettings.h	/^} MidoriToolbarStyle;$/;"	t	typeref:enum:__anon62
MidoriTransferbar	toolbars/midori-transferbar.h	/^typedef struct _MidoriTransferbar                MidoriTransferbar;$/;"	t	typeref:struct:_MidoriTransferbar
MidoriTransferbarClass	toolbars/midori-transferbar.h	/^typedef struct _MidoriTransferbarClass           MidoriTransferbarClass;$/;"	t	typeref:struct:_MidoriTransferbarClass
MidoriTransfers	panels/midori-transfers.h	/^typedef struct _MidoriTransfers                MidoriTransfers;$/;"	t	typeref:struct:_MidoriTransfers
MidoriTransfersClass	panels/midori-transfers.h	/^typedef struct _MidoriTransfersClass           MidoriTransfersClass;$/;"	t	typeref:struct:_MidoriTransfersClass
MidoriURI	_build_/default/katze/midori-uri.c	/^typedef struct _MidoriURI MidoriURI;$/;"	t	typeref:struct:_MidoriURI	file:
MidoriURI	_build_/default/midori/midori-core.h	/^typedef struct _MidoriURI MidoriURI;$/;"	t	typeref:struct:_MidoriURI
MidoriURIClass	_build_/default/katze/midori-uri.c	/^typedef struct _MidoriURIClass MidoriURIClass;$/;"	t	typeref:struct:_MidoriURIClass	file:
MidoriURIClass	_build_/default/midori/midori-core.h	/^typedef struct _MidoriURIClass MidoriURIClass;$/;"	t	typeref:struct:_MidoriURIClass
MidoriURIPrivate	_build_/default/katze/midori-uri.c	/^typedef struct _MidoriURIPrivate MidoriURIPrivate;$/;"	t	typeref:struct:_MidoriURIPrivate	file:
MidoriURIPrivate	_build_/default/midori/midori-core.h	/^typedef struct _MidoriURIPrivate MidoriURIPrivate;$/;"	t	typeref:struct:_MidoriURIPrivate
MidoriView	midori/midori-view.h	/^typedef struct _MidoriView                MidoriView;$/;"	t	typeref:struct:_MidoriView
MidoriViewClass	midori/midori-view.h	/^typedef struct _MidoriViewClass           MidoriViewClass;$/;"	t	typeref:struct:_MidoriViewClass
MidoriViewable	midori/midori-viewable.h	/^typedef struct _MidoriViewable                MidoriViewable;$/;"	t	typeref:struct:_MidoriViewable
MidoriViewableIface	midori/midori-viewable.h	/^typedef struct _MidoriViewableIface           MidoriViewableIface;$/;"	t	typeref:struct:_MidoriViewableIface
MidoriWebSettings	midori/midori-websettings.h	/^typedef struct _MidoriWebSettings                MidoriWebSettings;$/;"	t	typeref:struct:_MidoriWebSettings
MidoriWebSettingsClass	midori/midori-websettings.h	/^typedef struct _MidoriWebSettingsClass           MidoriWebSettingsClass;$/;"	t	typeref:struct:_MidoriWebSettingsClass
MidoriWindowState	midori/midori-websettings.h	/^} MidoriWindowState;$/;"	t	typeref:enum:__anon58
MouseButton	extensions/mouse-gestures.c	/^typedef enum _MouseButton MouseButton;$/;"	t	typeref:enum:_MouseButton	file:
MouseGesture	extensions/mouse-gestures.c	/^typedef struct _MouseGesture MouseGesture;$/;"	t	typeref:struct:_MouseGesture	file:
MouseGestureNode	extensions/mouse-gestures.c	/^struct MouseGestureNode {$/;"	s	file:
NEW_TAB	midori/midori-view.c	/^    NEW_TAB,$/;"	e	enum:__anon44	file:
NEW_VIEW	midori/midori-view.c	/^    NEW_VIEW,$/;"	e	enum:__anon44	file:
NEW_WINDOW	midori/midori-browser.c	/^    NEW_WINDOW,$/;"	e	enum:__anon46	file:
NEW_WINDOW	midori/midori-view.c	/^    NEW_WINDOW,$/;"	e	enum:__anon44	file:
NORMAL	waf-modules/wafadmin/Constants.py	/^NORMAL="NORMAL"$/;"	v
NOTIFY_CHECK_VERSION	midori/midori-app.c	63;"	d	file:
NOT_RUN	waf-modules/wafadmin/Constants.py	/^NOT_RUN=0$/;"	v
NUM	waf-modules/wafadmin/Tools/preproc.py	/^NUM='i'$/;"	v
N_COL	katze/katze-http-cookies-sqlite.c	/^    N_COL,$/;"	e	enum:__anon25	file:
N_COLS	midori/midori-locationaction.c	/^    N_COLS$/;"	e	enum:__anon50	file:
Node	waf-modules/wafadmin/Node.py	/^class Node(object):$/;"	c
Nodu	waf-modules/wafadmin/Node.py	/^class Nodu(Node):$/;"	c
O644	waf-modules/wafadmin/Constants.py	/^O644=420$/;"	v
O755	waf-modules/wafadmin/Constants.py	/^O755=493$/;"	v
OLDINCLUDEDIR	_build_/c4che/default.cache.py	/^OLDINCLUDEDIR = '\/usr\/include'$/;"	v
OP	waf-modules/wafadmin/Tools/preproc.py	/^OP='O'$/;"	v
OPEN_PREFERENCES	midori/midori-extension.c	/^    OPEN_PREFERENCES,$/;"	e	enum:__anon74	file:
OPTIMIZED	waf-modules/wafadmin/Tools/ccroot.py	/^	OPTIMIZED="optimized"$/;"	v	class:DEBUG_LEVELS
ObjectProperty	tests/properties.c	/^} ObjectProperty;$/;"	t	typeref:struct:__anon80	file:
PACKAGE	_build_/c4che/default.cache.py	/^PACKAGE = 'midori'$/;"	v
PACKAGE_BUGREPORT	_build_/c4che/default.cache.py	/^PACKAGE_BUGREPORT = 'https:\/\/bugs.launchpad.net\/midori'$/;"	v
PACKAGE_BUGREPORT	_build_/default/config.h	43;"	d
PACKAGE_NAME	_build_/c4che/default.cache.py	/^PACKAGE_NAME = 'midori'$/;"	v
PACKAGE_NAME	_build_/default/config.h	42;"	d
PACKAGE_VERSION	_build_/c4che/default.cache.py	/^PACKAGE_VERSION = '0.4.3'$/;"	v
PACKAGE_VERSION	_build_/default/config.h	49;"	d
PAGE_NEW	midori/midori-preferences.c	284;"	d	file:
PDFDIR	_build_/c4che/default.cache.py	/^PDFDIR = '\/usr\/share\/doc\/midori'$/;"	v
PIPE	waf-modules/wafadmin/pproc.py	/^PIPE=-1$/;"	v
POCOM	_build_/c4che/default.cache.py	/^POCOM = '\/usr\/bin\/msgfmt'$/;"	v
POPFILE	waf-modules/wafadmin/Tools/preproc.py	/^POPFILE='-'$/;"	v
POPULATE_FOLDER	katze/katze-arrayaction.c	/^    POPULATE_FOLDER,$/;"	e	enum:__anon37	file:
POPULATE_OPTION_MENU	midori/midori-viewable.c	/^    POPULATE_OPTION_MENU,$/;"	e	enum:__anon41	file:
POPULATE_POPUP	katze/katze-arrayaction.c	/^    POPULATE_POPUP,$/;"	e	enum:__anon37	file:
POPULATE_TOOLBAR_MENU	midori/midori-browser.c	/^    POPULATE_TOOLBAR_MENU,$/;"	e	enum:__anon46	file:
POPULATE_TOOL_MENU	midori/midori-browser.c	/^    POPULATE_TOOL_MENU,$/;"	e	enum:__anon46	file:
PREFIX	_build_/c4che/default.cache.py	/^PREFIX = '\/usr'$/;"	v
PRE_COOKIES_CHANGE	extensions/cookie-manager/cookie-manager.c	/^	PRE_COOKIES_CHANGE,$/;"	e	enum:__anon22	file:
PRIORITY	debian/rules	/^PRIORITY=$(shell sed -r -e '\/DEBIAN_WWW_ALTERNATIVES_PRIORITY\/ !d' -e 's\/.* ([^ ]*)$$\/\\1\/' $(CONFIG_FILE))$/;"	m
PROP_0	extensions/cookie-manager/cookie-manager-page.c	/^	PROP_0,$/;"	e	enum:__anon20	file:
PROP_0	katze/katze-arrayaction.c	/^    PROP_0,$/;"	e	enum:__anon36	file:
PROP_0	katze/katze-http-auth.c	/^    PROP_0,$/;"	e	enum:__anon31	file:
PROP_0	katze/katze-item.c	/^    PROP_0,$/;"	e	enum:__anon27	file:
PROP_0	katze/katze-scrolled.c	/^    PROP_0,$/;"	e	enum:__anon23	file:
PROP_0	katze/katze-throbber.c	/^    PROP_0,$/;"	e	enum:__anon26	file:
PROP_0	midori/gtkiconentry.c	/^  PROP_0,$/;"	e	enum:__anon56	file:
PROP_0	midori/midori-extension.c	/^    PROP_0,$/;"	e	enum:__anon73	file:
PROP_0	midori/midori-preferences.c	/^    PROP_0,$/;"	e	enum:__anon42	file:
PROP_0	midori/midori-view.c	/^    PROP_0,$/;"	e	enum:__anon43	file:
PROP_0	panels/midori-bookmarks.c	/^    PROP_0,$/;"	e	enum:__anon79	file:
PROP_0	panels/midori-extensions.c	/^    PROP_0,$/;"	e	enum:__anon78	file:
PROP_0	panels/midori-history.c	/^    PROP_0,$/;"	e	enum:__anon76	file:
PROP_0	panels/midori-transfers.c	/^    PROP_0,$/;"	e	enum:__anon77	file:
PROP_ADDED	katze/katze-item.c	/^    PROP_ADDED,$/;"	e	enum:__anon27	file:
PROP_ANIMATED	katze/katze-throbber.c	/^    PROP_ANIMATED,$/;"	e	enum:__anon26	file:
PROP_APP	panels/midori-bookmarks.c	/^    PROP_APP$/;"	e	enum:__anon79	file:
PROP_APP	panels/midori-extensions.c	/^    PROP_APP$/;"	e	enum:__anon78	file:
PROP_APP	panels/midori-history.c	/^    PROP_APP$/;"	e	enum:__anon76	file:
PROP_APP	panels/midori-transfers.c	/^    PROP_APP$/;"	e	enum:__anon77	file:
PROP_ARRAY	katze/katze-arrayaction.c	/^    PROP_ARRAY,$/;"	e	enum:__anon36	file:
PROP_AUTHORS	midori/midori-extension.c	/^    PROP_AUTHORS,$/;"	e	enum:__anon73	file:
PROP_DESCRIPTION	midori/midori-extension.c	/^    PROP_DESCRIPTION,$/;"	e	enum:__anon73	file:
PROP_DRAG_SCROLLING	katze/katze-scrolled.c	/^    PROP_DRAG_SCROLLING,$/;"	e	enum:__anon23	file:
PROP_FILENAME	katze/katze-http-auth.c	/^    PROP_FILENAME$/;"	e	enum:__anon31	file:
PROP_GICON_PRIMARY	midori/gtkiconentry.c	/^  PROP_GICON_PRIMARY,$/;"	e	enum:__anon56	file:
PROP_GICON_SECONDARY	midori/gtkiconentry.c	/^  PROP_GICON_SECONDARY,$/;"	e	enum:__anon56	file:
PROP_ICON	katze/katze-item.c	/^    PROP_ICON,$/;"	e	enum:__anon27	file:
PROP_ICON	midori/midori-view.c	/^    PROP_ICON,$/;"	e	enum:__anon43	file:
PROP_ICON_NAME	katze/katze-throbber.c	/^    PROP_ICON_NAME,$/;"	e	enum:__anon26	file:
PROP_ICON_NAME_PRIMARY	midori/gtkiconentry.c	/^  PROP_ICON_NAME_PRIMARY,$/;"	e	enum:__anon56	file:
PROP_ICON_NAME_SECONDARY	midori/gtkiconentry.c	/^  PROP_ICON_NAME_SECONDARY,$/;"	e	enum:__anon56	file:
PROP_ICON_SIZE	katze/katze-throbber.c	/^    PROP_ICON_SIZE,$/;"	e	enum:__anon26	file:
PROP_KINETIC_SCROLLING	katze/katze-scrolled.c	/^    PROP_KINETIC_SCROLLING$/;"	e	enum:__anon23	file:
PROP_LOAD_STATUS	midori/midori-view.c	/^    PROP_LOAD_STATUS,$/;"	e	enum:__anon43	file:
PROP_MIME_TYPE	midori/midori-view.c	/^    PROP_MIME_TYPE,$/;"	e	enum:__anon43	file:
PROP_MINIMIZED	midori/midori-view.c	/^    PROP_MINIMIZED,$/;"	e	enum:__anon43	file:
PROP_NAME	katze/katze-item.c	/^    PROP_NAME,$/;"	e	enum:__anon27	file:
PROP_NAME	midori/midori-extension.c	/^    PROP_NAME,$/;"	e	enum:__anon73	file:
PROP_NEWS_FEEDS	midori/midori-view.c	/^    PROP_NEWS_FEEDS,$/;"	e	enum:__anon43	file:
PROP_PARENT	extensions/cookie-manager/cookie-manager-page.c	/^	PROP_PARENT$/;"	e	enum:__anon20	file:
PROP_PARENT	katze/katze-item.c	/^    PROP_PARENT$/;"	e	enum:__anon27	file:
PROP_PIXBUF	katze/katze-throbber.c	/^    PROP_PIXBUF,$/;"	e	enum:__anon26	file:
PROP_PIXBUF_PRIMARY	midori/gtkiconentry.c	/^  PROP_PIXBUF_PRIMARY,$/;"	e	enum:__anon56	file:
PROP_PIXBUF_SECONDARY	midori/gtkiconentry.c	/^  PROP_PIXBUF_SECONDARY,$/;"	e	enum:__anon56	file:
PROP_PROGRESS	midori/midori-view.c	/^    PROP_PROGRESS,$/;"	e	enum:__anon43	file:
PROP_REVERSED	katze/katze-arrayaction.c	/^    PROP_REVERSED$/;"	e	enum:__anon36	file:
PROP_SECURITY	midori/midori-view.c	/^    PROP_SECURITY,$/;"	e	enum:__anon43	file:
PROP_SENSITIVITY_PRIMARY	midori/gtkiconentry.c	/^  PROP_SENSITIVITY_PRIMARY,$/;"	e	enum:__anon56	file:
PROP_SENSITIVITY_SECONDARY	midori/gtkiconentry.c	/^  PROP_SENSITIVITY_SECONDARY$/;"	e	enum:__anon56	file:
PROP_SETTINGS	midori/midori-preferences.c	/^    PROP_SETTINGS$/;"	e	enum:__anon42	file:
PROP_SETTINGS	midori/midori-view.c	/^    PROP_SETTINGS$/;"	e	enum:__anon43	file:
PROP_STATIC_ICON_NAME	katze/katze-throbber.c	/^    PROP_STATIC_ICON_NAME,$/;"	e	enum:__anon26	file:
PROP_STATIC_PIXBUF	katze/katze-throbber.c	/^    PROP_STATIC_PIXBUF,$/;"	e	enum:__anon26	file:
PROP_STATIC_STOCK_ID	katze/katze-throbber.c	/^    PROP_STATIC_STOCK_ID$/;"	e	enum:__anon26	file:
PROP_STATUSBAR_TEXT	midori/midori-view.c	/^    PROP_STATUSBAR_TEXT,$/;"	e	enum:__anon43	file:
PROP_STOCK_PRIMARY	midori/gtkiconentry.c	/^  PROP_STOCK_PRIMARY,$/;"	e	enum:__anon56	file:
PROP_STOCK_SECONDARY	midori/gtkiconentry.c	/^  PROP_STOCK_SECONDARY,$/;"	e	enum:__anon56	file:
PROP_STORE	extensions/cookie-manager/cookie-manager-page.c	/^	PROP_STORE,$/;"	e	enum:__anon20	file:
PROP_TEXT	katze/katze-item.c	/^    PROP_TEXT,$/;"	e	enum:__anon27	file:
PROP_TITLE	midori/midori-view.c	/^    PROP_TITLE,$/;"	e	enum:__anon43	file:
PROP_TOKEN	katze/katze-item.c	/^    PROP_TOKEN,$/;"	e	enum:__anon27	file:
PROP_URI	katze/katze-item.c	/^    PROP_URI,$/;"	e	enum:__anon27	file:
PROP_URI	midori/midori-view.c	/^    PROP_URI,$/;"	e	enum:__anon43	file:
PROP_VERSION	midori/midori-extension.c	/^    PROP_VERSION,$/;"	e	enum:__anon73	file:
PROP_WEBSITE	midori/midori-extension.c	/^    PROP_WEBSITE$/;"	e	enum:__anon73	file:
PROP_ZOOM_LEVEL	midori/midori-view.c	/^    PROP_ZOOM_LEVEL,$/;"	e	enum:__anon43	file:
PSDIR	_build_/c4che/default.cache.py	/^PSDIR = '\/usr\/share\/doc\/midori'$/;"	v
P_	midori/gtkiconentry.c	61;"	d	file:
Parallel	waf-modules/wafadmin/Runner.py	/^class Parallel(object):$/;"	c
Popen	waf-modules/wafadmin/pproc.py	/^class Popen(object):$/;"	c
PreprocError	waf-modules/wafadmin/Tools/preproc.py	/^class PreprocError(Utils.WafError):$/;"	c
QUERY_ALL	katze/katze-http-cookies-sqlite.c	29;"	d	file:
QUERY_DELETE	katze/katze-http-cookies-sqlite.c	32;"	d	file:
QUERY_INSERT	katze/katze-http-cookies-sqlite.c	31;"	d	file:
QUIT	midori/midori-app.c	/^    QUIT,$/;"	e	enum:__anon47	file:
QUIT	midori/midori-browser.c	/^    QUIT,$/;"	e	enum:__anon46	file:
RANLIB	_build_/c4che/default.cache.py	/^RANLIB = '\/usr\/bin\/ranlib'$/;"	v
RELEASE	waf-modules/wafadmin/Tools/ccroot.py	/^	RELEASE="release"$/;"	v	class:DEBUG_LEVELS
REMOVE_BROWSER	midori/midori-app.c	/^    REMOVE_BROWSER,$/;"	e	enum:__anon47	file:
REMOVE_FEED	extensions/feed-panel/feed-panel.c	/^    REMOVE_FEED,$/;"	e	enum:__anon14	file:
REMOVE_ITEM	katze/katze-array.c	/^    REMOVE_ITEM,$/;"	e	enum:__anon39	file:
REMOVE_TAB	midori/midori-browser.c	/^    REMOVE_TAB,$/;"	e	enum:__anon46	file:
RESET_URI	midori/midori-locationaction.c	/^    RESET_URI,$/;"	e	enum:__anon49	file:
REVISION	waf	/^REVISION="f4d068db53baf747d90b46276b238a10"$/;"	v
REVISION	waf-modules/wafadmin/Tools/libtool.py	/^REVISION="0.1.3"$/;"	v
REVISION	waf-unpacked	/^REVISION="d046dea57dbefcabd071866ac51eb518"$/;"	v
RPATH_ST	_build_/c4che/default.cache.py	/^RPATH_ST = '-Wl,-rpath,%s'$/;"	v
RSVG_CONVERT	_build_/c4che/default.cache.py	/^RSVG_CONVERT = '\/usr\/bin\/rsvg-convert'$/;"	v
RUN_ME	waf-modules/wafadmin/Constants.py	/^RUN_ME=-3$/;"	v
SAVED_ATTRS	waf-modules/wafadmin/Build.py	/^SAVED_ATTRS='root srcnode bldnode node_sigs node_deps raw_deps task_sigs id_nodes'.split()$/;"	v
SAVE_AS	midori/midori-view.c	/^    SAVE_AS,$/;"	e	enum:__anon44	file:
SBINDIR	_build_/c4che/default.cache.py	/^SBINDIR = '\/usr\/sbin'$/;"	v
SEARCH_TEXT	midori/midori-view.c	/^    SEARCH_TEXT,$/;"	e	enum:__anon44	file:
SECONDARY_ICON_RELEASED	midori/midori-locationaction.c	/^    SECONDARY_ICON_RELEASED,$/;"	e	enum:__anon49	file:
SEND_NOTIFICATION	midori/midori-browser.c	/^    SEND_NOTIFICATION,$/;"	e	enum:__anon46	file:
SHAREDSTATEDIR	_build_/c4che/default.cache.py	/^SHAREDSTATEDIR = '\/usr\/com'$/;"	v
SHLIB_MARKER	_build_/c4che/default.cache.py	/^SHLIB_MARKER = '-Wl,-Bdynamic'$/;"	v
SHOW_PREFERENCES	midori/midori-browser.c	/^    SHOW_PREFERENCES,$/;"	e	enum:__anon46	file:
SIGNATURE_SIZE	extensions/adblock.c	21;"	d	file:
SIG_NIL	waf-modules/wafadmin/Constants.py	/^SIG_NIL='iluvcuteoverload'$/;"	v
SKIPPED	waf-modules/wafadmin/Constants.py	/^SKIPPED=8$/;"	v
SKIP_ME	waf-modules/wafadmin/Constants.py	/^SKIP_ME=-2$/;"	v
SM	tests/magic-uri.c	15;"	d	file:
SMALL_RECT	waf-modules/wafadmin/ansiterm.py	/^	class SMALL_RECT(Structure):$/;"	c
SOCKET_IS_VALID	midori/socket.c	71;"	d	file:
SOCKET_IS_VALID	midori/socket.c	74;"	d	file:
SOKOKE_DESKTOP_OSX	midori/sokoke.c	/^    SOKOKE_DESKTOP_OSX,$/;"	e	enum:__anon48	file:
SOKOKE_DESKTOP_UNKNOWN	midori/sokoke.c	/^    SOKOKE_DESKTOP_UNKNOWN$/;"	e	enum:__anon48	file:
SOKOKE_DESKTOP_UNTESTED	midori/sokoke.c	/^    SOKOKE_DESKTOP_UNTESTED,$/;"	e	enum:__anon48	file:
SOKOKE_DESKTOP_XFCE	midori/sokoke.c	/^    SOKOKE_DESKTOP_XFCE,$/;"	e	enum:__anon48	file:
SONAME_ST	_build_/c4che/default.cache.py	/^SONAME_ST = '-Wl,-h,%s'$/;"	v
SPANNED_ADD	midori/midori-preferences.c	292;"	d	file:
SRCDIR	waf-modules/wafadmin/Constants.py	/^SRCDIR='srcdir'$/;"	v
STARTUPINFO	waf-modules/wafadmin/pproc.py	/^		class STARTUPINFO:$/;"	c	function:.__str__
STATICLIBPATH_ST	_build_/c4che/default.cache.py	/^STATICLIBPATH_ST = '-L%s'$/;"	v
STATICLIB_MARKER	_build_/c4che/default.cache.py	/^STATICLIB_MARKER = '-Wl,-Bstatic'$/;"	v
STATICLIB_ST	_build_/c4che/default.cache.py	/^STATICLIB_ST = '-l%s'$/;"	v
STATIC_BOTH	waf-modules/wafadmin/3rdparty/boost.py	/^STATIC_BOTH='both'$/;"	v
STATIC_NOSTATIC	waf-modules/wafadmin/3rdparty/boost.py	/^STATIC_NOSTATIC='nostatic'$/;"	v
STATIC_ONLYSTATIC	waf-modules/wafadmin/3rdparty/boost.py	/^STATIC_ONLYSTATIC='onlystatic'$/;"	v
STDOUT	waf-modules/wafadmin/pproc.py	/^STDOUT=-2$/;"	v
STD_ERROR_HANDLE	waf-modules/wafadmin/ansiterm.py	/^	STD_ERROR_HANDLE=-12$/;"	v
STD_OUTPUT_HANDLE	waf-modules/wafadmin/ansiterm.py	/^	STD_OUTPUT_HANDLE=-11$/;"	v
STOCK_BOOKMARK	midori/midori-stock.h	20;"	d
STOCK_BOOKMARKS	midori/midori-stock.h	21;"	d
STOCK_BOOKMARKS	midori/midori-stock.h	45;"	d
STOCK_BOOKMARKS	midori/midori-stock.h	46;"	d
STOCK_BOOKMARK_ADD	midori/midori-stock.h	33;"	d
STOCK_CONSOLE	midori/midori-stock.h	22;"	d
STOCK_COOKIE_MANAGER	extensions/cookie-manager/cookie-manager.h	18;"	d
STOCK_EXTENSION	midori/midori-stock.h	23;"	d
STOCK_EXTENSIONS	midori/midori-stock.h	24;"	d
STOCK_FEED_PANEL	extensions/feed-panel/feed-panel.c	17;"	d	file:
STOCK_HISTORY	midori/midori-stock.h	25;"	d
STOCK_HOMEPAGE	midori/midori-stock.h	34;"	d
STOCK_IMAGE	midori/midori-stock.h	35;"	d
STOCK_NETWORK_OFFLINE	midori/midori-stock.h	36;"	d
STOCK_NEWS_FEED	midori/midori-stock.h	27;"	d
STOCK_NEWS_FEED	midori/midori-stock.h	47;"	d
STOCK_NEWS_FEED	midori/midori-stock.h	48;"	d
STOCK_PLUGINS	midori/midori-stock.h	31;"	d
STOCK_SCRIPT	midori/midori-stock.h	37;"	d
STOCK_SCRIPTS	midori/midori-stock.h	38;"	d
STOCK_SEND	midori/midori-stock.h	39;"	d
STOCK_STYLE	midori/midori-stock.h	28;"	d
STOCK_TAB_NEW	midori/midori-stock.h	40;"	d
STOCK_TAB_PANEL	extensions/tab-panel.c	14;"	d	file:
STOCK_TRANSFER	midori/midori-stock.h	29;"	d
STOCK_TRANSFERS	midori/midori-stock.h	30;"	d
STOCK_USER_TRASH	midori/midori-stock.h	41;"	d
STOCK_WEB_BROWSER	midori/midori-stock.h	26;"	d
STOCK_WEB_BROWSER	midori/midori-stock.h	49;"	d
STOCK_WEB_BROWSER	midori/midori-stock.h	50;"	d
STOCK_WINDOW_NEW	midori/midori-stock.h	42;"	d
STR	waf-modules/wafadmin/Tools/preproc.py	/^STR='s'$/;"	v
STR_NON_NULL	midori/midori-searchaction.c	/^STR_NON_NULL (const gchar* string)$/;"	f	file:
STYLE_COL	midori/midori-locationaction.c	/^    STYLE_COL,$/;"	e	enum:__anon50	file:
SUBMIT	midori/midori-searchaction.c	/^    SUBMIT,$/;"	e	enum:__anon75	file:
SUBMIT_URI	midori/midori-locationaction.c	/^    SUBMIT_URI,$/;"	e	enum:__anon49	file:
SUCCESS	waf-modules/wafadmin/Constants.py	/^SUCCESS=9$/;"	v
SWITCH_PAGE	midori/midori-panel.c	/^    SWITCH_PAGE,$/;"	e	enum:__anon66	file:
SYSCONFDIR	_build_/c4che/default.cache.py	/^SYSCONFDIR = '\/etc'$/;"	v
SYSCONFDIR	_build_/default/config.h	12;"	d
SockAddrData	midori/socket.c	/^typedef struct _SockAddrData	SockAddrData;$/;"	t	typeref:struct:_SockAddrData	file:
SockAddrFunc	midori/socket.c	/^typedef gint (*SockAddrFunc)	(GList		*addr_list,$/;"	t	file:
SockConnectData	midori/socket.c	/^typedef struct _SockConnectData	SockConnectData;$/;"	t	typeref:struct:_SockConnectData	file:
SockConnectFunc	midori/socket.h	/^typedef gint (*SockConnectFunc)		(SockInfo	*sock,$/;"	t
SockDesc	midori/socket.c	70;"	d	file:
SockDesc	midori/socket.c	73;"	d	file:
SockFunc	midori/socket.h	/^typedef gboolean (*SockFunc)		(SockInfo	*sock,$/;"	t
SockInfo	midori/socket.h	/^typedef struct _SockInfo	SockInfo;$/;"	t	typeref:struct:_SockInfo
SockLookupData	midori/socket.c	/^typedef struct _SockLookupData	SockLookupData;$/;"	t	typeref:struct:_SockLookupData	file:
SockSource	midori/socket.c	/^typedef struct _SockSource	SockSource;$/;"	t	typeref:struct:_SockSource	file:
SokokeDesktop	midori/sokoke.c	/^} SokokeDesktop;$/;"	t	typeref:enum:__anon48	file:
SokokePrivacyItem	midori/sokoke.h	/^} SokokePrivacyItem;$/;"	t	typeref:struct:__anon53
TBEditorWidget	extensions/toolbar-editor.c	/^} TBEditorWidget;$/;"	t	typeref:struct:__anon16	file:
TB_EDITOR_COLS_MAX	extensions/toolbar-editor.c	/^	TB_EDITOR_COLS_MAX$/;"	e	enum:__anon17	file:
TB_EDITOR_COL_ACTION	extensions/toolbar-editor.c	/^	TB_EDITOR_COL_ACTION,$/;"	e	enum:__anon17	file:
TB_EDITOR_COL_ICON	extensions/toolbar-editor.c	/^	TB_EDITOR_COL_ICON,$/;"	e	enum:__anon17	file:
TB_EDITOR_COL_LABEL	extensions/toolbar-editor.c	/^	TB_EDITOR_COL_LABEL,$/;"	e	enum:__anon17	file:
TEST_OK	waf-modules/wafadmin/Constants.py	/^TEST_OK=True$/;"	v
TITLE_COL	midori/midori-locationaction.c	/^    TITLE_COL,$/;"	e	enum:__anon50	file:
Task	waf-modules/wafadmin/Task.py	/^class Task(TaskBase):$/;"	c
TaskBase	waf-modules/wafadmin/Task.py	/^class TaskBase(object):$/;"	c
TaskConsumer	waf-modules/wafadmin/Runner.py	/^class TaskConsumer(threading.Thread):$/;"	c
TaskGroup	waf-modules/wafadmin/Task.py	/^class TaskGroup(object):$/;"	c
TaskManager	waf-modules/wafadmin/Task.py	/^class TaskManager(object):$/;"	c
TransferInfo	toolbars/midori-transferbar.c	/^} TransferInfo;$/;"	t	typeref:struct:__anon81	file:
True	waf-modules/wafadmin/pproc.py	/^	True=1$/;"	v
ULTRADEBUG	waf-modules/wafadmin/Tools/ccroot.py	/^	ULTRADEBUG="ultradebug"$/;"	v	class:DEBUG_LEVELS
UNDEFINED	waf-modules/wafadmin/Constants.py	/^UNDEFINED=()$/;"	v
UNDEFINED	waf-modules/wafadmin/Node.py	/^UNDEFINED=0$/;"	v
UNINSTALL	waf-modules/wafadmin/Constants.py	/^UNINSTALL=-1337$/;"	v
UNIQUE_1_0_VERSION	_build_/c4che/default.cache.py	/^UNIQUE_1_0_VERSION = '1.1.6'$/;"	v
UNIQUE_1_0_VERSION	_build_/default/config.h	16;"	d
UNIQUE_VERSION	_build_/c4che/default.cache.py	/^UNIQUE_VERSION = '1.1.6'$/;"	v
UNIQUE_VERSION	_build_/default/config.h	17;"	d
UPDATE	katze/katze-array.c	/^    UPDATE,$/;"	e	enum:__anon39	file:
UPDATE_FREQ	extensions/feed-panel/main.c	19;"	d	file:
URI_COL	midori/midori-locationaction.c	/^    URI_COL,$/;"	e	enum:__anon50	file:
USE_PATTERN_MATCHING	extensions/adblock.c	22;"	d	file:
USE_TOP_LEVEL	waf-modules/wafadmin/Tools/ccroot.py	/^USE_TOP_LEVEL=False$/;"	v
VALAC	_build_/c4che/default.cache.py	/^VALAC = '\/usr\/bin\/valac'$/;"	v
VALAC_VERSION	_build_/c4che/default.cache.py	/^VALAC_VERSION = (0, 18, 1)$/;"	v
VALAFLAGS	_build_/c4che/default.cache.py	/^VALAFLAGS = ['', '--disable-assert', '--enable-deprecated']$/;"	v
VARIANT	waf-modules/wafadmin/Constants.py	/^VARIANT='_VARIANT_'$/;"	v
VERSION	waf	/^VERSION="1.5.19"$/;"	v
VERSION	waf-modules/wafadmin/Constants.py	/^VERSION='VERSION'$/;"	v
VERSION	waf-unpacked	/^VERSION="1.5.19"$/;"	v
VISIBLE_COL	midori/midori-locationaction.c	/^    VISIBLE_COL,$/;"	e	enum:__anon50	file:
VISITS_COL	midori/midori-locationaction.c	/^    VISITS_COL,$/;"	e	enum:__anon50	file:
WAF	debian/rules	/^WAF=WAFDIR=waf-modules .\/waf-unpacked$/;"	m
WAF	waf	/^WAF='waf'$/;"	v
WAF	waf-unpacked	/^WAF='waf'$/;"	v
WAFREVISION	waf-modules/wafadmin/Constants.py	/^WAFREVISION="9709M"$/;"	v
WAFVERSION	waf-modules/wafadmin/Constants.py	/^WAFVERSION="1.5.19"$/;"	v
WAF_CONFIG_H	waf-modules/wafadmin/Constants.py	/^WAF_CONFIG_H='config.h'$/;"	v
WAF_CONFIG_LOG	waf-modules/wafadmin/Constants.py	/^WAF_CONFIG_LOG='config.log'$/;"	v
WEBKIT_1_0_VERSION	_build_/c4che/default.cache.py	/^WEBKIT_1_0_VERSION = '1.10.2'$/;"	v
WEBKIT_1_0_VERSION	_build_/default/config.h	26;"	d
WSCRIPT_BUILD_FILE	waf-modules/wafadmin/Constants.py	/^WSCRIPT_BUILD_FILE='wscript_build'$/;"	v
WSCRIPT_FILE	waf-modules/wafadmin/Constants.py	/^WSCRIPT_FILE='wscript'$/;"	v
WafError	waf-modules/wafadmin/Utils.py	/^class WafError(Exception):$/;"	c
WscriptError	waf-modules/wafadmin/Utils.py	/^class WscriptError(WafError):$/;"	c
XMLHandler	waf-modules/wafadmin/Tools/qt4.py	/^class XMLHandler(ContentHandler):$/;"	c
X_OK	extensions/addons.c	25;"	d	file:
YALIGN_COL	midori/midori-locationaction.c	/^    YALIGN_COL,$/;"	e	enum:__anon50	file:
ZoomLevel	extensions/statusbar-features.c	/^} ZoomLevel;$/;"	t	typeref:struct:__anon19	file:
_Addons	extensions/addons.c	/^struct _Addons$/;"	s	file:
_AddonsClass	extensions/addons.c	/^struct _AddonsClass$/;"	s	file:
_Block1Data	_build_/default/extensions/history-list.c	/^struct _Block1Data {$/;"	s	file:
_Block2Data	_build_/default/extensions/history-list.c	/^struct _Block2Data {$/;"	s	file:
_CONFIG_H_WAF	_build_/default/config.h	3;"	d
_CookieManager	extensions/cookie-manager/cookie-manager.c	/^struct _CookieManager$/;"	s	file:
_CookieManagerClass	extensions/cookie-manager/cookie-manager.c	/^struct _CookieManagerClass$/;"	s	file:
_CookieManagerPage	extensions/cookie-manager/cookie-manager-page.h	/^struct _CookieManagerPage$/;"	s
_CookieManagerPageClass	extensions/cookie-manager/cookie-manager-page.h	/^struct _CookieManagerPageClass$/;"	s
_CookieManagerPagePrivate	extensions/cookie-manager/cookie-manager-page.c	/^struct _CookieManagerPagePrivate$/;"	s	file:
_CookieManagerPrivate	extensions/cookie-manager/cookie-manager.c	/^struct _CookieManagerPrivate$/;"	s	file:
_FeedPanel	extensions/feed-panel/feed-panel.c	/^struct _FeedPanel$/;"	s	file:
_FeedPanelClass	extensions/feed-panel/feed-panel.c	/^struct _FeedPanelClass$/;"	s	file:
_FeedParser	extensions/feed-panel/feed-parse.h	/^typedef struct _FeedParser$/;"	s
_GTK_IMAGE_GICON	midori/gtkiconentry.c	44;"	d	file:
_GTK_IMAGE_GICON	midori/gtkiconentry.c	46;"	d	file:
_GtkIconEntryPrivate	midori/gtkiconentry.c	/^struct _GtkIconEntryPrivate$/;"	s	file:
_HistoryListHistoryWindow	_build_/default/extensions/history-list.c	/^struct _HistoryListHistoryWindow {$/;"	s	file:
_HistoryListHistoryWindowClass	_build_/default/extensions/history-list.c	/^struct _HistoryListHistoryWindowClass {$/;"	s	file:
_HistoryListHistoryWindowPrivate	_build_/default/extensions/history-list.c	/^struct _HistoryListHistoryWindowPrivate {$/;"	s	file:
_HistoryListManager	_build_/default/extensions/history-list.c	/^struct _HistoryListManager {$/;"	s	file:
_HistoryListManagerClass	_build_/default/extensions/history-list.c	/^struct _HistoryListManagerClass {$/;"	s	file:
_HistoryListNewTabWindow	_build_/default/extensions/history-list.c	/^struct _HistoryListNewTabWindow {$/;"	s	file:
_HistoryListNewTabWindowClass	_build_/default/extensions/history-list.c	/^struct _HistoryListNewTabWindowClass {$/;"	s	file:
_HistoryListPreferencesDialog	_build_/default/extensions/history-list.c	/^struct _HistoryListPreferencesDialog {$/;"	s	file:
_HistoryListPreferencesDialogClass	_build_/default/extensions/history-list.c	/^struct _HistoryListPreferencesDialogClass {$/;"	s	file:
_HistoryListTabWindow	_build_/default/extensions/history-list.c	/^struct _HistoryListTabWindow {$/;"	s	file:
_HistoryListTabWindowClass	_build_/default/extensions/history-list.c	/^struct _HistoryListTabWindowClass {$/;"	s	file:
_KatzeArray	katze/katze-array.c	/^struct _KatzeArray$/;"	s	file:
_KatzeArrayAction	katze/katze-arrayaction.c	/^struct _KatzeArrayAction$/;"	s	file:
_KatzeArrayActionClass	katze/katze-arrayaction.c	/^struct _KatzeArrayActionClass$/;"	s	file:
_KatzeArrayClass	katze/katze-array.c	/^struct _KatzeArrayClass$/;"	s	file:
_KatzeHttpAuth	katze/katze-http-auth.c	/^struct _KatzeHttpAuth$/;"	s	file:
_KatzeHttpAuthClass	katze/katze-http-auth.c	/^struct _KatzeHttpAuthClass$/;"	s	file:
_KatzeHttpCookies	katze/katze-http-cookies.c	/^struct _KatzeHttpCookies$/;"	s	file:
_KatzeHttpCookiesClass	katze/katze-http-cookies.c	/^struct _KatzeHttpCookiesClass$/;"	s	file:
_KatzeHttpCookiesSqlite	katze/katze-http-cookies-sqlite.c	/^struct _KatzeHttpCookiesSqlite$/;"	s	file:
_KatzeHttpCookiesSqliteClass	katze/katze-http-cookies-sqlite.c	/^struct _KatzeHttpCookiesSqliteClass$/;"	s	file:
_KatzeItem	katze/katze-item.h	/^struct _KatzeItem$/;"	s
_KatzeItemClass	katze/katze-item.h	/^struct _KatzeItemClass$/;"	s
_KatzeNet	katze/katze-net.c	/^struct _KatzeNet$/;"	s	file:
_KatzeNetClass	katze/katze-net.c	/^struct _KatzeNetClass$/;"	s	file:
_KatzePreferences	katze/katze-preferences.h	/^struct _KatzePreferences$/;"	s
_KatzePreferencesClass	katze/katze-preferences.h	/^struct _KatzePreferencesClass$/;"	s
_KatzePreferencesPrivate	katze/katze-preferences.c	/^struct _KatzePreferencesPrivate$/;"	s	file:
_KatzeScrolled	katze/katze-scrolled.h	/^struct _KatzeScrolled$/;"	s
_KatzeScrolledClass	katze/katze-scrolled.h	/^struct _KatzeScrolledClass$/;"	s
_KatzeScrolledPrivate	katze/katze-scrolled.c	/^struct _KatzeScrolledPrivate$/;"	s	file:
_KatzeScrolledState	katze/katze-scrolled.c	/^struct _KatzeScrolledState$/;"	s	file:
_KatzeSeparatorAction	katze/katze-separatoraction.c	/^struct _KatzeSeparatorAction$/;"	s	file:
_KatzeSeparatorActionClass	katze/katze-separatoraction.c	/^struct _KatzeSeparatorActionClass$/;"	s	file:
_KatzeThrobber	katze/katze-throbber.c	/^struct _KatzeThrobber$/;"	s	file:
_KatzeThrobberClass	katze/katze-throbber.c	/^struct _KatzeThrobberClass$/;"	s	file:
_MidoriApp	midori/midori-app.c	/^struct _MidoriApp$/;"	s	file:
_MidoriAppClass	midori/midori-app.c	/^struct _MidoriAppClass$/;"	s	file:
_MidoriBookmarks	panels/midori-bookmarks.c	/^struct _MidoriBookmarks$/;"	s	file:
_MidoriBookmarksClass	panels/midori-bookmarks.c	/^struct _MidoriBookmarksClass$/;"	s	file:
_MidoriBrowser	midori/midori-browser.c	/^struct _MidoriBrowser$/;"	s	file:
_MidoriBrowserClass	midori/midori-browser.h	/^struct _MidoriBrowserClass$/;"	s
_MidoriExtension	midori/midori-extension.h	/^struct _MidoriExtension$/;"	s
_MidoriExtensionClass	midori/midori-extension.h	/^struct _MidoriExtensionClass$/;"	s
_MidoriExtensionPrivate	midori/midori-extension.c	/^struct _MidoriExtensionPrivate$/;"	s	file:
_MidoriExtensions	panels/midori-extensions.c	/^struct _MidoriExtensions$/;"	s	file:
_MidoriExtensionsClass	panels/midori-extensions.c	/^struct _MidoriExtensionsClass$/;"	s	file:
_MidoriExtensionsColumn	_build_/default/midori/midori-core.h	/^struct _MidoriExtensionsColumn {$/;"	s
_MidoriExtensionsColumn	_build_/default/midori/midori-extensions-column.c	/^struct _MidoriExtensionsColumn {$/;"	s	file:
_MidoriExtensionsColumnClass	_build_/default/midori/midori-core.h	/^struct _MidoriExtensionsColumnClass {$/;"	s
_MidoriExtensionsColumnClass	_build_/default/midori/midori-extensions-column.c	/^struct _MidoriExtensionsColumnClass {$/;"	s	file:
_MidoriFindbar	toolbars/midori-findbar.c	/^struct _MidoriFindbar$/;"	s	file:
_MidoriFindbarClass	toolbars/midori-findbar.c	/^struct _MidoriFindbarClass$/;"	s	file:
_MidoriHistory	panels/midori-history.c	/^struct _MidoriHistory$/;"	s	file:
_MidoriHistoryClass	panels/midori-history.c	/^struct _MidoriHistoryClass$/;"	s	file:
_MidoriLocationAction	midori/midori-locationaction.c	/^struct _MidoriLocationAction$/;"	s	file:
_MidoriLocationActionClass	midori/midori-locationaction.c	/^struct _MidoriLocationActionClass$/;"	s	file:
_MidoriPanedAction	midori/midori-panedaction.c	/^struct _MidoriPanedAction$/;"	s	file:
_MidoriPanedActionChild	midori/midori-panedaction.c	/^struct _MidoriPanedActionChild$/;"	s	file:
_MidoriPanedActionClass	midori/midori-panedaction.c	/^struct _MidoriPanedActionClass$/;"	s	file:
_MidoriPanel	midori/midori-panel.c	/^struct _MidoriPanel$/;"	s	file:
_MidoriPanelClass	midori/midori-panel.c	/^struct _MidoriPanelClass$/;"	s	file:
_MidoriPreferences	midori/midori-preferences.c	/^struct _MidoriPreferences$/;"	s	file:
_MidoriPreferencesClass	midori/midori-preferences.h	/^struct _MidoriPreferencesClass$/;"	s
_MidoriSearchAction	midori/midori-searchaction.c	/^struct _MidoriSearchAction$/;"	s	file:
_MidoriSearchActionClass	midori/midori-searchaction.c	/^struct _MidoriSearchActionClass$/;"	s	file:
_MidoriTransferbar	toolbars/midori-transferbar.c	/^struct _MidoriTransferbar$/;"	s	file:
_MidoriTransferbarClass	toolbars/midori-transferbar.c	/^struct _MidoriTransferbarClass$/;"	s	file:
_MidoriTransfers	panels/midori-transfers.c	/^struct _MidoriTransfers$/;"	s	file:
_MidoriTransfersClass	panels/midori-transfers.c	/^struct _MidoriTransfersClass$/;"	s	file:
_MidoriURI	_build_/default/katze/midori-uri.c	/^struct _MidoriURI {$/;"	s	file:
_MidoriURI	_build_/default/midori/midori-core.h	/^struct _MidoriURI {$/;"	s
_MidoriURIClass	_build_/default/katze/midori-uri.c	/^struct _MidoriURIClass {$/;"	s	file:
_MidoriURIClass	_build_/default/midori/midori-core.h	/^struct _MidoriURIClass {$/;"	s
_MidoriView	midori/midori-view.c	/^struct _MidoriView$/;"	s	file:
_MidoriViewClass	midori/midori-view.c	/^struct _MidoriViewClass$/;"	s	file:
_MidoriViewableIface	midori/midori-viewable.h	/^struct _MidoriViewableIface$/;"	s
_MidoriWebSettings	midori/midori-websettings.c	/^struct _MidoriWebSettings$/;"	s	file:
_MidoriWebSettingsClass	midori/midori-websettings.c	/^struct _MidoriWebSettingsClass$/;"	s	file:
_MouseButton	extensions/mouse-gestures.c	/^enum _MouseButton {$/;"	g	file:
_MouseGesture	extensions/mouse-gestures.c	/^struct _MouseGesture {$/;"	s	file:
_SockAddrData	midori/socket.c	/^struct _SockAddrData {$/;"	s	file:
_SockConnectData	midori/socket.c	/^struct _SockConnectData {$/;"	s	file:
_SockInfo	midori/socket.h	/^struct _SockInfo$/;"	s
_SockLookupData	midori/socket.c	/^struct _SockLookupData {$/;"	s	file:
_SockSource	midori/socket.c	/^struct _SockSource {$/;"	s	file:
_WIN32_WINNT	midori/midori-app.c	14;"	d	file:
__COOKIE_MANAGER_H__	extensions/cookie-manager/cookie-manager.h	14;"	d
__COOKIE_MANAGER_PAGE_H__	extensions/cookie-manager/cookie-manager-page.h	13;"	d
__DEFAULT_EXTENSIONS_HISTORY_LIST_H__	_build_/default/extensions/history-list.h	5;"	d
__DEFAULT_EXTENSIONS_HISTORY_LIST_H__	debian/midori/usr/include/midori-0.4/extensions/history-list.h	5;"	d
__DEFAULT_EXTENSIONS_HISTORY_LIST_H__	debian/tmp/usr/include/midori-0.4/extensions/history-list.h	5;"	d
__DEFAULT_MIDORI_MIDORI_CORE_H__	_build_/default/midori/midori-core.h	5;"	d
__FEED_ATOM_H__	extensions/feed-panel/feed-atom.h	13;"	d
__FEED_PANEL_H__	extensions/feed-panel/feed-panel.h	13;"	d
__FEED_PARSE_H__	extensions/feed-panel/feed-parse.h	13;"	d
__FEED_RSS_H__	extensions/feed-panel/feed-rss.h	13;"	d
__GTK_ICON_ENTRY_H__	midori/gtkiconentry.h	22;"	d
__KATZE_ARRAY_ACTION_H__	katze/katze-arrayaction.h	13;"	d
__KATZE_ARRAY_H__	katze/katze-array.h	13;"	d
__KATZE_HTTP_AUTH_H__	katze/katze-http-auth.h	13;"	d
__KATZE_HTTP_COOKIES_H__	katze/katze-http-cookies.h	13;"	d
__KATZE_HTTP_COOKIES_SQLITE_H__	katze/katze-http-cookies-sqlite.h	13;"	d
__KATZE_H__	katze/katze.h	13;"	d
__KATZE_ITEM_H__	katze/katze-item.h	13;"	d
__KATZE_NET_H__	katze/katze-net.h	13;"	d
__KATZE_PREFERENCES_H__	katze/katze-preferences.h	13;"	d
__KATZE_SEPARATOR_ACTION_H__	katze/katze-separatoraction.h	13;"	d
__KATZE_THROBBER_H__	katze/katze-throbber.h	13;"	d
__KATZE_UTILS_H__	katze/katze-utils.h	14;"	d
__MIDORI_APP_H__	midori/midori-app.h	13;"	d
__MIDORI_ARRAY_H__	midori/midori-array.h	13;"	d
__MIDORI_BOOKMARKS_H__	panels/midori-bookmarks.h	13;"	d
__MIDORI_BROWSER_H__	midori/midori-browser.h	13;"	d
__MIDORI_EXTENSIONS_H__	panels/midori-extensions.h	13;"	d
__MIDORI_EXTENSION_H__	midori/midori-extension.h	13;"	d
__MIDORI_FINDBAR_H__	toolbars/midori-findbar.h	13;"	d
__MIDORI_HISTORY_H__	panels/midori-history.h	13;"	d
__MIDORI_H__	midori/midori.h	13;"	d
__MIDORI_LOCATION_ACTION_H__	midori/midori-locationaction.h	13;"	d
__MIDORI_PANED_ACTION_H__	midori/midori-panedaction.h	13;"	d
__MIDORI_PANEL_H__	midori/midori-panel.h	13;"	d
__MIDORI_PLATFORM_H__	midori/midori-platform.h	13;"	d
__MIDORI_PREFERENCES_H__	midori/midori-preferences.h	13;"	d
__MIDORI_SEARCH_ACTION_H__	midori/midori-searchaction.h	13;"	d
__MIDORI_STOCK_H__	midori/midori-stock.h	13;"	d
__MIDORI_TRANSFERBAR_H__	toolbars/midori-transferbar.h	13;"	d
__MIDORI_TRANSFERS_H__	panels/midori-transfers.h	13;"	d
__MIDORI_VIEWABLE_H__	midori/midori-viewable.h	13;"	d
__MIDORI_VIEW_H__	midori/midori-view.h	13;"	d
__MIDORI_WEB_SETTINGS_H__	midori/midori-websettings.h	13;"	d
__SOKOKE_H__	midori/sokoke.h	14;"	d
__SYLPH_SOCKET_H__	midori/socket.h	13;"	d
_____lambda2__gtk_widget_key_press_event	_build_/default/extensions/history-list.c	/^static gboolean _____lambda2__gtk_widget_key_press_event (GtkWidget* _sender, GdkEventKey* event, gpointer self) {$/;"	f	file:
_____lambda3__gtk_widget_key_release_event	_build_/default/extensions/history-list.c	/^static gboolean _____lambda3__gtk_widget_key_release_event (GtkWidget* _sender, GdkEventKey* event, gpointer self) {$/;"	f	file:
____lambda2_	_build_/default/extensions/history-list.c	/^static gboolean ____lambda2_ (HistoryListManager* self, GdkEventKey* ek) {$/;"	f	file:
____lambda3_	_build_/default/extensions/history-list.c	/^static gboolean ____lambda3_ (Block1Data* _data1_, GdkEventKey* ek) {$/;"	f	file:
___lambda4__gtk_action_activate	_build_/default/extensions/history-list.c	/^static void ___lambda4__gtk_action_activate (GtkAction* _sender, gpointer self) {$/;"	f	file:
___lambda5__gtk_action_activate	_build_/default/extensions/history-list.c	/^static void ___lambda5__gtk_action_activate (GtkAction* _sender, gpointer self) {$/;"	f	file:
___lambda6__gtk_action_activate	_build_/default/extensions/history-list.c	/^static void ___lambda6__gtk_action_activate (GtkAction* _sender, gpointer self) {$/;"	f	file:
___lambda7__gtk_action_activate	_build_/default/extensions/history-list.c	/^static void ___lambda7__gtk_action_activate (GtkAction* _sender, gpointer self) {$/;"	f	file:
___lambda8__gtk_action_activate	_build_/default/extensions/history-list.c	/^static void ___lambda8__gtk_action_activate (GtkAction* _sender, gpointer self) {$/;"	f	file:
__all__	waf-modules/wafadmin/pproc.py	/^__all__=["Popen","PIPE","STDOUT","call","check_call","CalledProcessError"]$/;"	v
__call__	waf-modules/wafadmin/Build.py	/^	def __call__(self,*k,**kw):$/;"	m	class:BuildContext	file:
__call__	waf-modules/wafadmin/Logs.py	/^	def __call__(self,a):$/;"	m	class:foo	file:
__cmp__	waf-modules/wafadmin/Tools/libtool.py	/^	def __cmp__(self,other):$/;"	m	class:libtool_config	file:
__contains__	waf-modules/wafadmin/Environment.py	/^	def __contains__(self,key):$/;"	m	class:Environment	file:
__copy__	waf-modules/wafadmin/Build.py	/^	def __copy__(self):$/;"	m	class:BuildContext	file:
__copy__	waf-modules/wafadmin/Node.py	/^	def __copy__(self):$/;"	m	class:Node	file:
__del__	waf-modules/wafadmin/Configure.py	/^	def __del__(self):$/;"	m	class:ConfigurationContext	file:
__del__	waf-modules/wafadmin/pproc.py	/^	def __del__(self,sys=sys):$/;"	m	class:Popen	file:
__delattr__	waf-modules/wafadmin/Environment.py	/^	def __delattr__(self,name):$/;"	m	class:Environment	file:
__delitem__	waf-modules/wafadmin/Environment.py	/^	def __delitem__(self,key):$/;"	m	class:Environment	file:
__delitem__	waf-modules/wafadmin/Utils.py	/^	def __delitem__(self,key):$/;"	m	class:ordered_dict	file:
__get_la_libs	waf-modules/wafadmin/Tools/libtool.py	/^	def __get_la_libs(self,la_filename):$/;"	m	class:libtool_config	file:
__getattr__	waf-modules/wafadmin/Configure.py	/^	def __getattr__(self,name):$/;"	m	class:ConfigurationContext	file:
__getattr__	waf-modules/wafadmin/Environment.py	/^	def __getattr__(self,name):$/;"	m	class:Environment	file:
__getattr__	waf-modules/wafadmin/Logs.py	/^	def __getattr__(self,a):$/;"	m	class:foo	file:
__getitem__	waf-modules/wafadmin/Environment.py	/^	def __getitem__(self,key):$/;"	m	class:Environment	file:
__getitem__	waf-modules/wafadmin/Utils.py	/^		def __getitem__(self,key):$/;"	m	class:DefaultDict	file:
__getstate__	waf-modules/wafadmin/Node.py	/^	def __getstate__(self):$/;"	m	class:Node	file:
__gtk_tree_iter_dup0	_build_/default/extensions/history-list.c	/^static gpointer __gtk_tree_iter_dup0 (gpointer self) {$/;"	f	file:
__hash__	waf-modules/wafadmin/Node.py	/^	def __hash__(self):$/;"	m	class:Node	file:
__init__	waf-modules/wafadmin/Build.py	/^	def __init__(self):$/;"	m	class:BuildContext
__init__	waf-modules/wafadmin/Build.py	/^	def __init__(self,b=None,t=[]):$/;"	m	class:BuildError
__init__	waf-modules/wafadmin/Configure.py	/^	def __init__(self,env=None,blddir='',srcdir=''):$/;"	m	class:ConfigurationContext
__init__	waf-modules/wafadmin/Environment.py	/^	def __init__(self,filename=None):$/;"	m	class:Environment
__init__	waf-modules/wafadmin/Logs.py	/^	def __init__(self):$/;"	m	class:formatter
__init__	waf-modules/wafadmin/Logs.py	/^	def __init__(self,name=None):$/;"	m	class:log_filter
__init__	waf-modules/wafadmin/Node.py	/^	def __init__(self,name,parent,node_type=UNDEFINED):$/;"	m	class:Node
__init__	waf-modules/wafadmin/Options.py	/^	def __init__(self,module=None):$/;"	m	class:Handler
__init__	waf-modules/wafadmin/Runner.py	/^	def __init__(self):$/;"	m	class:TaskConsumer
__init__	waf-modules/wafadmin/Runner.py	/^	def __init__(self,bld,j=2):$/;"	m	class:Parallel
__init__	waf-modules/wafadmin/Task.py	/^	def __init__(cls,name,bases,dict):$/;"	m	class:store_task_type
__init__	waf-modules/wafadmin/Task.py	/^	def __init__(self):$/;"	m	class:TaskGroup
__init__	waf-modules/wafadmin/Task.py	/^	def __init__(self):$/;"	m	class:TaskManager
__init__	waf-modules/wafadmin/Task.py	/^	def __init__(self,*k,**kw):$/;"	m	class:TaskBase
__init__	waf-modules/wafadmin/Task.py	/^	def __init__(self,env,**kw):$/;"	m	class:Task
__init__	waf-modules/wafadmin/TaskGen.py	/^	def __init__(cls,name,bases,dict):$/;"	m	class:register_obj
__init__	waf-modules/wafadmin/TaskGen.py	/^	def __init__(self,*kw,**kwargs):$/;"	m	class:task_gen
__init__	waf-modules/wafadmin/Tools/ccroot.py	/^	def __init__(self,*k,**kw):$/;"	m	class:ccroot_abstract
__init__	waf-modules/wafadmin/Tools/d.py	/^	def __init__(self,*k,**kw):$/;"	m	class:d_taskgen
__init__	waf-modules/wafadmin/Tools/d.py	/^	def __init__(self,env,incpaths):$/;"	m	class:d_parser
__init__	waf-modules/wafadmin/Tools/gnome.py	/^	def __init__(self,*k,**kw):$/;"	m	class:gnome_doc_taskgen
__init__	waf-modules/wafadmin/Tools/gnome.py	/^	def __init__(self,*k,**kw):$/;"	m	class:gnome_sgml2man_taskgen
__init__	waf-modules/wafadmin/Tools/gnome.py	/^	def __init__(self,*k,**kw):$/;"	m	class:xml_to_taskgen
__init__	waf-modules/wafadmin/Tools/intltool.py	/^	def __init__(self,*k,**kw):$/;"	m	class:intltool_in_taskgen
__init__	waf-modules/wafadmin/Tools/intltool.py	/^	def __init__(self,*k,**kw):$/;"	m	class:intltool_po_taskgen
__init__	waf-modules/wafadmin/Tools/kde4.py	/^	def __init__(self,*k,**kw):$/;"	m	class:msgfmt_taskgen
__init__	waf-modules/wafadmin/Tools/libtool.py	/^	def __init__(self,la_filename):$/;"	m	class:libtool_config
__init__	waf-modules/wafadmin/Tools/libtool.py	/^	def __init__(self,la_filename):$/;"	m	class:libtool_la_file
__init__	waf-modules/wafadmin/Tools/misc.py	/^	def __init__(self,*k,**kw):$/;"	m	class:cmd_output_taskgen
__init__	waf-modules/wafadmin/Tools/misc.py	/^	def __init__(self,*k,**kw):$/;"	m	class:cmd_taskgen
__init__	waf-modules/wafadmin/Tools/misc.py	/^	def __init__(self,*k,**kw):$/;"	m	class:copy_taskgen
__init__	waf-modules/wafadmin/Tools/misc.py	/^	def __init__(self,*k,**kw):$/;"	m	class:subst_taskgen
__init__	waf-modules/wafadmin/Tools/misc.py	/^	def __init__(self,env,command,command_node,command_args,stdin,stdout,cwd,os_env,stderr):$/;"	m	class:command_output
__init__	waf-modules/wafadmin/Tools/misc.py	/^	def __init__(self,name,template='%s'):$/;"	m	class:cmd_arg
__init__	waf-modules/wafadmin/Tools/ocaml.py	/^	def __init__(self,*k,**kw):$/;"	m	class:ocaml_taskgen
__init__	waf-modules/wafadmin/Tools/preproc.py	/^	def __init__(self,nodepaths=None,defines=None):$/;"	m	class:c_parser
__init__	waf-modules/wafadmin/Tools/python.py	/^	def __init__(self,*k,**kw):$/;"	m	class:py_taskgen
__init__	waf-modules/wafadmin/Tools/qt4.py	/^	def __init__(self):$/;"	m	class:XMLHandler
__init__	waf-modules/wafadmin/Tools/qt4.py	/^	def __init__(self,*k,**kw):$/;"	m	class:qt4_taskgen
__init__	waf-modules/wafadmin/Tools/qt4.py	/^	def __init__(self,*k,**kw):$/;"	m	class:qxx_task
__init__	waf-modules/wafadmin/Tools/tex.py	/^	def __init__(self,*k,**kw):$/;"	m	class:tex_taskgen
__init__	waf-modules/wafadmin/Tools/unittestw.py	/^	def __init__(self):$/;"	m	class:unit_test
__init__	waf-modules/wafadmin/Utils.py	/^		def __init__(self,default_factory):$/;"	m	class:DefaultDict
__init__	waf-modules/wafadmin/Utils.py	/^	def __init__(self,*args):$/;"	m	class:WafError
__init__	waf-modules/wafadmin/Utils.py	/^	def __init__(self,dict=None):$/;"	m	class:ordered_dict
__init__	waf-modules/wafadmin/Utils.py	/^	def __init__(self,message,wscript_file=None):$/;"	m	class:WscriptError
__init__	waf-modules/wafadmin/ansiterm.py	/^		def __init__(self):$/;"	m	class:AnsiTerm
__init__	waf-modules/wafadmin/pproc.py	/^	def __init__(self,args,bufsize=0,executable=None,stdin=None,stdout=None,stderr=None,preexec_fn=None,close_fds=False,shell=False,cwd=None,env=None,universal_newlines=False,startupinfo=None,creationflags=0):$/;"	m	class:Popen
__init__	waf-modules/wafadmin/pproc.py	/^	def __init__(self,returncode,cmd):$/;"	m	class:CalledProcessError
__lambda4_	_build_/default/extensions/history-list.c	/^static void __lambda4_ (Block2Data* _data2_, GtkAction* a) {$/;"	f	file:
__lambda5_	_build_/default/extensions/history-list.c	/^static void __lambda5_ (Block2Data* _data2_, GtkAction* a) {$/;"	f	file:
__lambda6_	_build_/default/extensions/history-list.c	/^static void __lambda6_ (Block2Data* _data2_, GtkAction* a) {$/;"	f	file:
__lambda7_	_build_/default/extensions/history-list.c	/^static void __lambda7_ (Block2Data* _data2_, GtkAction* a) {$/;"	f	file:
__lambda8_	_build_/default/extensions/history-list.c	/^static void __lambda8_ (Block2Data* _data2_, GtkAction* a) {$/;"	f	file:
__list_possible_compiler	waf-modules/wafadmin/Tools/compiler_cc.py	/^def __list_possible_compiler(platform):$/;"	f	file:
__list_possible_compiler	waf-modules/wafadmin/Tools/compiler_cxx.py	/^def __list_possible_compiler(platform):$/;"	f	file:
__metaclass__	waf-modules/wafadmin/Task.py	/^	__metaclass__=store_task_type$/;"	v	class:TaskBase
__metaclass__	waf-modules/wafadmin/TaskGen.py	/^	__metaclass__=register_obj$/;"	v	class:task_gen
__midori_cclosure_marshal_MARSHAL_H__	_build_/default/midori/marshal.h	3;"	d
__parse	waf-modules/wafadmin/Tools/libtool.py	/^	def __parse(self):$/;"	m	class:libtool_la_file	file:
__repr__	waf-modules/wafadmin/Node.py	/^	def __repr__(self):$/;"	m	class:Node	file:
__repr__	waf-modules/wafadmin/Task.py	/^	def __repr__(self):$/;"	m	class:Task	file:
__repr__	waf-modules/wafadmin/Task.py	/^	def __repr__(self):$/;"	m	class:TaskBase	file:
__setattr__	waf-modules/wafadmin/Environment.py	/^	def __setattr__(self,name,value):$/;"	m	class:Environment	file:
__setattr__	waf-modules/wafadmin/TaskGen.py	/^	def __setattr__(self,name,attr):$/;"	m	class:task_gen	file:
__setitem__	waf-modules/wafadmin/Environment.py	/^	def __setitem__(self,key,value):$/;"	m	class:Environment	file:
__setitem__	waf-modules/wafadmin/Utils.py	/^	def __setitem__(self,key,item):$/;"	m	class:ordered_dict	file:
__setstate__	waf-modules/wafadmin/Node.py	/^	def __setstate__(self,data):$/;"	m	class:Node	file:
__slots__	waf-modules/wafadmin/Environment.py	/^	__slots__=("table","parent")$/;"	v	class:Environment
__slots__	waf-modules/wafadmin/Node.py	/^	__slots__=("name","parent","id","childs")$/;"	v	class:Node
__str__	waf-modules/wafadmin/Environment.py	/^	def __str__(self):$/;"	m	class:Environment	file:
__str__	waf-modules/wafadmin/Node.py	/^	def __str__(self):$/;"	m	class:Node	file:
__str__	waf-modules/wafadmin/Task.py	/^	def __str__(self):$/;"	m	class:Task	file:
__str__	waf-modules/wafadmin/Task.py	/^	def __str__(self):$/;"	m	class:TaskBase	file:
__str__	waf-modules/wafadmin/TaskGen.py	/^	def __str__(self):$/;"	m	class:task_gen	file:
__str__	waf-modules/wafadmin/Tools/libtool.py	/^	def __str__(self):$/;"	m	class:libtool_config	file:
__str__	waf-modules/wafadmin/Tools/libtool.py	/^	def __str__(self):$/;"	m	class:libtool_la_file	file:
__str__	waf-modules/wafadmin/Utils.py	/^	def __str__(self):$/;"	m	class:WafError	file:
__str__	waf-modules/wafadmin/pproc.py	/^	def __str__(self):$/;"	m	class:CalledProcessError	file:
_action_about_activate	midori/midori-browser.c	/^_action_about_activate (GtkAction*     action,$/;"	f	file:
_action_about_activate_email	midori/midori-browser.c	/^_action_about_activate_email (GtkAboutDialog* about,$/;"	f	file:
_action_about_activate_link	midori/midori-browser.c	/^_action_about_activate_link (GtkAboutDialog* about,$/;"	f	file:
_action_add_desktop_shortcut_activate	midori/midori-browser.c	/^_action_add_desktop_shortcut_activate (GtkAction*     action,$/;"	f	file:
_action_add_news_feed_activate	midori/midori-browser.c	/^_action_add_news_feed_activate (GtkAction*     action,$/;"	f	file:
_action_add_speed_dial_activate	midori/midori-browser.c	/^_action_add_speed_dial_activate (GtkAction*     action,$/;"	f	file:
_action_bookmark_add_activate	midori/midori-browser.c	/^_action_bookmark_add_activate (GtkAction*     action,$/;"	f	file:
_action_bookmarkbar_activate	midori/midori-browser.c	/^_action_bookmarkbar_activate (GtkToggleAction* action,$/;"	f	file:
_action_bookmarks_export_activate	midori/midori-browser.c	/^_action_bookmarks_export_activate (GtkAction*     action,$/;"	f	file:
_action_bookmarks_import_activate	midori/midori-browser.c	/^_action_bookmarks_import_activate (GtkAction*     action,$/;"	f	file:
_action_bookmarks_populate_folder	midori/midori-browser.c	/^_action_bookmarks_populate_folder (GtkAction*     action,$/;"	f	file:
_action_by_name	midori/midori-browser.c	238;"	d	file:
_action_caret_browsing_activate	midori/midori-browser.c	/^_action_caret_browsing_activate (GtkAction*     action,$/;"	f	file:
_action_clear_private_data_activate	midori/midori-browser.c	/^_action_clear_private_data_activate (GtkAction*     action,$/;"	f	file:
_action_compact_add_activate	midori/midori-browser.c	/^_action_compact_add_activate (GtkAction*     action,$/;"	f	file:
_action_compact_add_response_cb	midori/midori-browser.c	/^_action_compact_add_response_cb (GtkWidget* dialog,$/;"	f	file:
_action_compact_menu_populate_popup	midori/midori-browser.c	/^_action_compact_menu_populate_popup (GtkAction*     action,$/;"	f	file:
_action_copy_activate	midori/midori-browser.c	/^_action_copy_activate (GtkAction*     action,$/;"	f	file:
_action_cut_activate	midori/midori-browser.c	/^_action_cut_activate (GtkAction*     action,$/;"	f	file:
_action_delete_activate	midori/midori-browser.c	/^_action_delete_activate (GtkAction*     action,$/;"	f	file:
_action_edit_activate	midori/midori-browser.c	/^_action_edit_activate (GtkAction*     action,$/;"	f	file:
_action_find_activate	midori/midori-browser.c	/^_action_find_activate (GtkAction*     action,$/;"	f	file:
_action_find_next_activate	midori/midori-browser.c	/^_action_find_next_activate (GtkAction*     action,$/;"	f	file:
_action_find_previous_activate	midori/midori-browser.c	/^_action_find_previous_activate (GtkAction*     action,$/;"	f	file:
_action_fullscreen_activate	midori/midori-browser.c	/^_action_fullscreen_activate (GtkAction*     action,$/;"	f	file:
_action_help_link_activate	midori/midori-browser.c	/^_action_help_link_activate (GtkAction*     action,$/;"	f	file:
_action_inspect_page_activate	midori/midori-browser.c	/^_action_inspect_page_activate (GtkAction*     action,$/;"	f	file:
_action_location_activate	midori/midori-browser.c	/^_action_location_activate (GtkAction*     action,$/;"	f	file:
_action_location_focus_in	midori/midori-browser.c	/^_action_location_focus_in (GtkAction*     action,$/;"	f	file:
_action_location_focus_out	midori/midori-browser.c	/^_action_location_focus_out (GtkAction*     action,$/;"	f	file:
_action_location_reset_uri	midori/midori-browser.c	/^_action_location_reset_uri (GtkAction*     action,$/;"	f	file:
_action_location_secondary_icon_released	midori/midori-browser.c	/^_action_location_secondary_icon_released (GtkAction*     action,$/;"	f	file:
_action_location_submit_uri	midori/midori-browser.c	/^_action_location_submit_uri (GtkAction*     action,$/;"	f	file:
_action_manage_search_engines_activate	midori/midori-browser.c	/^_action_manage_search_engines_activate (GtkAction*     action,$/;"	f	file:
_action_menubar_activate	midori/midori-browser.c	/^_action_menubar_activate (GtkToggleAction* menubar_action,$/;"	f	file:
_action_navigation_activate	midori/midori-browser.c	/^_action_navigation_activate (GtkAction*     action,$/;"	f	file:
_action_navigationbar_activate	midori/midori-browser.c	/^_action_navigationbar_activate (GtkToggleAction* action,$/;"	f	file:
_action_next_view_activate	midori/midori-browser.c	/^_action_next_view_activate (GtkAction*     action,$/;"	f	file:
_action_open_activate	midori/midori-browser.c	/^_action_open_activate (GtkAction*     action,$/;"	f	file:
_action_panel_activate	midori/midori-browser.c	/^_action_panel_activate (GtkToggleAction* action,$/;"	f	file:
_action_paste_activate	midori/midori-browser.c	/^_action_paste_activate (GtkAction*     action,$/;"	f	file:
_action_preferences_activate	midori/midori-browser.c	/^_action_preferences_activate (GtkAction*     action,$/;"	f	file:
_action_print_activate	midori/midori-browser.c	/^_action_print_activate (GtkAction*     action,$/;"	f	file:
_action_private_browsing_activate	midori/midori-browser.c	/^_action_private_browsing_activate (GtkAction*     action,$/;"	f	file:
_action_quit_activate	midori/midori-browser.c	/^_action_quit_activate (GtkAction*     action,$/;"	f	file:
_action_redo_activate	midori/midori-browser.c	/^_action_redo_activate (GtkAction*     action,$/;"	f	file:
_action_reload_stop_activate	midori/midori-browser.c	/^_action_reload_stop_activate (GtkAction*     action,$/;"	f	file:
_action_save_as_activate	midori/midori-browser.c	/^_action_save_as_activate (GtkAction*     action,$/;"	f	file:
_action_scroll_somewhere_activate	midori/midori-browser.c	/^_action_scroll_somewhere_activate (GtkAction*     action,$/;"	f	file:
_action_search_activate	midori/midori-browser.c	/^_action_search_activate (GtkAction*     action,$/;"	f	file:
_action_search_focus_out	midori/midori-browser.c	/^_action_search_focus_out (GtkAction*     action,$/;"	f	file:
_action_search_notify_current_item	midori/midori-browser.c	/^_action_search_notify_current_item (GtkAction*     action,$/;"	f	file:
_action_search_notify_default_item	midori/midori-browser.c	/^_action_search_notify_default_item (GtkAction*     action,$/;"	f	file:
_action_search_submit	midori/midori-browser.c	/^_action_search_submit (GtkAction*     action,$/;"	f	file:
_action_select_all_activate	midori/midori-browser.c	/^_action_select_all_activate (GtkAction*     action,$/;"	f	file:
_action_set_active	midori/midori-browser.c	244;"	d	file:
_action_set_sensitive	midori/midori-browser.c	240;"	d	file:
_action_set_visible	midori/midori-browser.c	242;"	d	file:
_action_source_view_activate	midori/midori-browser.c	/^_action_source_view_activate (GtkAction*     action,$/;"	f	file:
_action_statusbar_activate	midori/midori-browser.c	/^_action_statusbar_activate (GtkToggleAction* action,$/;"	f	file:
_action_tab_close_activate	midori/midori-browser.c	/^_action_tab_close_activate (GtkAction*     action,$/;"	f	file:
_action_tab_close_other_activate	midori/midori-browser.c	/^_action_tab_close_other_activate (GtkAction*     action,$/;"	f	file:
_action_tab_current_activate	midori/midori-browser.c	/^_action_tab_current_activate (GtkAction*     action,$/;"	f	file:
_action_tab_duplicate_activate	midori/midori-browser.c	/^_action_tab_duplicate_activate (GtkAction*     action,$/;"	f	file:
_action_tab_minimize_activate	midori/midori-browser.c	/^_action_tab_minimize_activate (GtkAction*     action,$/;"	f	file:
_action_tab_move_backward_activate	midori/midori-browser.c	/^_action_tab_move_backward_activate (GtkAction*     action,$/;"	f	file:
_action_tab_move_forward_activate	midori/midori-browser.c	/^_action_tab_move_forward_activate (GtkAction*     action,$/;"	f	file:
_action_tab_new_activate	midori/midori-browser.c	/^_action_tab_new_activate (GtkAction*     action,$/;"	f	file:
_action_tab_next_activate	midori/midori-browser.c	/^_action_tab_next_activate (GtkAction*     action,$/;"	f	file:
_action_tab_previous_activate	midori/midori-browser.c	/^_action_tab_previous_activate (GtkAction*     action,$/;"	f	file:
_action_tools_populate_popup	midori/midori-browser.c	/^_action_tools_populate_popup (GtkAction*     action,$/;"	f	file:
_action_trash_activate_item_alt	midori/midori-browser.c	/^_action_trash_activate_item_alt (GtkAction*     action,$/;"	f	file:
_action_trash_empty_activate	midori/midori-browser.c	/^_action_trash_empty_activate (GtkAction*     action,$/;"	f	file:
_action_trash_populate_popup	midori/midori-browser.c	/^_action_trash_populate_popup (GtkAction*     action,$/;"	f	file:
_action_undo_activate	midori/midori-browser.c	/^_action_undo_activate (GtkAction*     action,$/;"	f	file:
_action_undo_tab_close_activate	midori/midori-browser.c	/^_action_undo_tab_close_activate (GtkAction*     action,$/;"	f	file:
_action_view_encoding_activate	midori/midori-browser.c	/^_action_view_encoding_activate (GtkAction*     action,$/;"	f	file:
_action_window_activate_item_alt	midori/midori-browser.c	/^_action_window_activate_item_alt (GtkAction*     action,$/;"	f	file:
_action_window_close_activate	midori/midori-browser.c	/^_action_window_close_activate (GtkAction*     action,$/;"	f	file:
_action_window_new_activate	midori/midori-browser.c	/^_action_window_new_activate (GtkAction*     action,$/;"	f	file:
_action_window_populate_popup	midori/midori-browser.c	/^_action_window_populate_popup (GtkAction*     action,$/;"	f	file:
_action_zoom_activate	midori/midori-browser.c	/^_action_zoom_activate (GtkAction*     action,$/;"	f	file:
_active	waf-modules/wafadmin/pproc.py	/^_active=[]$/;"	v
_browser	_build_/default/extensions/history-list.c	/^	MidoriBrowser* _browser;$/;"	m	struct:_HistoryListHistoryWindowPrivate	file:
_cleanup	waf-modules/wafadmin/pproc.py	/^def _cleanup():$/;"	f
_close_fds	waf-modules/wafadmin/pproc.py	/^		def _close_fds(self,but):$/;"	f	function:Popen.communicate
_communicate	waf-modules/wafadmin/pproc.py	/^		def _communicate(self,input):$/;"	f	function:Popen.communicate
_execute_child	waf-modules/wafadmin/pproc.py	/^		def _execute_child(self,args,executable,preexec_fn,close_fds,cwd,env,universal_newlines,startupinfo,creationflags,shell,p2cread,p2cwrite,c2pread,c2pwrite,errread,errwrite):$/;"	f	function:Popen.communicate
_fields_	waf-modules/wafadmin/ansiterm.py	/^		_fields_=[("Left",c_short),("Top",c_short),("Right",c_short),("Bottom",c_short)]$/;"	v	class:SMALL_RECT
_fields_	waf-modules/wafadmin/ansiterm.py	/^		_fields_=[("Size",COORD),("CursorPosition",COORD),("Attributes",c_short),("Window",SMALL_RECT),("MaximumWindowSize",COORD)]$/;"	v	class:CONSOLE_SCREEN_BUFFER_INFO
_fields_	waf-modules/wafadmin/ansiterm.py	/^		_fields_=[("X",c_short),("Y",c_short)]$/;"	v	class:COORD
_fields_	waf-modules/wafadmin/ansiterm.py	/^		_fields_=[('dwSize',c_ulong),('bVisible',c_int)]$/;"	v	class:CONSOLE_CURSOR_INFO
_find_w9xpopen	waf-modules/wafadmin/pproc.py	/^		def _find_w9xpopen(self):$/;"	f	function:Popen.communicate
_fix_output	waf-modules/wafadmin/Tools/vala.py	/^	def _fix_output(self,output):$/;"	m	class:valac_task
_g_error_free0	_build_/default/katze/midori-uri.c	34;"	d	file:
_g_free0	_build_/default/extensions/history-list.c	88;"	d	file:
_g_free0	_build_/default/katze/midori-uri.c	32;"	d	file:
_g_list_free0	_build_/default/extensions/history-list.c	92;"	d	file:
_g_object_ref0	_build_/default/extensions/history-list.c	/^static gpointer _g_object_ref0 (gpointer self) {$/;"	f	file:
_g_object_unref0	_build_/default/extensions/history-list.c	43;"	d	file:
_g_regex_unref0	_build_/default/katze/midori-uri.c	33;"	d	file:
_get_handles	waf-modules/wafadmin/pproc.py	/^		def _get_handles(self,stdin,stdout,stderr):$/;"	f	function:Popen.communicate
_get_list_value_for_modification	waf-modules/wafadmin/Environment.py	/^	def _get_list_value_for_modification(self,key):$/;"	m	class:Environment
_get_prog_names	waf-modules/wafadmin/Tools/msvc.py	/^def _get_prog_names(conf,compiler):$/;"	f
_get_python_variables	waf-modules/wafadmin/Tools/python.py	/^def _get_python_variables(python_exe,variables,imports=['import sys']):$/;"	f
_gtk_entry_effective_inner_border	midori/gtkiconentry.c	/^_gtk_entry_effective_inner_border (GtkEntry  *entry,$/;"	f	file:
_gtk_tree_iter_dup	_build_/default/extensions/history-list.c	/^static GtkTreeIter* _gtk_tree_iter_dup (GtkTreeIter* self) {$/;"	f	file:
_gtk_tree_path_free0	_build_/default/extensions/history-list.c	44;"	d	file:
_handle_exitstatus	waf-modules/wafadmin/pproc.py	/^		def _handle_exitstatus(self,sts):$/;"	f	function:Popen.communicate
_history_list_manager_activated_midori_extension_activate	_build_/default/extensions/history-list.c	/^static void _history_list_manager_activated_midori_extension_activate (MidoriExtension* _sender, MidoriApp* app, gpointer self) {$/;"	f	file:
_history_list_manager_browser_added_midori_app_add_browser	_build_/default/extensions/history-list.c	/^static void _history_list_manager_browser_added_midori_app_add_browser (MidoriApp* _sender, MidoriBrowser* browser, gpointer self) {$/;"	f	file:
_history_list_manager_deactivated_midori_extension_deactivate	_build_/default/extensions/history-list.c	/^static void _history_list_manager_deactivated_midori_extension_deactivate (MidoriExtension* _sender, gpointer self) {$/;"	f	file:
_history_list_manager_preferences_changed_cb_history_list_manager_preferences_changed	_build_/default/extensions/history-list.c	/^static void _history_list_manager_preferences_changed_cb_history_list_manager_preferences_changed (HistoryListManager* _sender, gpointer self) {$/;"	f	file:
_history_list_manager_show_preferences_midori_extension_open_preferences	_build_/default/extensions/history-list.c	/^static void _history_list_manager_show_preferences_midori_extension_open_preferences (MidoriExtension* _sender, gpointer self) {$/;"	f	file:
_history_list_manager_tab_added_midori_browser_add_tab	_build_/default/extensions/history-list.c	/^static void _history_list_manager_tab_added_midori_browser_add_tab (MidoriBrowser* _sender, MidoriView* tab, gpointer self) {$/;"	f	file:
_history_list_manager_tab_changed_g_object_notify	_build_/default/extensions/history-list.c	/^static void _history_list_manager_tab_changed_g_object_notify (GObject* _sender, GParamSpec* pspec, gpointer self) {$/;"	f	file:
_history_list_manager_tab_removed_midori_browser_remove_tab	_build_/default/extensions/history-list.c	/^static void _history_list_manager_tab_removed_midori_browser_remove_tab (MidoriBrowser* _sender, MidoriView* tab, gpointer self) {$/;"	f	file:
_history_list_preferences_dialog_response_cb_gtk_dialog_response	_build_/default/extensions/history-list.c	/^static void _history_list_preferences_dialog_response_cb_gtk_dialog_response (GtkDialog* _sender, gint response_id, gpointer self) {$/;"	f	file:
_katze_array_add_item	katze/katze-array.c	/^_katze_array_add_item (KatzeArray* array,$/;"	f	file:
_katze_array_clear	katze/katze-array.c	/^_katze_array_clear (KatzeArray* array)$/;"	f	file:
_katze_array_move_item	katze/katze-array.c	/^_katze_array_move_item (KatzeArray* array,$/;"	f	file:
_katze_array_remove_item	katze/katze-array.c	/^_katze_array_remove_item (KatzeArray* array,$/;"	f	file:
_katze_reserved1	katze/katze-scrolled.h	/^    void (*_katze_reserved1) (void);$/;"	m	struct:_KatzeScrolledClass
_katze_reserved2	katze/katze-scrolled.h	/^    void (*_katze_reserved2) (void);$/;"	m	struct:_KatzeScrolledClass
_katze_reserved3	katze/katze-scrolled.h	/^    void (*_katze_reserved3) (void);$/;"	m	struct:_KatzeScrolledClass
_katze_reserved4	katze/katze-scrolled.h	/^    void (*_katze_reserved4) (void);$/;"	m	struct:_KatzeScrolledClass
_make_inheritable	waf-modules/wafadmin/pproc.py	/^		def _make_inheritable(self,handle):$/;"	f	function:Popen.communicate
_midori_app_add_browser	midori/midori-app.c	/^_midori_app_add_browser (MidoriApp*     app,$/;"	f	file:
_midori_app_quit	midori/midori-app.c	/^_midori_app_quit (MidoriApp* app)$/;"	f	file:
_midori_browser_activate_action	midori/midori-browser.c	/^_midori_browser_activate_action (MidoriBrowser* browser,$/;"	f	file:
_midori_browser_add_tab	midori/midori-browser.c	/^_midori_browser_add_tab (MidoriBrowser* browser,$/;"	f	file:
_midori_browser_quit	midori/midori-browser.c	/^_midori_browser_quit (MidoriBrowser* browser)$/;"	f	file:
_midori_browser_remove_tab	midori/midori-browser.c	/^_midori_browser_remove_tab (MidoriBrowser* browser,$/;"	f	file:
_midori_browser_search_item_allocate_cb	midori/midori-browser.c	/^_midori_browser_search_item_allocate_cb (GtkWidget* widget,$/;"	f	file:
_midori_browser_set_statusbar_text	midori/midori-browser.c	/^_midori_browser_set_statusbar_text (MidoriBrowser* browser,$/;"	f	file:
_midori_browser_set_toolbar_items	midori/midori-browser.c	/^_midori_browser_set_toolbar_items (MidoriBrowser* browser,$/;"	f	file:
_midori_browser_set_toolbar_style	midori/midori-browser.c	/^_midori_browser_set_toolbar_style (MidoriBrowser*     browser,$/;"	f	file:
_midori_browser_update_actions	midori/midori-browser.c	/^_midori_browser_update_actions (MidoriBrowser* browser)$/;"	f	file:
_midori_browser_update_interface	midori/midori-browser.c	/^_midori_browser_update_interface (MidoriBrowser* browser)$/;"	f	file:
_midori_browser_update_progress	midori/midori-browser.c	/^_midori_browser_update_progress (MidoriBrowser* browser,$/;"	f	file:
_midori_browser_update_settings	midori/midori-browser.c	/^_midori_browser_update_settings (MidoriBrowser* browser)$/;"	f	file:
_midori_panel_child_for_scrolled	midori/midori-panel.c	/^_midori_panel_child_for_scrolled (MidoriPanel* panel,$/;"	f	file:
_midori_panel_scrolled_for_child	midori/midori-panel.c	/^_midori_panel_scrolled_for_child (MidoriPanel* panel,$/;"	f	file:
_midori_search_action_move_index	midori/midori-searchaction.c	/^_midori_search_action_move_index (MidoriSearchAction* search_action,$/;"	f	file:
_midori_view_set_settings	midori/midori-view.c	/^_midori_view_set_settings (MidoriView*        view,$/;"	f	file:
_midori_web_view_load_icon	midori/midori-view.c	/^_midori_web_view_load_icon (MidoriView* view)$/;"	f	file:
_readerthread	waf-modules/wafadmin/pproc.py	/^		def _readerthread(self,fh,buffer):$/;"	f	function:Popen.communicate
_ref_count_	_build_/default/extensions/history-list.c	/^	int _ref_count_;$/;"	m	struct:_Block1Data	file:
_ref_count_	_build_/default/extensions/history-list.c	/^	int _ref_count_;$/;"	m	struct:_Block2Data	file:
_set_cloexec_flag	waf-modules/wafadmin/pproc.py	/^		def _set_cloexec_flag(self,fd):$/;"	f	function:Popen.communicate
_tmp_sig_ids_size_	_build_/default/extensions/history-list.c	/^	gint _tmp_sig_ids_size_;$/;"	m	struct:_HistoryListManager	file:
_toggle_tabbar_smartly	midori/midori-browser.c	/^_toggle_tabbar_smartly (MidoriBrowser* browser,$/;"	f	file:
_translate_newlines	waf-modules/wafadmin/pproc.py	/^	def _translate_newlines(self,data):$/;"	m	class:Popen
_vala_array_destroy	_build_/default/extensions/history-list.c	/^static void _vala_array_destroy (gpointer array, gint array_length, GDestroyNotify destroy_func) {$/;"	f	file:
_vala_array_destroy	_build_/default/katze/midori-uri.c	/^static void _vala_array_destroy (gpointer array, gint array_length, GDestroyNotify destroy_func) {$/;"	f	file:
_vala_array_free	_build_/default/extensions/history-list.c	/^static void _vala_array_free (gpointer array, gint array_length, GDestroyNotify destroy_func) {$/;"	f	file:
_vala_array_free	_build_/default/katze/midori-uri.c	/^static void _vala_array_free (gpointer array, gint array_length, GDestroyNotify destroy_func) {$/;"	f	file:
_vala_array_length	_build_/default/katze/midori-uri.c	/^static gint _vala_array_length (gpointer array) {$/;"	f	file:
_vala_history_list_history_window_get_property	_build_/default/extensions/history-list.c	/^static void _vala_history_list_history_window_get_property (GObject * object, guint property_id, GValue * value, GParamSpec * pspec) {$/;"	f	file:
_vala_history_list_history_window_set_property	_build_/default/extensions/history-list.c	/^static void _vala_history_list_history_window_set_property (GObject * object, guint property_id, const GValue * value, GParamSpec * pspec) {$/;"	f	file:
a_user_css_to_display_the_url_when_a_link_is_hovered	data/faq.html	/^<h4><a name="a_user_css_to_display_the_url_when_a_link_is_hovered" id="a_user_css_to_display_the_url_when_a_link_is_hovered">A user css to display the url when a link is hovered<\/a><\/h4>$/;"	a
a_user_css_to_display_the_url_when_a_link_is_hovered	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="a_user_css_to_display_the_url_when_a_link_is_hovered" id="a_user_css_to_display_the_url_when_a_link_is_hovered">A user css to display the url when a link is hovered<\/a><\/h4>$/;"	a
a_user_css_to_display_the_url_when_a_link_is_hovered	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="a_user_css_to_display_the_url_when_a_link_is_hovered" id="a_user_css_to_display_the_url_when_a_link_is_hovered">A user css to display the url when a link is hovered<\/a><\/h4>$/;"	a
about_midori	data/faq.html	/^<h2 class="sectionedit3"><a name="about_midori" id="about_midori">About Midori<\/a><\/h2>$/;"	a
about_midori	debian/midori/usr/share/doc/midori/faq.html	/^<h2 class="sectionedit3"><a name="about_midori" id="about_midori">About Midori<\/a><\/h2>$/;"	a
about_midori	debian/tmp/usr/share/doc/midori/faq.html	/^<h2 class="sectionedit3"><a name="about_midori" id="about_midori">About Midori<\/a><\/h2>$/;"	a
abspath	waf-modules/wafadmin/Node.py	/^	def abspath(self,env=None):$/;"	m	class:Node
accel_group	midori/midori-app.c	/^    GtkAccelGroup* accel_group;$/;"	m	struct:_MidoriApp	file:
accel_map_changed_cb	midori/main.c	/^accel_map_changed_cb (GtkAccelMap*    accel_map,$/;"	f	file:
accept	waf-modules/wafadmin/Node.py	/^		def accept(name,pats):$/;"	f	function:Node.ant_glob
accept_name	waf-modules/wafadmin/Node.py	/^		def accept_name(node,name):$/;"	f	function:Node.find_iter
accepted	waf-modules/wafadmin/Tools/preproc.py	/^accepted='a'$/;"	v
act	waf-modules/wafadmin/Tools/ocaml.py	/^act=b('ocalink','${OCAMLC} -o ${TGT} ${INCLUDES} ${OCALINKFLAGS} ${SRC}',color='YELLOW',after="ocaml ocamlcc")$/;"	v
act	waf-modules/wafadmin/Tools/ocaml.py	/^act=b('ocalinkx','${OCAMLOPT} -o ${TGT} ${INCLUDES} ${OCALINKFLAGS_OPT} ${SRC}',color='YELLOW',after="ocamlx ocamlcc")$/;"	v
action_group	extensions/toolbar-editor.c	/^	GtkActionGroup *action_group;$/;"	m	struct:__anon16	file:
action_group	midori/midori-browser.c	/^    GtkActionGroup* action_group;$/;"	m	struct:_MidoriBrowser	file:
action_group	midori/midori-panel.c	/^    GtkActionGroup* action_group;$/;"	m	struct:_MidoriPanel	file:
action_process_file_func	waf-modules/wafadmin/Tools/misc.py	/^def action_process_file_func(tsk):$/;"	f
activate_action	midori/midori-browser.h	/^    (*activate_action)         (MidoriBrowser*       browser,$/;"	m	struct:_MidoriBrowserClass
activated_widgets	katze/katze-scrolled.c	/^static GTree* activated_widgets;$/;"	v	file:
active	midori/midori-extension.c	/^    gint active;$/;"	m	struct:_MidoriExtensionPrivate	file:
adblock_activate_cb	extensions/adblock.c	/^adblock_activate_cb (MidoriExtension* extension,$/;"	f	file:
adblock_activate_link_cb	extensions/adblock.c	/^adblock_activate_link_cb (GtkWidget*   label,$/;"	f	file:
adblock_add_tab_cb	extensions/adblock.c	/^adblock_add_tab_cb (MidoriBrowser*   browser,$/;"	f	file:
adblock_add_tab_foreach_cb	extensions/adblock.c	/^adblock_add_tab_foreach_cb (MidoriView*      view,$/;"	f	file:
adblock_add_url_pattern	extensions/adblock.c	/^adblock_add_url_pattern (gchar* prefix,$/;"	f	file:
adblock_app_add_browser_cb	extensions/adblock.c	/^adblock_app_add_browser_cb (MidoriApp*       app,$/;"	f	file:
adblock_build_js	extensions/adblock.c	/^adblock_build_js (const gchar* private)$/;"	f	file:
adblock_check_rule	extensions/adblock.c	/^adblock_check_rule (GRegex*      regex,$/;"	f	file:
adblock_compile_regexp	extensions/adblock.c	/^adblock_compile_regexp (GString* gpatt,$/;"	f	file:
adblock_custom_block_image_cb	extensions/adblock.c	/^adblock_custom_block_image_cb (GtkWidget*       widget,$/;"	f	file:
adblock_deactivate_cb	extensions/adblock.c	/^adblock_deactivate_cb (MidoriExtension* extension,$/;"	f	file:
adblock_deactivate_tabs	extensions/adblock.c	/^adblock_deactivate_tabs (MidoriView*      view,$/;"	f	file:
adblock_debug	extensions/adblock.c	32;"	d	file:
adblock_debug	extensions/adblock.c	35;"	d	file:
adblock_download_notify_status_cb	extensions/adblock.c	/^adblock_download_notify_status_cb (WebKitDownload*  download,$/;"	f	file:
adblock_fixup_regexp	extensions/adblock.c	/^adblock_fixup_regexp (const gchar* prefix,$/;"	f	file:
adblock_frame_add	extensions/adblock.c	/^adblock_frame_add (gchar* line)$/;"	f	file:
adblock_frame_add_private	extensions/adblock.c	/^adblock_frame_add_private (const gchar* line,$/;"	f	file:
adblock_get_filename_for_uri	extensions/adblock.c	/^adblock_get_filename_for_uri (const gchar* uri)$/;"	f	file:
adblock_get_preferences_dialog	extensions/adblock.c	/^adblock_get_preferences_dialog (MidoriExtension* extension)$/;"	f	file:
adblock_init_db	extensions/adblock.c	/^adblock_init_db ()$/;"	f	file:
adblock_is_matched	extensions/adblock.c	/^adblock_is_matched (const gchar*  req_uri,$/;"	f	file:
adblock_is_matched_by_key	extensions/adblock.c	/^adblock_is_matched_by_key (const gchar* req_uri,$/;"	f	file:
adblock_is_matched_by_pattern	extensions/adblock.c	/^adblock_is_matched_by_pattern (const gchar* req_uri,$/;"	f	file:
adblock_load_finished_cb	extensions/adblock.c	/^adblock_load_finished_cb (WebKitWebView  *web_view,$/;"	f	file:
adblock_open_preferences_cb	extensions/adblock.c	/^adblock_open_preferences_cb (MidoriExtension* extension)$/;"	f	file:
adblock_parse_file	extensions/adblock.c	/^adblock_parse_file (gchar* path)$/;"	f	file:
adblock_parse_line	extensions/adblock.c	/^adblock_parse_line (gchar* line)$/;"	f	file:
adblock_populate_popup_cb	extensions/adblock.c	/^adblock_populate_popup_cb (WebKitWebView*   web_view,$/;"	f	file:
adblock_preferences_add_clicked_cb	extensions/adblock.c	/^adblock_preferences_add_clicked_cb (GtkWidget*    button,$/;"	f	file:
adblock_preferences_edit_clicked_cb	extensions/adblock.c	/^adblock_preferences_edit_clicked_cb (GtkWidget*         button,$/;"	f	file:
adblock_preferences_model_row_changed_cb	extensions/adblock.c	/^adblock_preferences_model_row_changed_cb (GtkTreeModel*    model,$/;"	f	file:
adblock_preferences_model_row_deleted_cb	extensions/adblock.c	/^adblock_preferences_model_row_deleted_cb (GtkTreeModel*    model,$/;"	f	file:
adblock_preferences_remove_clicked_cb	extensions/adblock.c	/^adblock_preferences_remove_clicked_cb (GtkWidget*   button,$/;"	f	file:
adblock_preferences_render_text_cb	extensions/adblock.c	/^adblock_preferences_render_text_cb (GtkTreeViewColumn* column,$/;"	f	file:
adblock_preferences_render_tick_cb	extensions/adblock.c	/^adblock_preferences_render_tick_cb (GtkTreeViewColumn* column,$/;"	f	file:
adblock_preferences_renderer_text_edited_cb	extensions/adblock.c	/^adblock_preferences_renderer_text_edited_cb (GtkCellRenderer* renderer,$/;"	f	file:
adblock_preferences_renderer_toggle_toggled_cb	extensions/adblock.c	/^adblock_preferences_renderer_toggle_toggled_cb (GtkCellRendererToggle* renderer,$/;"	f	file:
adblock_preferences_response_cb	extensions/adblock.c	/^adblock_preferences_response_cb (GtkWidget* dialog,$/;"	f	file:
adblock_prepare_urihider_js	extensions/adblock.c	/^adblock_prepare_urihider_js (GList* uris)$/;"	f	file:
adblock_reload_rules	extensions/adblock.c	/^adblock_reload_rules (MidoriExtension* extension,$/;"	f	file:
adblock_resource_request_starting_cb	extensions/adblock.c	/^adblock_resource_request_starting_cb (WebKitWebView*         web_view,$/;"	f	file:
adblock_window_object_cleared_cb	extensions/adblock.c	/^adblock_window_object_cleared_cb (WebKitWebView*  web_view,$/;"	f	file:
add_as_needed	waf-modules/wafadmin/Tools/ccroot.py	/^def add_as_needed(conf):$/;"	f
add_browser	midori/midori-app.c	/^    (*add_browser)            (MidoriApp*     app,$/;"	m	struct:_MidoriAppClass	file:
add_dbus_file	waf-modules/wafadmin/Tools/dbus.py	/^def add_dbus_file(self,filename,prefix,mode):$/;"	f
add_enums	waf-modules/wafadmin/Tools/glib2.py	/^def add_enums(self,source='',target='',file_head='',file_prod='',file_tail='',enum_prod='',value_head='',value_prod='',value_tail='',comments=''):$/;"	f
add_enums_from_template	waf-modules/wafadmin/Tools/glib2.py	/^def add_enums_from_template(self,source='',target='',template='',comments=''):$/;"	f
add_extra_flags	waf-modules/wafadmin/Tools/ccroot.py	/^def add_extra_flags(self):$/;"	f
add_file_dependency	waf-modules/wafadmin/Task.py	/^	def add_file_dependency(self,filename):$/;"	m	class:Task
add_finished	waf-modules/wafadmin/Task.py	/^	def add_finished(self,tsk):$/;"	m	class:TaskManager
add_group	waf-modules/wafadmin/Build.py	/^	def add_group(self,*k):$/;"	m	class:BuildContext
add_group	waf-modules/wafadmin/Task.py	/^	def add_group(self,name=None,set=True):$/;"	m	class:TaskManager
add_item	katze/katze-array.c	/^    (*add_item)               (KatzeArray* array,$/;"	m	struct:_KatzeArrayClass	file:
add_lang	waf-modules/wafadmin/Tools/qt4.py	/^def add_lang(self,node):$/;"	f
add_manual_dependency	waf-modules/wafadmin/Build.py	/^	def add_manual_dependency(self,path,value):$/;"	m	class:BuildContext
add_marshal_file	waf-modules/wafadmin/Tools/glib2.py	/^def add_marshal_file(self,filename,prefix):$/;"	f
add_moc_tasks	waf-modules/wafadmin/Tools/qt4.py	/^	def add_moc_tasks(self):$/;"	m	class:qxx_task
add_obj_file	waf-modules/wafadmin/Tools/ccroot.py	/^def add_obj_file(self,file):$/;"	f
add_option	waf-modules/wafadmin/Options.py	/^	def add_option(self,*k,**kw):$/;"	m	class:Handler
add_option_group	waf-modules/wafadmin/Options.py	/^	def add_option_group(self,*k,**kw):$/;"	m	class:Handler
add_os_flags	waf-modules/wafadmin/Configure.py	/^	def add_os_flags(self,var,dest=None):$/;"	m	class:ConfigurationContext
add_path	waf-modules/wafadmin/Tools/unittestw.py	/^					def add_path(dct,path,var):$/;"	f	function:unit_test.run
add_path	waf-modules/wafadmin/Tools/unittestw.py	/^		def add_path(dct,path,var):$/;"	f	function:exec_test
add_post_fun	waf-modules/wafadmin/Build.py	/^	def add_post_fun(self,meth):$/;"	m	class:BuildContext
add_pre_fun	waf-modules/wafadmin/Build.py	/^	def add_pre_fun(self,meth):$/;"	m	class:BuildContext
add_shlib_d_flags	waf-modules/wafadmin/Tools/d.py	/^def add_shlib_d_flags(self):$/;"	f
add_subdir	waf-modules/wafadmin/Scripting.py	/^def add_subdir(dir,bld):$/;"	f
add_subdirs	waf-modules/wafadmin/Build.py	/^	def add_subdirs(self,dirs):$/;"	m	class:BuildContext
add_tab	midori/midori-browser.h	/^    (*add_tab)                 (MidoriBrowser*       browser,$/;"	m	struct:_MidoriBrowserClass
add_task	waf-modules/wafadmin/Task.py	/^	def add_task(self,task):$/;"	m	class:TaskManager
add_task_gen	waf-modules/wafadmin/Task.py	/^	def add_task_gen(self,tgen):$/;"	m	class:TaskManager
added	katze/katze-item.h	/^    gint64 added;$/;"	m	struct:_KatzeItem
addlines	waf-modules/wafadmin/Tools/preproc.py	/^	def addlines(self,node):$/;"	m	class:c_parser
addons	_build_/c4che/default.cache.py	/^addons = True$/;"	v
addons_activate_cb	extensions/addons.c	/^addons_activate_cb (MidoriExtension* extension,$/;"	f	file:
addons_add_tab_cb	extensions/addons.c	/^addons_add_tab_cb (MidoriBrowser* browser,$/;"	f	file:
addons_add_tab_foreach_cb	extensions/addons.c	/^addons_add_tab_foreach_cb (MidoriView*      view,$/;"	f	file:
addons_app_add_browser_cb	extensions/addons.c	/^addons_app_add_browser_cb (MidoriApp*       app,$/;"	f	file:
addons_apply_global_stylesheet	extensions/addons.c	/^addons_apply_global_stylesheet (MidoriExtension* extension)$/;"	f	file:
addons_browser_destroy	extensions/addons.c	/^addons_browser_destroy (MidoriBrowser*   browser,$/;"	f	file:
addons_button_add_clicked_cb	extensions/addons.c	/^addons_button_add_clicked_cb (GtkToolItem* toolitem,$/;"	f	file:
addons_button_delete_clicked_cb	extensions/addons.c	/^addons_button_delete_clicked_cb (GtkWidget* toolitem,$/;"	f	file:
addons_button_release_event_cb	extensions/addons.c	/^addons_button_release_event_cb (GtkWidget*       widget,$/;"	f	file:
addons_cell_renderer_toggled_cb	extensions/addons.c	/^addons_cell_renderer_toggled_cb (GtkCellRendererToggle* renderer,$/;"	f	file:
addons_class_init	extensions/addons.c	/^addons_class_init (AddonsClass* class)$/;"	f	file:
addons_context_ready_cb	extensions/addons.c	/^addons_context_ready_cb (WebKitWebView*   web_view,$/;"	f	file:
addons_convert_to_simple_regexp	extensions/addons.c	/^addons_convert_to_simple_regexp (const gchar* pattern)$/;"	f	file:
addons_deactivate_cb	extensions/addons.c	/^addons_deactivate_cb (MidoriExtension* extension,$/;"	f	file:
addons_deactivate_tabs	extensions/addons.c	/^addons_deactivate_tabs (MidoriView*      view,$/;"	f	file:
addons_directory_monitor_changed	extensions/addons.c	/^addons_directory_monitor_changed (GFileMonitor*     monitor,$/;"	f	file:
addons_disable_monitors	extensions/addons.c	/^addons_disable_monitors (MidoriExtension* extension)$/;"	f	file:
addons_free_elements	extensions/addons.c	/^addons_free_elements (GSList* elements)$/;"	f	file:
addons_generate_global_stylesheet	extensions/addons.c	/^addons_generate_global_stylesheet (MidoriExtension* extension)$/;"	f	file:
addons_get_directories	extensions/addons.c	/^addons_get_directories (AddonsKind kind)$/;"	f	file:
addons_get_element_content	extensions/addons.c	/^addons_get_element_content (gchar*     file_path,$/;"	f	file:
addons_get_files	extensions/addons.c	/^addons_get_files (AddonsKind kind)$/;"	f	file:
addons_get_label	extensions/addons.c	/^addons_get_label (MidoriViewable* viewable)$/;"	f	file:
addons_get_stock_id	extensions/addons.c	/^addons_get_stock_id (MidoriViewable* viewable)$/;"	f	file:
addons_get_toolbar	extensions/addons.c	/^addons_get_toolbar (MidoriViewable* viewable)$/;"	f
addons_iface_init	extensions/addons.c	/^addons_iface_init (MidoriViewableIface* iface)$/;"	f	file:
addons_init	extensions/addons.c	/^addons_init (Addons* addons)$/;"	f	file:
addons_install_response	extensions/addons.c	/^addons_install_response (GtkWidget*  infobar,$/;"	f	file:
addons_may_run	extensions/addons.c	/^addons_may_run (const gchar* uri,$/;"	f	file:
addons_monitor_directories	extensions/addons.c	/^addons_monitor_directories (MidoriExtension* extension,$/;"	f	file:
addons_new	extensions/addons.c	/^addons_new (AddonsKind kind, MidoriExtension* extension)$/;"	f
addons_notify_load_status_cb	extensions/addons.c	/^addons_notify_load_status_cb (MidoriView*      view,$/;"	f	file:
addons_open_in_editor_clicked_cb	extensions/addons.c	/^addons_open_in_editor_clicked_cb (GtkWidget* toolitem,$/;"	f	file:
addons_open_target_folder_clicked_cb	extensions/addons.c	/^addons_open_target_folder_clicked_cb (GtkWidget* toolitem,$/;"	f	file:
addons_popup	extensions/addons.c	/^addons_popup (GtkWidget*           widget,$/;"	f	file:
addons_popup_item	extensions/addons.c	/^addons_popup_item (GtkMenu*             menu,$/;"	f	file:
addons_popup_menu_cb	extensions/addons.c	/^addons_popup_menu_cb (GtkWidget *widget,$/;"	f	file:
addons_reset_all_elements_cb	extensions/addons.c	/^addons_reset_all_elements_cb (MidoriExtension* extension)$/;"	f	file:
addons_save_settings	extensions/addons.c	/^addons_save_settings (MidoriApp*       app,$/;"	f	file:
addons_skip_element	extensions/addons.c	/^addons_skip_element (struct AddonElement* element,$/;"	f	file:
addons_treeview_render_text_cb	extensions/addons.c	/^addons_treeview_render_text_cb (GtkTreeViewColumn* column,$/;"	f	file:
addons_treeview_render_tick_cb	extensions/addons.c	/^addons_treeview_render_tick_cb (GtkTreeViewColumn* column,$/;"	f	file:
addons_treeview_row_activated_cb	extensions/addons.c	/^addons_treeview_row_activated_cb (GtkTreeView*       treeview,$/;"	f	file:
addons_update_elements	extensions/addons.c	/^addons_update_elements (MidoriExtension* extension,$/;"	f	file:
addons_uri_install	extensions/addons.c	/^addons_uri_install (MidoriView*    view,$/;"	f	file:
addr	midori/socket.c	/^	struct sockaddr *addr;$/;"	m	struct:_SockAddrData	typeref:struct:_SockAddrData::sockaddr	file:
addr_len	midori/socket.c	/^	gint addr_len;$/;"	m	struct:_SockAddrData	file:
addr_list	midori/socket.c	/^	GList *addr_list;$/;"	m	struct:_SockConnectData	file:
after	waf-modules/wafadmin/TaskGen.py	/^def after(*k):$/;"	f
alerts	midori/midori-view.c	/^    gint alerts;$/;"	m	struct:_MidoriView	file:
algotype	waf-modules/wafadmin/Task.py	/^algotype=NORMAL$/;"	v
all_icl_platforms	waf-modules/wafadmin/Tools/msvc.py	/^all_icl_platforms=[('intel64','amd64'),('em64t','amd64'),('ia32','x86'),('Itanium','ia64')]$/;"	v
all_modifs	waf-modules/wafadmin/py3kfixes.py	/^all_modifs={}$/;"	v
all_msvc_platforms	waf-modules/wafadmin/Tools/msvc.py	/^all_msvc_platforms=[('x64','amd64'),('x86','x86'),('ia64','ia64'),('x86_amd64','amd64'),('x86_ia64','ia64')]$/;"	v
all_wince_platforms	waf-modules/wafadmin/Tools/msvc.py	/^all_wince_platforms=[('armv4','arm'),('armv4i','arm'),('mipsii','mips'),('mipsii_fp','mips'),('mipsiv','mips'),('mipsiv_fp','mips'),('sh4','sh'),('x86','cex86')]$/;"	v
alloc_timeout	midori/midori-browser.c	/^    guint alloc_timeout;$/;"	m	struct:_MidoriBrowser	file:
always	waf-modules/wafadmin/Task.py	/^	def always(self):$/;"	f	function:always_run
always_run	waf-modules/wafadmin/Task.py	/^def always_run(cls):$/;"	f
always_show_tabbar	midori/midori-websettings.c	/^    gboolean always_show_tabbar : 1;$/;"	m	struct:_MidoriWebSettings	file:
animated	katze/katze-throbber.c	/^    gboolean animated;$/;"	m	struct:_KatzeThrobber	file:
ansi_command_table	waf-modules/wafadmin/ansiterm.py	/^		ansi_command_table={'A':move_up,'B':move_down,'C':move_right,'D':move_left,'E':next_line,'F':prev_line,'G':set_column,'H':set_cursor,'f':set_cursor,'J':clear_screen,'K':clear_line,'h':show_cursor,'l':hide_cursor,'m':set_color,'s':push_cursor,'u':pop_cursor,}$/;"	v	class:AnsiTerm
ansi_tokans	waf-modules/wafadmin/ansiterm.py	/^		ansi_tokans=re.compile('(?:\\x1b\\[([0-9?;]*)([a-zA-Z])|([^\\x1b]+))')$/;"	v	class:AnsiTerm
ant_glob	waf-modules/wafadmin/Node.py	/^	def ant_glob(self,*k,**kw):$/;"	m	class:Node
ant_iter	waf-modules/wafadmin/Node.py	/^		def ant_iter(nodi,maxdepth=25,pats=[]):$/;"	f	function:Node.ant_glob
app	extensions/cookie-manager/cookie-manager.c	/^	MidoriApp *app;$/;"	m	struct:_CookieManagerPrivate	file:
app	midori/midori-extension.c	/^    MidoriApp* app;$/;"	m	struct:_MidoriExtensionPrivate	file:
app	panels/midori-bookmarks.c	/^    MidoriApp* app;$/;"	m	struct:_MidoriBookmarks	file:
app	panels/midori-extensions.c	/^    MidoriApp* app;$/;"	m	struct:_MidoriExtensions	file:
app	panels/midori-history.c	/^    MidoriApp* app;$/;"	m	struct:_MidoriHistory	file:
app	panels/midori-transfers.c	/^    MidoriApp* app;$/;"	m	struct:_MidoriTransfers	file:
app_build	waf-modules/wafadmin/Tools/osx.py	/^def app_build(task):$/;"	f
app_dirs	waf-modules/wafadmin/Tools/osx.py	/^app_dirs=['Contents','Contents\/MacOS','Contents\/Resources']$/;"	v
append_unique	waf-modules/wafadmin/Environment.py	/^	def append_unique(self,var,value):$/;"	m	class:Environment
append_value	waf-modules/wafadmin/Environment.py	/^	def append_value(self,var,value):$/;"	m	class:Environment
apply	waf-modules/wafadmin/TaskGen.py	/^	def apply(self):$/;"	m	class:task_gen
apply_bundle	waf-modules/wafadmin/Tools/osx.py	/^def apply_bundle(self):$/;"	f
apply_bundle_remove_dynamiclib	waf-modules/wafadmin/Tools/osx.py	/^def apply_bundle_remove_dynamiclib(self):$/;"	f
apply_cmd	waf-modules/wafadmin/Tools/misc.py	/^def apply_cmd(self):$/;"	f
apply_cmd_output	waf-modules/wafadmin/Tools/misc.py	/^def apply_cmd_output(self):$/;"	f
apply_copy	waf-modules/wafadmin/Tools/misc.py	/^def apply_copy(self):$/;"	f
apply_core	waf-modules/wafadmin/TaskGen.py	/^def apply_core(self):$/;"	f
apply_cs	waf-modules/wafadmin/Tools/cs.py	/^def apply_cs(self):$/;"	f
apply_d_libs	waf-modules/wafadmin/Tools/d.py	/^def apply_d_libs(self):$/;"	f
apply_d_link	waf-modules/wafadmin/Tools/d.py	/^def apply_d_link(self):$/;"	f
apply_d_vars	waf-modules/wafadmin/Tools/d.py	/^def apply_d_vars(self):$/;"	f
apply_defines_cc	waf-modules/wafadmin/Tools/cc.py	/^def apply_defines_cc(self):$/;"	f
apply_defines_cxx	waf-modules/wafadmin/Tools/cxx.py	/^def apply_defines_cxx(self):$/;"	f
apply_flags_msvc	waf-modules/wafadmin/Tools/msvc.py	/^def apply_flags_msvc(self):$/;"	f
apply_framework	waf-modules/wafadmin/Tools/osx.py	/^def apply_framework(self):$/;"	f
apply_gnome_doc	waf-modules/wafadmin/Tools/gnome.py	/^def apply_gnome_doc(self):$/;"	f
apply_gnome_sgml2man	waf-modules/wafadmin/Tools/gnome.py	/^def apply_gnome_sgml2man(self):$/;"	f
apply_implib	waf-modules/wafadmin/Tools/ccroot.py	/^def apply_implib(self):$/;"	f
apply_incpaths	waf-modules/wafadmin/Tools/ccroot.py	/^def apply_incpaths(self):$/;"	f
apply_incpaths_ml	waf-modules/wafadmin/Tools/ocaml.py	/^def apply_incpaths_ml(self):$/;"	f
apply_intltool_po	waf-modules/wafadmin/Tools/intltool.py	/^def apply_intltool_po(self):$/;"	f
apply_java	waf-modules/wafadmin/Tools/javaw.py	/^def apply_java(self):$/;"	f
apply_lib_vars	waf-modules/wafadmin/Tools/ccroot.py	/^def apply_lib_vars(self):$/;"	f
apply_libtool	waf-modules/wafadmin/Tools/libtool.py	/^def apply_libtool(self):$/;"	f
apply_link	waf-modules/wafadmin/Tools/ccroot.py	/^def apply_link(self):$/;"	f
apply_link_libtool	waf-modules/wafadmin/Tools/libtool.py	/^def apply_link_libtool(self):$/;"	f
apply_link_ml	waf-modules/wafadmin/Tools/ocaml.py	/^def apply_link_ml(self):$/;"	f
apply_link_osx	waf-modules/wafadmin/Tools/osx.py	/^def apply_link_osx(self):$/;"	f
apply_manifest	waf-modules/wafadmin/Tools/msvc.py	/^def apply_manifest(self):$/;"	f
apply_msgfmt	waf-modules/wafadmin/Tools/kde4.py	/^def apply_msgfmt(self):$/;"	f
apply_nasm_vars	waf-modules/wafadmin/Tools/nasm.py	/^def apply_nasm_vars(self):$/;"	f
apply_obj_vars	waf-modules/wafadmin/Tools/ccroot.py	/^def apply_obj_vars(self):$/;"	f
apply_obj_vars_cc	waf-modules/wafadmin/Tools/cc.py	/^def apply_obj_vars_cc(self):$/;"	f
apply_obj_vars_cxx	waf-modules/wafadmin/Tools/cxx.py	/^def apply_obj_vars_cxx(self):$/;"	f
apply_obj_vars_msvc	waf-modules/wafadmin/Tools/msvc.py	/^def apply_obj_vars_msvc(self):$/;"	f
apply_objdeps	waf-modules/wafadmin/Tools/ccroot.py	/^def apply_objdeps(self):$/;"	f
apply_qt4	waf-modules/wafadmin/Tools/qt4.py	/^def apply_qt4(self):$/;"	f
apply_ruby_so_name	waf-modules/wafadmin/Tools/ruby.py	/^def apply_ruby_so_name(self):$/;"	f
apply_subst	waf-modules/wafadmin/Tools/misc.py	/^def apply_subst(self):$/;"	f
apply_tex	waf-modules/wafadmin/Tools/tex.py	/^def apply_tex(self):$/;"	f
apply_type_vars	waf-modules/wafadmin/Tools/ccroot.py	/^def apply_type_vars(self):$/;"	f
apply_uselib_cs	waf-modules/wafadmin/Tools/cs.py	/^def apply_uselib_cs(self):$/;"	f
apply_vars_ml	waf-modules/wafadmin/Tools/ocaml.py	/^def apply_vars_ml(self):$/;"	f
apply_verif	waf-modules/wafadmin/Tools/ccroot.py	/^def apply_verif(self):$/;"	f
apply_vnum	waf-modules/wafadmin/Tools/ccroot.py	/^def apply_vnum(self):$/;"	f
apply_xml_to	waf-modules/wafadmin/Tools/gnome.py	/^def apply_xml_to(self):$/;"	f
ar_str	waf-modules/wafadmin/Tools/ar.py	/^ar_str='${AR} ${ARFLAGS} ${AR_TGT_F}${TGT} ${AR_SRC_F}${SRC}'$/;"	v
are_socks_proxy_servers_supported	data/faq.html	/^<h4><a name="are_socks_proxy_servers_supported" id="are_socks_proxy_servers_supported">Are SOCKS proxy servers supported?<\/a><\/h4>$/;"	a
are_socks_proxy_servers_supported	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="are_socks_proxy_servers_supported" id="are_socks_proxy_servers_supported">Are SOCKS proxy servers supported?<\/a><\/h4>$/;"	a
are_socks_proxy_servers_supported	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="are_socks_proxy_servers_supported" id="are_socks_proxy_servers_supported">Are SOCKS proxy servers supported?<\/a><\/h4>$/;"	a
arg_line	waf-modules/wafadmin/Options.py	/^arg_line=[]$/;"	v
args	waf-modules/wafadmin/Tools/misc.py	/^	args=[]$/;"	v
argv	waf-modules/wafadmin/Tools/python.py	/^			argv=[self.env['PYTHON'],'-c',program,path]$/;"	v
argv	waf-modules/wafadmin/Tools/python.py	/^			argv=[self.env['PYTHON'],self.env['PYFLAGS_OPT'],'-c',program,path]$/;"	v
array	katze/katze-arrayaction.c	/^    KatzeArray* array;$/;"	m	struct:_KatzeArrayAction	file:
array	panels/midori-bookmarks.c	/^    KatzeArray* array;$/;"	m	struct:_MidoriBookmarks	file:
array	panels/midori-history.c	/^    KatzeArray* array;$/;"	m	struct:_MidoriHistory	file:
as_str	waf-modules/wafadmin/Tools/gas.py	/^as_str='${AS} ${ASFLAGS} ${_ASINCFLAGS} ${SRC} -o ${TGT}'$/;"	v
asm_hook	waf-modules/wafadmin/Tools/gas.py	/^def asm_hook(self,node):$/;"	f
asm_incflags	waf-modules/wafadmin/Tools/gas.py	/^def asm_incflags(self):$/;"	f
atom_get_link	extensions/feed-panel/feed-atom.c	/^atom_get_link (KatzeItem* item,$/;"	f	file:
atom_init_parser	extensions/feed-panel/feed-atom.c	/^atom_init_parser (void)$/;"	f
atom_is_valid	extensions/feed-panel/feed-atom.c	/^atom_is_valid (FeedParser* fparser)$/;"	f	file:
atom_parse_entry	extensions/feed-panel/feed-atom.c	/^atom_parse_entry (FeedParser* fparser)$/;"	f	file:
atom_parse_feed	extensions/feed-panel/feed-atom.c	/^atom_parse_feed (FeedParser* fparser)$/;"	f	file:
atom_postparse_entry	extensions/feed-panel/feed-atom.c	/^atom_postparse_entry (FeedParser* fparser)$/;"	f	file:
atom_postparse_feed	extensions/feed-panel/feed-atom.c	/^atom_postparse_feed (FeedParser* fparser)$/;"	f	file:
atom_preferred_link	extensions/feed-panel/feed-atom.c	/^atom_preferred_link (const gchar* old,$/;"	f	file:
atom_preparse_entry	extensions/feed-panel/feed-atom.c	/^atom_preparse_entry (FeedParser* fparser)$/;"	f	file:
atom_update	extensions/feed-panel/feed-atom.c	/^atom_update (FeedParser* fparser)$/;"	f	file:
attr	waf-modules/wafadmin/Task.py	/^	def attr(self,att,default=None):$/;"	m	class:TaskBase
auth	katze/katze-http-auth.c	/^    SoupAuth* auth;$/;"	m	struct:__anon29	file:
authentication_dialog_response_cb	katze/katze-http-auth.c	/^authentication_dialog_response_cb (GtkWidget*         dialog,$/;"	f	file:
authentication_message_got_headers_cb	katze/katze-http-auth.c	/^authentication_message_got_headers_cb (SoupMessage*       msg,$/;"	f	file:
authors	midori/midori-extension.c	/^    gchar* authors;$/;"	m	struct:_MidoriExtensionPrivate	file:
autoconfig	waf-modules/wafadmin/Configure.py	/^autoconfig=False$/;"	v
autodetect	waf-modules/wafadmin/Tools/msvc.py	/^def autodetect(conf):$/;"	f
b	waf	/^	def b(x):$/;"	f	function:b
b	waf	/^def b(x):$/;"	f
b	waf-modules/wafadmin/Tools/ocaml.py	/^b=Task.simple_task_type$/;"	v
b	waf-modules/wafadmin/Tools/qt4.py	/^b=Task.simple_task_type$/;"	v
b	waf-modules/wafadmin/Tools/tex.py	/^b=Task.simple_task_type$/;"	v
b	waf-modules/wafadmin/Tools/tex.py	/^b=Task.task_type_from_func$/;"	v
b	waf-unpacked	/^	def b(x):$/;"	f	function:b
b	waf-unpacked	/^def b(x):$/;"	f
back_forward_set	midori/midori-view.c	/^    gboolean back_forward_set;$/;"	m	struct:_MidoriView	file:
base64_space_pad	midori/midori-websettings.c	/^base64_space_pad (gchar* base64,$/;"	f	file:
base_iface	midori/midori-viewable.h	/^    GTypeInterface base_iface;$/;"	m	struct:_MidoriViewableIface
basedir	debian/waf-unpack	/^basedir = path.join(path.dirname(path.abspath(__file__)), "..")$/;"	v
before	waf-modules/wafadmin/TaskGen.py	/^def before(*k):$/;"	f
before	waf-modules/wafadmin/Tools/qt4.py	/^	before=['cxx_link','static_link']$/;"	v	class:qxx_task
before	waf-modules/wafadmin/Tools/vala.py	/^	before=("cc","cxx")$/;"	v	class:valac_task
big_bison	waf-modules/wafadmin/Tools/bison.py	/^def big_bison(self,node):$/;"	f
bind_feature	waf-modules/wafadmin/TaskGen.py	/^def bind_feature(name,methods):$/;"	f
bison	waf-modules/wafadmin/Tools/bison.py	/^bison='${BISON} ${BISONFLAGS} ${SRC[0].abspath()} -o ${TGT[0].name}'$/;"	v
bld	waf-modules/wafadmin/Build.py	/^bld=None$/;"	v
bld_base	waf-modules/wafadmin/Node.py	/^	def bld_base(self,env):$/;"	m	class:Node
bld_dir	waf-modules/wafadmin/Node.py	/^	def bld_dir(self,env):$/;"	m	class:Node
bldpath	waf-modules/wafadmin/Node.py	/^	def bldpath(self,env=None):$/;"	m	class:Node
block1_data_ref	_build_/default/extensions/history-list.c	/^static Block1Data* block1_data_ref (Block1Data* _data1_) {$/;"	f	file:
block1_data_unref	_build_/default/extensions/history-list.c	/^static void block1_data_unref (void * _userdata_) {$/;"	f	file:
block2_data_ref	_build_/default/extensions/history-list.c	/^static Block2Data* block2_data_ref (Block2Data* _data2_) {$/;"	f	file:
block2_data_unref	_build_/default/extensions/history-list.c	/^static void block2_data_unref (void * _userdata_) {$/;"	f	file:
blockcss	extensions/adblock.c	/^static GString* blockcss;$/;"	v	file:
blockcssprivate	extensions/adblock.c	/^static GString* blockcssprivate;$/;"	v	file:
blockscript	extensions/adblock.c	/^static gchar* blockscript = NULL;$/;"	v	file:
bookmark	panels/midori-history.c	/^    GtkWidget* bookmark;$/;"	m	struct:_MidoriHistory	file:
bookmarkbar	midori/midori-browser.c	/^    GtkWidget* bookmarkbar;$/;"	m	struct:_MidoriBrowser	file:
bookmarks	midori/midori-app.c	/^    KatzeArray* bookmarks;$/;"	m	struct:_MidoriApp	file:
bookmarks	midori/midori-browser.c	/^    KatzeArray* bookmarks;$/;"	m	struct:_MidoriBrowser	file:
boost_cpppath	waf-modules/wafadmin/3rdparty/boost.py	/^boost_cpppath=['\/usr\/include','\/usr\/local\/include','\/opt\/local\/include','\/sw\/include']$/;"	v
boost_libpath	waf-modules/wafadmin/3rdparty/boost.py	/^boost_libpath=['\/usr\/lib','\/usr\/local\/lib','\/opt\/local\/lib','\/sw\/lib','\/lib']$/;"	v
box	katze/katze-preferences.c	/^    GtkWidget* box;$/;"	m	struct:_KatzePreferencesPrivate	file:
broken	extensions/addons.c	/^    gboolean broken;$/;"	m	struct:AddonElement	file:
browser	_build_/default/extensions/history-list.c	/^	MidoriBrowser* browser;$/;"	m	struct:_Block1Data	file:
browser	_build_/default/extensions/history-list.c	/^	MidoriBrowser* browser;$/;"	m	struct:_Block2Data	file:
browser	extensions/feed-panel/main.c	/^    MidoriBrowser* browser;$/;"	m	struct:__anon11	file:
browser	extensions/toolbar-editor.c	/^	MidoriBrowser *browser;$/;"	m	struct:__anon16	file:
browser	midori/main.c	/^     MidoriBrowser* browser;$/;"	m	struct:__anon40	file:
browser	midori/midori-app.c	/^    MidoriBrowser* browser;$/;"	m	struct:_MidoriApp	file:
browser_create	tests/browser.c	/^browser_create (void)$/;"	f	file:
browser_tooltips	tests/browser.c	/^browser_tooltips (void)$/;"	f	file:
browsers	midori/midori-app.c	/^    KatzeArray* browsers;$/;"	m	struct:_MidoriApp	file:
build	waf-modules/wafadmin/Scripting.py	/^def build(bld):$/;"	f
build_config_filename	midori/main.c	/^build_config_filename (const gchar* filename)$/;"	f	file:
build_impl	waf-modules/wafadmin/Scripting.py	/^def build_impl(bld):$/;"	f
bundle_name_for_output	waf-modules/wafadmin/Tools/osx.py	/^def bundle_name_for_output(out):$/;"	f
button	extensions/mouse-gestures.c	/^    MouseButton button;$/;"	m	struct:_MouseGesture	file:
button	toolbars/midori-transferbar.c	/^    GtkWidget* button;$/;"	m	struct:__anon81	file:
button_align	midori/midori-panel.c	/^    GtkToolItem* button_align;$/;"	m	struct:_MidoriPanel	file:
button_disable_extensions_clicked_cb	midori/main.c	/^button_disable_extensions_clicked_cb (GtkWidget* button,$/;"	f	file:
button_modify_preferences_clicked_cb	midori/main.c	/^button_modify_preferences_clicked_cb (GtkWidget*         button,$/;"	f	file:
button_press_event	katze/katze-scrolled.c	/^button_press_event (GtkWidget*      widget,$/;"	f	file:
button_release_event	katze/katze-scrolled.c	/^button_release_event (GtkWidget*      widget,$/;"	f	file:
bytecode_lst	waf-modules/wafadmin/Tools/ocaml.py	/^bytecode_lst=['bytecode','all']$/;"	v
c_attrs	waf-modules/wafadmin/Tools/ccroot.py	/^c_attrs={'cxxflag':'CXXFLAGS','cflag':'CCFLAGS','ccflag':'CCFLAGS','linkflag':'LINKFLAGS','ldflag':'LINKFLAGS','lib':'LIB','libpath':'LIBPATH','staticlib':'STATICLIB','staticlibpath':'STATICLIBPATH','rpath':'RPATH','framework':'FRAMEWORK','frameworkpath':'FRAMEWORKPATH'}$/;"	v
c_compiler	waf-modules/wafadmin/Tools/compiler_cc.py	/^c_compiler={'win32':['msvc','gcc'],'cygwin':['gcc'],'darwin':['gcc'],'aix':['xlc','gcc'],'linux':['gcc','icc','suncc'],'sunos':['gcc','suncc'],'irix':['gcc'],'hpux':['gcc'],'gnu':['gcc'],'default':['gcc']}$/;"	v
c_hook	waf-modules/wafadmin/Tools/cc.py	/^def c_hook(self,node):$/;"	f
c_parser	waf-modules/wafadmin/Tools/preproc.py	/^class c_parser(object):$/;"	c
cache_path	katze/katze-net.c	/^    gchar* cache_path;$/;"	m	struct:_KatzeNet	file:
cache_size	katze/katze-net.c	/^    guint cache_size;$/;"	m	struct:_KatzeNet	file:
cached_find_resource	waf-modules/wafadmin/Tools/preproc.py	/^	def cached_find_resource(self,node,filename):$/;"	m	class:c_parser
calculate_motion_scroll_values	katze/katze-scrolled.c	/^calculate_motion_scroll_values (gdouble old_value,$/;"	f	file:
calculate_timeout_scroll_values	katze/katze-scrolled.c	/^calculate_timeout_scroll_values (gdouble  old_value,$/;"	f	file:
call	waf-modules/wafadmin/pproc.py	/^def call(*popenargs,**kwargs):$/;"	f
call_run	waf-modules/wafadmin/Task.py	/^	def call_run(self):$/;"	m	class:TaskBase
callback	katze/katze-http-cookies-sqlite.c	/^callback (void *data, int argc, char **argv, char **colname)$/;"	f	file:
callback	midori/socket.h	/^	SockFunc callback;$/;"	m	struct:_SockInfo
can_do	midori/midori-view.c	/^can_do (reload)$/;"	f
can_do	midori/midori-view.c	4923;"	d	file:
can_retrieve_cache	waf-modules/wafadmin/Task.py	/^	def can_retrieve_cache(self):$/;"	m	class:Task
can_retrieve_cache	waf-modules/wafadmin/Task.py	/^	def can_retrieve_cache(self):$/;"	m	class:TaskBase
cc_add_flags	waf-modules/wafadmin/Tools/config_c.py	/^def cc_add_flags(conf):$/;"	f
cc_load_tools	waf-modules/wafadmin/Tools/config_c.py	/^def cc_load_tools(conf):$/;"	f
cc_str	waf-modules/wafadmin/Tools/cc.py	/^cc_str='${CC} ${CCFLAGS} ${CPPFLAGS} ${_CCINCFLAGS} ${_CCDEFFLAGS} ${CC_SRC_F}${SRC} ${CC_TGT_F}${TGT}'$/;"	v
cc_taskgen	waf-modules/wafadmin/Tools/cc.py	/^class cc_taskgen(ccroot.ccroot_abstract):$/;"	c
ccroot_abstract	waf-modules/wafadmin/Tools/ccroot.py	/^class ccroot_abstract(TaskGen.task_gen):$/;"	c
cfg_files	_build_/c4che/default.cache.py	/^cfg_files = ['config.h']$/;"	v
change_ext	waf-modules/wafadmin/Node.py	/^	def change_ext(self,ext):$/;"	m	class:Node
channel	midori/socket.c	/^	GIOChannel *channel;$/;"	m	struct:_SockConnectData	file:
channel	midori/socket.c	/^	GIOChannel *channel;$/;"	m	struct:_SockLookupData	file:
characters	waf-modules/wafadmin/Tools/qt4.py	/^	def characters(self,cars):$/;"	m	class:XMLHandler
check	waf-modules/wafadmin/Tools/config_c.py	/^def check(self,*k,**kw):$/;"	f
checkPython	configure	/^checkPython()$/;"	f
checkWAF	configure	/^checkWAF()$/;"	f
check_boost	waf-modules/wafadmin/3rdparty/boost.py	/^def check_boost(self,*k,**kw):$/;"	f
check_call	waf-modules/wafadmin/pproc.py	/^def check_call(*popenargs,**kwargs):$/;"	f
check_cc	waf-modules/wafadmin/Tools/config_c.py	/^def check_cc(self,*k,**kw):$/;"	f
check_cfg	waf-modules/wafadmin/Tools/config_c.py	/^def check_cfg(self,*k,**kw):$/;"	f
check_configured	waf-modules/wafadmin/Scripting.py	/^def check_configured(bld):$/;"	f
check_cxx	waf-modules/wafadmin/Tools/config_c.py	/^def check_cxx(self,*k,**kw):$/;"	f
check_dir	waf-modules/wafadmin/Utils.py	/^def check_dir(dir):$/;"	f
check_dlibrary	waf-modules/wafadmin/Tools/d.py	/^def check_dlibrary(conf):$/;"	f
check_java_class	waf-modules/wafadmin/Tools/javaw.py	/^def check_java_class(self,classname,with_classpath=None):$/;"	f
check_jni_headers	waf-modules/wafadmin/Tools/javaw.py	/^def check_jni_headers(conf):$/;"	f
check_lib_msvc	waf-modules/wafadmin/Tools/msvc.py	/^def check_lib_msvc(self,libname,is_static=False,uselib_store=None,mandatory=False):$/;"	f
check_libs_msvc	waf-modules/wafadmin/Tools/msvc.py	/^def check_libs_msvc(self,libnames,is_static=False,mandatory=False):$/;"	f
check_message	waf-modules/wafadmin/Configure.py	/^	def check_message(self,th,msg,state,option=''):$/;"	m	class:ConfigurationContext
check_message_1	waf-modules/wafadmin/Configure.py	/^	def check_message_1(self,sr):$/;"	m	class:ConfigurationContext
check_message_2	waf-modules/wafadmin/Configure.py	/^	def check_message_2(self,sr,color='GREEN'):$/;"	m	class:ConfigurationContext
check_message_custom	waf-modules/wafadmin/Configure.py	/^	def check_message_custom(self,th,msg,custom,option='',color='PINK'):$/;"	m	class:ConfigurationContext
check_perl_ext_devel	waf-modules/wafadmin/Tools/perl.py	/^def check_perl_ext_devel(conf):$/;"	f
check_perl_module	waf-modules/wafadmin/Tools/perl.py	/^def check_perl_module(conf,module):$/;"	f
check_perl_version	waf-modules/wafadmin/Tools/perl.py	/^def check_perl_version(conf,minver=None):$/;"	f
check_python_headers	waf-modules/wafadmin/Tools/python.py	/^def check_python_headers(conf,mandatory=True):$/;"	f
check_python_module	waf-modules/wafadmin/Tools/python.py	/^def check_python_module(conf,module_name):$/;"	f
check_python_version	waf-modules/wafadmin/Tools/python.py	/^def check_python_version(conf,minver=None):$/;"	f
check_ruby_ext_devel	waf-modules/wafadmin/Tools/ruby.py	/^def check_ruby_ext_devel(conf):$/;"	f
check_ruby_version	waf-modules/wafadmin/Tools/ruby.py	/^def check_ruby_version(conf,minver=()):$/;"	f
check_tool	waf-modules/wafadmin/Configure.py	/^	def check_tool(self,input,tooldir=None,funs=None):$/;"	m	class:ConfigurationContext
child1	midori/midori-panedaction.c	/^    struct _MidoriPanedActionChild child1;$/;"	m	struct:_MidoriPanedAction	typeref:struct:_MidoriPanedAction::_MidoriPanedActionChild	file:
child2	midori/midori-panedaction.c	/^    struct _MidoriPanedActionChild child2;$/;"	m	struct:_MidoriPanedAction	typeref:struct:_MidoriPanedAction::_MidoriPanedActionChild	file:
child_pid	midori/socket.c	/^	pid_t child_pid;$/;"	m	struct:_SockLookupData	file:
chmod	waf-modules/wafadmin/TaskGen.py	/^	chmod=property(get_chmod,set_chmod)$/;"	v	class:task_gen
chr_esc	waf-modules/wafadmin/Tools/preproc.py	/^chr_esc={'0':0,'a':7,'b':8,'t':9,'n':10,'f':11,'v':12,'r':13,'\\\\':92,"'":39}$/;"	v
classes	waf-modules/wafadmin/Task.py	/^	classes={}$/;"	v	class:TaskBase
classes	waf-modules/wafadmin/TaskGen.py	/^	classes={}$/;"	v	class:task_gen
clean	waf-modules/wafadmin/Build.py	/^	def clean(self):$/;"	m	class:BuildContext
clean	waf-modules/wafadmin/Scripting.py	/^def clean(bld):$/;"	f
clean_rec	waf-modules/wafadmin/Build.py	/^		def clean_rec(node):$/;"	f	function:BuildContext.clean
clean_up	_build_/default/extensions/history-list.c	/^	void (*clean_up) (HistoryListHistoryWindow* self);$/;"	m	struct:_HistoryListHistoryWindowClass	file:
cleaned	tools/check-style	/^                cleaned = omission[0].sub (omission[1], cleaned)$/;"	v
cleaned	tools/check-style	/^            cleaned = line$/;"	v
clear	katze/katze-array.c	/^    (*clear)                  (KatzeArray* array);$/;"	m	struct:_KatzeArrayClass	file:
clear	midori/sokoke.h	/^    GCallback clear;$/;"	m	struct:__anon53
clear	panels/midori-history.c	/^    GtkWidget* clear;$/;"	m	struct:_MidoriHistory	file:
clear	toolbars/midori-transferbar.c	/^    GtkToolItem* clear;$/;"	m	struct:_MidoriTransferbar	file:
clear_data	midori/midori-websettings.c	/^    gchar* clear_data;$/;"	m	struct:_MidoriWebSettings	file:
clear_line	waf-modules/wafadmin/ansiterm.py	/^		def clear_line(self,param):$/;"	m	class:AnsiTerm
clear_private_data	midori/midori-browser.c	/^    gint clear_private_data;$/;"	m	struct:_MidoriBrowser	file:
clear_private_data	midori/midori-websettings.c	/^    gint clear_private_data;$/;"	m	struct:_MidoriWebSettings	file:
clear_screen	waf-modules/wafadmin/ansiterm.py	/^		def clear_screen(self,param):$/;"	m	class:AnsiTerm
clock_activate_cb	extensions/status-clock.c	/^clock_activate_cb (MidoriExtension* extension,$/;"	f	file:
clock_app_add_browser_cb	extensions/status-clock.c	/^clock_app_add_browser_cb (MidoriApp*       app,$/;"	f	file:
clock_browser_destroy_cb	extensions/status-clock.c	/^clock_browser_destroy_cb (MidoriBrowser* browser,$/;"	f	file:
clock_deactivate_cb	extensions/status-clock.c	/^clock_deactivate_cb (MidoriExtension* extension,$/;"	f	file:
clock_set_current_time	extensions/status-clock.c	/^clock_set_current_time (MidoriBrowser* browser)$/;"	f	file:
clock_set_timeout	extensions/status-clock.c	/^clock_set_timeout (MidoriBrowser* browser,$/;"	f	file:
clone	waf-modules/wafadmin/TaskGen.py	/^	def clone(self,env):$/;"	m	class:task_gen
close	midori/midori-panel.c	/^    (*close)                  (MidoriPanel*   panel);$/;"	m	struct:_MidoriPanelClass	file:
close_buttons_left	midori/midori-websettings.c	/^    gint close_buttons_left;$/;"	m	struct:_MidoriWebSettings	file:
close_buttons_on_tabs	midori/midori-view.c	/^    gboolean close_buttons_on_tabs;$/;"	m	struct:_MidoriView	file:
close_buttons_on_tabs	midori/midori-websettings.c	/^    gboolean close_buttons_on_tabs : 1;$/;"	m	struct:_MidoriWebSettings	file:
closing_behavior	_build_/default/extensions/history-list.c	/^	GtkComboBox* closing_behavior;$/;"	m	struct:_HistoryListPreferencesDialog	file:
closing_behavior	_build_/default/extensions/history-list.c	/^	gint closing_behavior;$/;"	m	struct:_HistoryListManager	file:
cls	waf-modules/wafadmin/Tools/ar.py	/^cls=Task.simple_task_type('static_link',ar_str,color='YELLOW',ext_in='.o',ext_out='.bin',shell=False)$/;"	v
cls	waf-modules/wafadmin/Tools/bison.py	/^cls=Task.simple_task_type('bison',bison,'GREEN',ext_in='.yc .y .yy',ext_out='.c .cxx .h .l',shell=False)$/;"	v
cls	waf-modules/wafadmin/Tools/cc.py	/^cls=Task.simple_task_type('cc',cc_str,'GREEN',ext_out='.o',ext_in='.c',shell=False)$/;"	v
cls	waf-modules/wafadmin/Tools/cc.py	/^cls=Task.simple_task_type('cc_link',link_str,color='YELLOW',ext_in='.o',ext_out='.bin',shell=False)$/;"	v
cls	waf-modules/wafadmin/Tools/ccroot.py	/^cls=Task.task_type_from_func('vnum',func=exec_vnum_link,ext_in='.bin',color='CYAN')$/;"	v
cls	waf-modules/wafadmin/Tools/cxx.py	/^cls=Task.simple_task_type('cxx',cxx_str,color='GREEN',ext_out='.o',ext_in='.cxx',shell=False)$/;"	v
cls	waf-modules/wafadmin/Tools/cxx.py	/^cls=Task.simple_task_type('cxx_link',link_str,color='YELLOW',ext_in='.o',ext_out='.bin',shell=False)$/;"	v
cls	waf-modules/wafadmin/Tools/d.py	/^cls=Task.simple_task_type('d',d_str,'GREEN',before='static_link d_link',shell=False)$/;"	v
cls	waf-modules/wafadmin/Tools/d.py	/^cls=Task.simple_task_type('d_link',link_str,color='YELLOW',shell=False)$/;"	v
cls	waf-modules/wafadmin/Tools/d.py	/^cls=Task.simple_task_type('d_with_header',d_with_header_str,'GREEN',before='static_link d_link',shell=False)$/;"	v
cls	waf-modules/wafadmin/Tools/gnome.py	/^cls=Task.simple_task_type('sgml2man','${SGML2MAN} -o ${TGT[0].bld_dir(env)} ${SRC}  > \/dev\/null',color='BLUE')$/;"	v
cls	waf-modules/wafadmin/Tools/javaw.py	/^cls=Task.simple_task_type('javac','${JAVAC} -classpath ${CLASSPATH} -d ${OUTDIR} ${JAVACFLAGS} ${SRC}',shell=False)$/;"	v
cls	waf-modules/wafadmin/Tools/msvc.py	/^	cls=Task.TaskBase.classes.get(k,None)$/;"	v
cls	waf-modules/wafadmin/Tools/ocaml.py	/^cls=b('ocaml','${OCAMLC} ${OCAMLPATH} ${OCAMLFLAGS} ${INCLUDES} -c -o ${TGT} ${SRC}',color='GREEN',shell=False)$/;"	v
cls	waf-modules/wafadmin/Tools/ocaml.py	/^cls=b('ocamlx','${OCAMLOPT} ${OCAMLPATH} ${OCAMLFLAGS} ${INCLUDES} -c -o ${TGT} ${SRC}',color='GREEN',shell=False)$/;"	v
cls	waf-modules/wafadmin/Tools/qt4.py	/^cls=b('rcc','${QT_RCC} -name ${SRC[0].name} ${SRC[0].abspath(env)} ${RCC_ST} -o ${TGT}',color='BLUE',before='cxx moc qxx_task',after="qm2rcc",shell=False)$/;"	v
cls	waf-modules/wafadmin/Tools/tex.py	/^cls=b('latex',latex_build,vars=latex_vardeps)$/;"	v
cls	waf-modules/wafadmin/Tools/tex.py	/^cls=b('pdflatex',pdflatex_build,vars=pdflatex_vardeps)$/;"	v
cls	waf-modules/wafadmin/Tools/unittestw.py	/^cls=Task.task_type_from_func('utest',func=exec_test,color='PINK',ext_in='.bin')$/;"	v
cm	extensions/cookie-manager/main.c	/^CookieManager *cm = NULL;$/;"	v
cm_activate_cb	extensions/cookie-manager/main.c	/^static void cm_activate_cb(MidoriExtension *extension, MidoriApp *app, gpointer data)$/;"	f	file:
cm_button_delete_all_clicked_cb	extensions/cookie-manager/cookie-manager-page.c	/^static void cm_button_delete_all_clicked_cb(GtkToolButton *button, CookieManagerPage *cmp)$/;"	f	file:
cm_button_delete_clicked_cb	extensions/cookie-manager/cookie-manager-page.c	/^static void cm_button_delete_clicked_cb(GtkToolButton *button, CookieManagerPage *cmp)$/;"	f	file:
cm_create_toolbar	extensions/cookie-manager/cookie-manager-page.c	/^static void cm_create_toolbar(CookieManagerPage *cmp)$/;"	f	file:
cm_deactivate_cb	extensions/cookie-manager/main.c	/^static void cm_deactivate_cb(MidoriExtension *extension, gpointer data)$/;"	f	file:
cm_delete_all_cookies_real	extensions/cookie-manager/cookie-manager-page.c	/^static void cm_delete_all_cookies_real(CookieManagerPage *cmp)$/;"	f	file:
cm_delete_cookie	extensions/cookie-manager/cookie-manager-page.c	/^static void cm_delete_cookie(CookieManagerPage *cmp, GtkTreeModel *model, GtkTreeIter *child)$/;"	f	file:
cm_delete_item	extensions/cookie-manager/cookie-manager-page.c	/^static void cm_delete_item(CookieManagerPage *cmp)$/;"	f	file:
cm_filter_entry_changed_cb	extensions/cookie-manager/cookie-manager-page.c	/^static void cm_filter_entry_changed_cb(GtkEditable *editable, CookieManagerPage *cmp)$/;"	f	file:
cm_filter_entry_clear_icon_released_cb	extensions/cookie-manager/cookie-manager-page.c	/^static void cm_filter_entry_clear_icon_released_cb(GtkIconEntry *e, gint pos, gint btn, gpointer data)$/;"	f	file:
cm_filter_match	extensions/cookie-manager/cookie-manager-page.c	/^static gboolean cm_filter_match(const gchar *haystack, const gchar *needle)$/;"	f	file:
cm_filter_tree	extensions/cookie-manager/cookie-manager-page.c	/^static void cm_filter_tree(CookieManagerPage *cmp, const gchar *filter_text)$/;"	f	file:
cm_free_selection_list	extensions/cookie-manager/cookie-manager-page.c	/^static void cm_free_selection_list(GList *rows, GFunc func)$/;"	f	file:
cm_get_cookie_description_text	extensions/cookie-manager/cookie-manager-page.c	/^static gchar *cm_get_cookie_description_text(SoupCookie *cookie)$/;"	f	file:
cm_get_domain_description_text	extensions/cookie-manager/cookie-manager-page.c	/^static gchar *cm_get_domain_description_text(const gchar *domain, gint cookie_count)$/;"	f	file:
cm_list_length	extensions/cookie-manager/cookie-manager-page.c	/^static gint cm_list_length(GList *list)$/;"	f	file:
cm_select_path	extensions/cookie-manager/cookie-manager-page.c	/^static void cm_select_path(CookieManagerPage *cmp, GtkTreeModel *model, GtkTreePath *path)$/;"	f	file:
cm_set_button_sensitiveness	extensions/cookie-manager/cookie-manager-page.c	/^static void cm_set_button_sensitiveness(CookieManagerPage *cmp, gboolean set)$/;"	f	file:
cm_skip_leading_dot	extensions/cookie-manager/cookie-manager-page.c	/^static const gchar *cm_skip_leading_dot(const gchar *text)$/;"	f	file:
cm_store_remove	extensions/cookie-manager/cookie-manager-page.c	/^static void cm_store_remove(CookieManagerPage *cmp, GtkTreeIter *iter_model)$/;"	f	file:
cm_tree_button_press_event_cb	extensions/cookie-manager/cookie-manager-page.c	/^static gboolean cm_tree_button_press_event_cb(GtkWidget *widget, GdkEventButton *ev,$/;"	f	file:
cm_tree_button_release_event_cb	extensions/cookie-manager/cookie-manager-page.c	/^static gboolean cm_tree_button_release_event_cb(GtkWidget *widget, GdkEventButton *ev,$/;"	f	file:
cm_tree_drag_data_get_cb	extensions/cookie-manager/cookie-manager-page.c	/^static void cm_tree_drag_data_get_cb(GtkWidget *widget, GdkDragContext *drag_context,$/;"	f	file:
cm_tree_key_press_cb	extensions/cookie-manager/cookie-manager-page.c	/^static gboolean cm_tree_key_press_cb(GtkWidget *widget, GdkEventKey *event, CookieManagerPage *cmp)$/;"	f	file:
cm_tree_popup_collapse_activate_cb	extensions/cookie-manager/cookie-manager-page.c	/^static void cm_tree_popup_collapse_activate_cb(GtkMenuItem *item, CookieManagerPage *cmp)$/;"	f	file:
cm_tree_popup_expand_activate_cb	extensions/cookie-manager/cookie-manager-page.c	/^static void cm_tree_popup_expand_activate_cb(GtkMenuItem *item, CookieManagerPage *cmp)$/;"	f	file:
cm_tree_popup_menu_cb	extensions/cookie-manager/cookie-manager-page.c	/^static gboolean  cm_tree_popup_menu_cb(GtkWidget *widget, CookieManagerPage *cmp)$/;"	f	file:
cm_tree_prepare	extensions/cookie-manager/cookie-manager-page.c	/^static GtkWidget *cm_tree_prepare(CookieManagerPage *cmp)$/;"	f	file:
cm_tree_query_tooltip	extensions/cookie-manager/cookie-manager-page.c	/^static gboolean cm_tree_query_tooltip(GtkWidget *widget, gint x, gint y, gboolean keyboard_mode,$/;"	f	file:
cm_tree_render_text_cb	extensions/cookie-manager/cookie-manager-page.c	/^static void cm_tree_render_text_cb(GtkTreeViewColumn *column, GtkCellRenderer *renderer, GtkTreeModel *model,$/;"	f	file:
cm_tree_selection_changed_cb	extensions/cookie-manager/cookie-manager-page.c	/^static void cm_tree_selection_changed_cb(GtkTreeSelection *selection, CookieManagerPage *cmp)$/;"	f	file:
cm_tree_show_popup_menu	extensions/cookie-manager/cookie-manager-page.c	/^static void cm_tree_show_popup_menu(GtkWidget *widget, GdkEventButton *event, CookieManagerPage *cmp)$/;"	f	file:
cm_try_to_select	extensions/cookie-manager/cookie-manager-page.c	/^static gboolean cm_try_to_select(CMPathWalkFunc path_func, GtkTreeSelection *selection,$/;"	f	file:
cmd	waf-modules/wafadmin/Tools/misc.py	/^		cmd=cmd_node$/;"	v
cmd_and_log	waf-modules/wafadmin/Tools/config_c.py	/^def cmd_and_log(self,cmd,kw):$/;"	f
cmd_arg	waf-modules/wafadmin/Tools/misc.py	/^class cmd_arg(object):$/;"	c
cmd_dir_arg	waf-modules/wafadmin/Tools/misc.py	/^class cmd_dir_arg(cmd_arg):$/;"	c
cmd_output	waf-modules/wafadmin/Utils.py	/^def cmd_output(cmd,**kw):$/;"	f
cmd_output_taskgen	waf-modules/wafadmin/Tools/misc.py	/^class cmd_output_taskgen(TaskGen.task_gen):$/;"	c
cmd_taskgen	waf-modules/wafadmin/Tools/misc.py	/^class cmd_taskgen(TaskGen.task_gen):$/;"	c
cmd_to_list	waf-modules/wafadmin/Configure.py	/^	def cmd_to_list(self,cmd):$/;"	m	class:ConfigurationContext
cmds	waf-modules/wafadmin/Options.py	/^cmds='distclean configure build install clean uninstall check dist distcheck'.split()$/;"	v
color	waf-modules/wafadmin/Task.py	/^	color="GREEN"$/;"	v	class:TaskBase
color	waf-modules/wafadmin/Tools/misc.py	/^	color="BLUE"$/;"	v	class:command_output
colorful_tabs_activate_cb	extensions/colorful-tabs.c	/^colorful_tabs_activate_cb (MidoriExtension* extension,$/;"	f	file:
colorful_tabs_app_add_browser_cb	extensions/colorful-tabs.c	/^colorful_tabs_app_add_browser_cb (MidoriApp*       app,$/;"	f	file:
colorful_tabs_browser_add_tab_cb	extensions/colorful-tabs.c	/^colorful_tabs_browser_add_tab_cb (MidoriBrowser*   browser,$/;"	f	file:
colorful_tabs_deactivate_cb	extensions/colorful-tabs.c	/^colorful_tabs_deactivate_cb (MidoriExtension* extension,$/;"	f	file:
colorful_tabs_modify_fg	extensions/colorful-tabs.c	/^colorful_tabs_modify_fg (GtkWidget* label,$/;"	f	file:
colorful_tabs_view_notify_uri_cb	extensions/colorful-tabs.c	/^colorful_tabs_view_notify_uri_cb (MidoriView*      view,$/;"	f	file:
colors	waf-modules/wafadmin/Logs.py	/^colors=foo()$/;"	v
colors_lst	waf-modules/wafadmin/Logs.py	/^colors_lst={'USE':True,'BOLD':'\\x1b[01;1m','RED':'\\x1b[01;31m','GREEN':'\\x1b[32m','YELLOW':'\\x1b[33m','PINK':'\\x1b[35m','BLUE':'\\x1b[01;34m','CYAN':'\\x1b[36m','NORMAL':'\\x1b[0m','cursor_on':'\\x1b[?25h','cursor_off':'\\x1b[?25l',}$/;"	v
colorshift_pixbuf	midori/gtkiconentry.c	/^colorshift_pixbuf (GdkPixbuf *dest, GdkPixbuf *src, int shift)$/;"	f	file:
command_output	waf-modules/wafadmin/Tools/misc.py	/^class command_output(Task.Task):$/;"	c
commands	waf-modules/wafadmin/Options.py	/^commands={}$/;"	v
commands	waf-modules/wafadmin/Scripting.py	/^commands=[]$/;"	v
comment	tools/check-style	/^                    comment = False$/;"	v
comment	tools/check-style	/^                comment = True$/;"	v
comment	tools/check-style	/^        comment = False$/;"	v
common_flags_dmd	waf-modules/wafadmin/Tools/dmd.py	/^def common_flags_dmd(conf):$/;"	f
common_flags_gdc	waf-modules/wafadmin/Tools/gdc.py	/^def common_flags_gdc(conf):$/;"	f
common_flags_ldc	waf-modules/wafadmin/Tools/dmd.py	/^def common_flags_ldc(conf):$/;"	f
common_problems	data/faq.html	/^<h2 class="sectionedit4"><a name="common_problems" id="common_problems">Common problems<\/a><\/h2>$/;"	a
common_problems	debian/midori/usr/share/doc/midori/faq.html	/^<h2 class="sectionedit4"><a name="common_problems" id="common_problems">Common problems<\/a><\/h2>$/;"	a
common_problems	debian/tmp/usr/share/doc/midori/faq.html	/^<h2 class="sectionedit4"><a name="common_problems" id="common_problems">Common problems<\/a><\/h2>$/;"	a
communicate	waf-modules/wafadmin/pproc.py	/^	def communicate(self,input=None):$/;"	m	class:Popen
compact_sidepanel	midori/midori-websettings.c	/^    gboolean compact_sidepanel : 1;$/;"	m	struct:_MidoriWebSettings	file:
compare_exts	waf-modules/wafadmin/Task.py	/^	def compare_exts(self,t1,t2):$/;"	m	class:TaskGroup
compare_partial	waf-modules/wafadmin/Task.py	/^	def compare_partial(self,t1,t2):$/;"	m	class:TaskGroup
compare_pointers	katze/katze-scrolled.c	/^compare_pointers (gconstpointer a,$/;"	f	file:
compatibility_with_greasemonkey	data/faq.html	/^<h4><a name="compatibility_with_greasemonkey" id="compatibility_with_greasemonkey">Compatibility with GreaseMonkey<\/a><\/h4>$/;"	a
compatibility_with_greasemonkey	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="compatibility_with_greasemonkey" id="compatibility_with_greasemonkey">Compatibility with GreaseMonkey<\/a><\/h4>$/;"	a
compatibility_with_greasemonkey	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="compatibility_with_greasemonkey" id="compatibility_with_greasemonkey">Compatibility with GreaseMonkey<\/a><\/h4>$/;"	a
compile	waf-modules/wafadmin/Build.py	/^	def compile(self):$/;"	m	class:BuildContext
compile_fun	waf-modules/wafadmin/Task.py	/^def compile_fun(name,line,shell=None):$/;"	f
compile_fun_noshell	waf-modules/wafadmin/Task.py	/^def compile_fun_noshell(name,line):$/;"	f
compile_fun_shell	waf-modules/wafadmin/Task.py	/^def compile_fun_shell(name,line):$/;"	f
compile_may_start	waf-modules/wafadmin/Tools/ocaml.py	/^def compile_may_start(self):$/;"	f
completion_index	midori/midori-locationaction.c	/^    gint completion_index;$/;"	m	struct:_MidoriLocationAction	file:
completion_model	midori/midori-locationaction.c	/^    GtkTreeModel* completion_model;$/;"	m	struct:_MidoriLocationAction	file:
completion_timeout	midori/midori-locationaction.c	/^    guint completion_timeout;$/;"	m	struct:_MidoriLocationAction	file:
compute_sig_implicit_deps	waf-modules/wafadmin/Task.py	/^	def compute_sig_implicit_deps(self):$/;"	m	class:Task
condition	midori/socket.h	/^	GIOCondition condition;$/;"	m	struct:_SockInfo
conf	waf-modules/wafadmin/Configure.py	/^def conf(f):$/;"	f
conf_file	waf-modules/wafadmin/Options.py	/^conf_file='conf-runs-%s-%d.pickle'%(platform,ABI)$/;"	v
config_dir	midori/midori-extension.c	/^    gchar* config_dir;$/;"	m	struct:_MidoriExtensionPrivate	file:
configure	waf-modules/wafadmin/Scripting.py	/^def configure(conf):$/;"	f
conftest	waf-modules/wafadmin/Configure.py	/^def conftest(f):$/;"	f
consumers	waf-modules/wafadmin/Runner.py	/^	consumers=[]$/;"	v	class:TaskConsumer
cookie_jar_load	katze/katze-http-cookies.c	/^cookie_jar_load (SoupCookieJar* jar,$/;"	f	file:
cookie_manager_app_add_browser_cb	extensions/cookie-manager/cookie-manager.c	/^static void cookie_manager_app_add_browser_cb(MidoriApp *app, MidoriBrowser *browser,$/;"	f	file:
cookie_manager_class_init	extensions/cookie-manager/cookie-manager.c	/^static void cookie_manager_class_init(CookieManagerClass *klass)$/;"	f	file:
cookie_manager_delayed_refresh	extensions/cookie-manager/cookie-manager.c	/^static gboolean cookie_manager_delayed_refresh(CookieManager *cm)$/;"	f	file:
cookie_manager_delete_cookie	extensions/cookie-manager/cookie-manager.c	/^void cookie_manager_delete_cookie(CookieManager *cm, SoupCookie *cookie)$/;"	f
cookie_manager_finalize	extensions/cookie-manager/cookie-manager.c	/^static void cookie_manager_finalize(GObject *object)$/;"	f	file:
cookie_manager_free_cookie_list	extensions/cookie-manager/cookie-manager.c	/^static void cookie_manager_free_cookie_list(CookieManager *cm)$/;"	f	file:
cookie_manager_init	extensions/cookie-manager/cookie-manager.c	/^static void cookie_manager_init(CookieManager *self)$/;"	f	file:
cookie_manager_jar_changed_cb	extensions/cookie-manager/cookie-manager.c	/^static void cookie_manager_jar_changed_cb(SoupCookieJar *jar, SoupCookie *old, SoupCookie *new,$/;"	f	file:
cookie_manager_new	extensions/cookie-manager/cookie-manager.c	/^CookieManager *cookie_manager_new(MidoriExtension *extension, MidoriApp *app)$/;"	f
cookie_manager_page_class_init	extensions/cookie-manager/cookie-manager-page.c	/^static void cookie_manager_page_class_init(CookieManagerPageClass *klass)$/;"	f	file:
cookie_manager_page_cookies_changed_cb	extensions/cookie-manager/cookie-manager-page.c	/^static void cookie_manager_page_cookies_changed_cb(CookieManager *cm, CookieManagerPage *cmp)$/;"	f	file:
cookie_manager_page_destroy_cb	extensions/cookie-manager/cookie-manager.c	/^static void cookie_manager_page_destroy_cb(GObject *page, CookieManager *cm)$/;"	f	file:
cookie_manager_page_filter_changed_cb	extensions/cookie-manager/cookie-manager-page.c	/^static void cookie_manager_page_filter_changed_cb(CookieManager *cm, const gchar *text,$/;"	f	file:
cookie_manager_page_finalize	extensions/cookie-manager/cookie-manager-page.c	/^static void cookie_manager_page_finalize(GObject *object)$/;"	f	file:
cookie_manager_page_get_label	extensions/cookie-manager/cookie-manager-page.c	/^static const gchar *cookie_manager_page_get_label(MidoriViewable *viewable)$/;"	f	file:
cookie_manager_page_get_stock_id	extensions/cookie-manager/cookie-manager-page.c	/^static const gchar *cookie_manager_page_get_stock_id(MidoriViewable *viewable)$/;"	f	file:
cookie_manager_page_get_toolbar	extensions/cookie-manager/cookie-manager-page.c	/^static GtkWidget *cookie_manager_page_get_toolbar(MidoriViewable *viewable)$/;"	f	file:
cookie_manager_page_init	extensions/cookie-manager/cookie-manager-page.c	/^static void cookie_manager_page_init(CookieManagerPage *self)$/;"	f	file:
cookie_manager_page_new	extensions/cookie-manager/cookie-manager-page.c	/^GtkWidget *cookie_manager_page_new(CookieManager *parent, GtkTreeStore *store,$/;"	f
cookie_manager_page_pre_cookies_change_cb	extensions/cookie-manager/cookie-manager-page.c	/^static void cookie_manager_page_pre_cookies_change_cb(CookieManager *cm, CookieManagerPage *cmp)$/;"	f	file:
cookie_manager_page_set_property	extensions/cookie-manager/cookie-manager-page.c	/^static void cookie_manager_page_set_property(GObject *object, guint prop_id, const GValue *value,$/;"	f	file:
cookie_manager_page_viewable_iface_init	extensions/cookie-manager/cookie-manager-page.c	/^static void cookie_manager_page_viewable_iface_init(MidoriViewableIface* iface)$/;"	f	file:
cookie_manager_panel_pages_foreach	extensions/cookie-manager/cookie-manager.c	/^static void cookie_manager_panel_pages_foreach(gpointer ptr, gpointer data)$/;"	f	file:
cookie_manager_refresh_store	extensions/cookie-manager/cookie-manager.c	/^static void cookie_manager_refresh_store(CookieManager *cm)$/;"	f	file:
cookie_manager_update_filter	extensions/cookie-manager/cookie-manager.c	/^void cookie_manager_update_filter(CookieManager *cm, const gchar *text)$/;"	f
cookies	extensions/cookie-manager/cookie-manager.c	/^	GSList *cookies;$/;"	m	struct:_CookieManagerPrivate	file:
copy	katze/katze-item.h	/^    (*copy)                       (KatzeItem*      item);$/;"	m	struct:_KatzeItemClass
copy	waf-modules/wafadmin/Environment.py	/^	def copy(self):$/;"	m	class:Environment
copy2	waf-modules/wafadmin/Utils.py	/^	def copy2(src,dst):$/;"	m	class:Context
copy_attrs	waf-modules/wafadmin/Utils.py	/^def copy_attrs(orig,dest,names,only_if_set=False):$/;"	f
copy_func	waf-modules/wafadmin/Tools/misc.py	/^def copy_func(tsk):$/;"	f
copy_tabs_activate_cb	extensions/copy-tabs.c	/^copy_tabs_activate_cb (MidoriExtension* extension,$/;"	f	file:
copy_tabs_app_add_browser_cb	extensions/copy-tabs.c	/^copy_tabs_app_add_browser_cb (MidoriApp*       app,$/;"	f	file:
copy_tabs_apply_cb	extensions/copy-tabs.c	/^copy_tabs_apply_cb (GtkWidget*     menuitem,$/;"	f	file:
copy_tabs_browser_populate_tool_menu_cb	extensions/copy-tabs.c	/^copy_tabs_browser_populate_tool_menu_cb (MidoriBrowser*   browser,$/;"	f	file:
copy_tabs_deactivate_cb	extensions/copy-tabs.c	/^copy_tabs_deactivate_cb (MidoriExtension* extension,$/;"	f	file:
copy_taskgen	waf-modules/wafadmin/Tools/misc.py	/^class copy_taskgen(TaskGen.task_gen):$/;"	c
copytree	waf-modules/wafadmin/Scripting.py	/^def copytree(src,dst,build_dir):$/;"	f
counter	katze/katze-http-cookies-sqlite.c	/^    guint counter;$/;"	m	struct:_KatzeHttpCookiesSqlite	file:
counter	katze/katze-http-cookies.c	/^    guint counter;$/;"	m	struct:_KatzeHttpCookies	file:
cpp	tools/check-style	/^            cpp = cleaned.find ('#if')$/;"	v
create_bundle_dirs	waf-modules/wafadmin/Tools/osx.py	/^def create_bundle_dirs(self,name,out):$/;"	f
create_parser	waf-modules/wafadmin/Options.py	/^def create_parser(module=None):$/;"	f
create_rcc_task	waf-modules/wafadmin/Tools/qt4.py	/^def create_rcc_task(self,node):$/;"	f
create_task	waf-modules/wafadmin/TaskGen.py	/^	def create_task(self,name,src=None,tgt=None,env=None):$/;"	m	class:task_gen
create_task_macapp	waf-modules/wafadmin/Tools/osx.py	/^def create_task_macapp(self):$/;"	f
create_task_macplist	waf-modules/wafadmin/Tools/osx.py	/^def create_task_macplist(self):$/;"	f
create_uic_task	waf-modules/wafadmin/Tools/qt4.py	/^def create_uic_task(self,node):$/;"	f
csinfo	waf-modules/wafadmin/ansiterm.py	/^	csinfo=CONSOLE_CURSOR_INFO()$/;"	v
css_metadata_from_file	extensions/addons.c	/^css_metadata_from_file (const gchar* filename,$/;"	f	file:
cur_addr	midori/socket.c	/^	GList *cur_addr;$/;"	m	struct:_SockConnectData	file:
curdir	waf-modules/wafadmin/Utils.py	/^	curdir=property(get_curdir,set_curdir)$/;"	v	class:Context
curly	tools/check-style	/^                    curly = []$/;"	v
curly	tools/check-style	/^        curly = []$/;"	v
current_event_handler	katze/katze-scrolled.c	/^    GList* current_event_handler;$/;"	m	struct:_KatzeScrolledState	file:
current_gdk_window	katze/katze-scrolled.c	/^static GdkWindow* current_gdk_window;$/;"	v	file:
current_item	midori/midori-searchaction.c	/^    KatzeItem* current_item;$/;"	m	struct:_MidoriSearchAction	file:
current_scrolled_window	katze/katze-scrolled.c	/^static KatzeScrolled* current_scrolled_window;$/;"	v	file:
current_widget	katze/katze-scrolled.c	/^static GtkWidget* current_widget;$/;"	v	file:
cursor_type	midori/gtkiconentry.c	/^  GdkCursorType cursor_type;$/;"	m	struct:__anon54	file:
custom_cursor	midori/gtkiconentry.c	/^  gboolean custom_cursor;$/;"	m	struct:__anon54	file:
customizing_keyboard_shortcuts	data/faq.html	/^<h3 class="sectionedit13"><a name="customizing_keyboard_shortcuts" id="customizing_keyboard_shortcuts">Customizing keyboard shortcuts<\/a><\/h3>$/;"	a
customizing_keyboard_shortcuts	debian/midori/usr/share/doc/midori/faq.html	/^<h3 class="sectionedit13"><a name="customizing_keyboard_shortcuts" id="customizing_keyboard_shortcuts">Customizing keyboard shortcuts<\/a><\/h3>$/;"	a
customizing_keyboard_shortcuts	debian/tmp/usr/share/doc/midori/faq.html	/^<h3 class="sectionedit13"><a name="customizing_keyboard_shortcuts" id="customizing_keyboard_shortcuts">Customizing keyboard shortcuts<\/a><\/h3>$/;"	a
cwd	waf	/^cwd = os.getcwd()$/;"	v
cwd	waf-modules/wafadmin/Tools/misc.py	/^		cwd=None$/;"	v
cwd	waf-unpacked	/^cwd = os.getcwd()$/;"	v
cxx	waf-modules/wafadmin/Tools/msvc.py	/^	cxx=conf.find_program(compiler_name,path_list=MSVC_PATH)$/;"	v
cxx_add_flags	waf-modules/wafadmin/Tools/config_c.py	/^def cxx_add_flags(conf):$/;"	f
cxx_compiler	waf-modules/wafadmin/Tools/compiler_cxx.py	/^cxx_compiler={'win32':['msvc','g++'],'cygwin':['g++'],'darwin':['g++'],'aix':['xlc++','g++'],'linux':['g++','icpc','sunc++'],'sunos':['g++','sunc++'],'irix':['g++'],'hpux':['g++'],'gnu':['g++'],'default':['g++']}$/;"	v
cxx_hook	waf-modules/wafadmin/Tools/cxx.py	/^def cxx_hook(self,node):$/;"	f
cxx_hook	waf-modules/wafadmin/Tools/qt4.py	/^def cxx_hook(self,node):$/;"	f
cxx_load_tools	waf-modules/wafadmin/Tools/config_c.py	/^def cxx_load_tools(conf):$/;"	f
cxx_str	waf-modules/wafadmin/Tools/cxx.py	/^cxx_str='${CXX} ${CXXFLAGS} ${CPPFLAGS} ${_CXXINCFLAGS} ${_CXXDEFFLAGS} ${CXX_SRC_F}${SRC} ${CXX_TGT_F}${TGT}'$/;"	v
cxx_taskgen	waf-modules/wafadmin/Tools/cxx.py	/^class cxx_taskgen(ccroot.ccroot_abstract):$/;"	c
d	waf-modules/wafadmin/Options.py	/^		d=tempfile.gettempdir()$/;"	v
d_header_str	waf-modules/wafadmin/Tools/d.py	/^d_header_str='${D_COMPILER} ${D_HEADER} ${SRC}'$/;"	v
d_hook	waf-modules/wafadmin/Tools/d.py	/^def d_hook(self,node):$/;"	f
d_params	waf-modules/wafadmin/Tools/d.py	/^d_params={'dflags':'','importpaths':'','libs':'','libpaths':'','generate_headers':False,}$/;"	v
d_parser	waf-modules/wafadmin/Tools/d.py	/^class d_parser(object):$/;"	c
d_platform_flags	waf-modules/wafadmin/Tools/d.py	/^def d_platform_flags(conf):$/;"	f
d_str	waf-modules/wafadmin/Tools/d.py	/^d_str='${D_COMPILER} ${DFLAGS} ${_DIMPORTFLAGS} ${D_SRC_F}${SRC} ${D_TGT_F}${TGT}'$/;"	v
d_taskgen	waf-modules/wafadmin/Tools/d.py	/^class d_taskgen(TaskGen.task_gen):$/;"	c
d_with_header_str	waf-modules/wafadmin/Tools/d.py	/^${D_TGT_F}${TGT[0].bldpath(env)}'$/;"	v
data	katze/katze-net.h	/^    gchar* data;$/;"	m	struct:__anon34
data	midori/socket.c	/^	gpointer data;$/;"	m	struct:_SockConnectData	file:
data	midori/socket.c	/^	gpointer data;$/;"	m	struct:_SockLookupData	file:
data	midori/socket.h	/^	gpointer data;$/;"	m	struct:_SockInfo
db	katze/katze-http-cookies-sqlite.c	/^    sqlite3 *db;$/;"	m	struct:_KatzeHttpCookiesSqlite	file:
debug	extensions/adblock.c	/^static guint debug;$/;"	v	file:
debug	waf-modules/wafadmin/Logs.py	/^def debug(*k,**kw):$/;"	f
debug_print	midori/socket.c	62;"	d	file:
debug_print	midori/socket.c	64;"	d	file:
debug_why	waf-modules/wafadmin/Task.py	/^	def debug_why(self,old_sigs):$/;"	m	class:Task
deceleration	katze/katze-scrolled.c	/^    gdouble deceleration;$/;"	m	struct:_KatzeScrolledPrivate	file:
decide_ext	waf-modules/wafadmin/Tools/flex.py	/^def decide_ext(self,node):$/;"	f
declare_chain	waf-modules/wafadmin/TaskGen.py	/^def declare_chain(name='',action='',ext_in='',ext_out='',reentrant=True,color='BLUE',install=0,before=[],after=[],decider=None,rule=None,scan=None):$/;"	f
declare_extension	waf-modules/wafadmin/TaskGen.py	/^def declare_extension(var,func):$/;"	f
declare_order	waf-modules/wafadmin/TaskGen.py	/^def declare_order(*k):$/;"	f
deco	waf-modules/wafadmin/TaskGen.py	/^	def deco(func):$/;"	f	function:after
deco	waf-modules/wafadmin/TaskGen.py	/^	def deco(func):$/;"	f	function:before
deco	waf-modules/wafadmin/TaskGen.py	/^	def deco(func):$/;"	f	function:extension
deco	waf-modules/wafadmin/TaskGen.py	/^	def deco(func):$/;"	f	function:feature
def_attrs	waf-modules/wafadmin/Utils.py	/^def def_attrs(cls,**kw):$/;"	f
default_button	midori/midori-searchaction.c	/^    GtkWidget* default_button;$/;"	m	struct:_MidoriSearchAction	file:
default_cc	waf-modules/wafadmin/Tools/ccroot.py	/^def default_cc(self):$/;"	f
default_destdir	waf-modules/wafadmin/Options.py	/^default_destdir=os.environ.get('DESTDIR','')$/;"	v
default_icon	midori/midori-locationaction.c	/^    GdkPixbuf* default_icon;$/;"	m	struct:_MidoriLocationAction	file:
default_item	midori/midori-searchaction.c	/^    KatzeItem* default_item;$/;"	m	struct:_MidoriSearchAction	file:
default_jobs	waf-modules/wafadmin/Options.py	/^			default_jobs=Runtime.getRuntime().availableProcessors()$/;"	v
default_jobs	waf-modules/wafadmin/Options.py	/^			default_jobs=int(Utils.cmd_output(['sysctl','-n','hw.ncpu']))$/;"	v
default_jobs	waf-modules/wafadmin/Options.py	/^			default_jobs=int(os.environ.get('NUMBER_OF_PROCESSORS',1))$/;"	v
default_jobs	waf-modules/wafadmin/Options.py	/^			default_jobs=os.sysconf('SC_NPROCESSORS_ONLN')$/;"	v
default_jobs	waf-modules/wafadmin/Options.py	/^default_jobs=os.environ.get('JOBS',-1)$/;"	v
default_length	midori/midori-extension.c	/^    gsize default_length;$/;"	m	struct:__anon72	file:
default_link_install	waf-modules/wafadmin/Tools/ccroot.py	/^def default_link_install(self):$/;"	f
default_prefix	waf-modules/wafadmin/Options.py	/^		default_prefix=d[0].upper()+d[1:]$/;"	v
default_prefix	waf-modules/wafadmin/Options.py	/^default_prefix=os.environ.get('PREFIX')$/;"	v
default_value	midori/midori-extension.c	/^    gboolean default_value;$/;"	m	struct:__anon69	file:
default_value	midori/midori-extension.c	/^    gchar* default_value;$/;"	m	struct:__anon71	file:
default_value	midori/midori-extension.c	/^    gchar** default_value;$/;"	m	struct:__anon72	file:
default_value	midori/midori-extension.c	/^    gint default_value;$/;"	m	struct:__anon70	file:
define	waf-modules/wafadmin/Tools/config_c.py	/^def define(self,define,value,quote=1):$/;"	f
define_cond	waf-modules/wafadmin/Tools/config_c.py	/^def define_cond(self,name,value):$/;"	f
define_name	waf-modules/wafadmin/Tools/preproc.py	/^def define_name(line):$/;"	f
defines	_build_/c4che/default.cache.py	/^defines = {'HAVE_LIBSOUP_2_29_91': 1, 'LIBDIR': '"\/usr\/lib"', 'WEBKIT_1_0_VERSION': '"1.10.2"', 'HAVE_HILDON': 0, 'LOCALEDIR': '"\/usr\/share\/locale"', 'HAVE_LIBSOUP_2_25_2': 1, 'MIDORI_VERSION': '"0.4.3"', 'HAVE_GTHREAD': 1, 'PACKAGE_BUGREPORT': '"https:\/\/bugs.launchpad.net\/midori"', 'HAVE_UNIQUE': 1, 'HAVE_JAVASCRIPTCOREGTK': 1, 'HAVE_LIBSOUP_2_37_1': 1, 'SYSCONFDIR': '"\/etc"', 'MIDORI_MICRO_VERSION': 3, 'HAVE_X11_EXTENSIONS_SCRNSAVER_H': 1, 'HAVE_SIGNAL_H': 1, 'HAVE_UNISTD_H': 1, 'HAVE_GOBJECT': 1, 'DOCDIR': '"\/usr\/share\/doc\/midori"', 'HAVE_WEBKIT': 1, 'PACKAGE_VERSION': '"0.4.3"', 'LIBNOTIFY_VERSION': '"0.7.5"', 'UNIQUE_1_0_VERSION': '"1.1.6"', 'HAVE_LIBSOUP': 1, 'LIBSOUP_2_4_VERSION': '"2.40.3"', 'MIDORI_MINOR_VERSION': 4, 'DATADIR': (), 'HAVE_LOCALE_H': 1, 'LIBSOUP_VERSION': '"2.40.3"', 'MDATADIR': '"\/usr\/share"', 'HAVE_GTK': 1, 'PACKAGE_NAME': '"midori"', 'HAVE_GMODULE': 1, 'HAVE_LIBSOUP_2_27_90': 1, 'HAVE_LIBNOTIFY': 1, 'HAVE_GIO': 1, 'HAVE_X11': 1, 'UNIQUE_VERSION': '"1.1.6"', 'GETTEXT_PACKAGE': '"midori"', 'HAVE_SQLITE': 1, 'HAVE_LIBSOUP_2_29_3': 1, 'ENABLE_NLS': 1, 'HAVE_OSX': 0, 'HAVE_LIBXML': 1, 'MIDORI_MAJOR_VERSION': 0}$/;"	v
delete	extensions/feed-panel/feed-panel.c	/^    GtkWidget* delete;$/;"	m	struct:_FeedPanel	file:
delete	panels/midori-bookmarks.c	/^    GtkWidget* delete;$/;"	m	struct:_MidoriBookmarks	file:
delete	panels/midori-history.c	/^    GtkWidget* delete;$/;"	m	struct:_MidoriHistory	file:
delete_all_button	extensions/cookie-manager/cookie-manager-page.c	/^	GtkWidget *delete_all_button;$/;"	m	struct:_CookieManagerPagePrivate	file:
delete_button	extensions/cookie-manager/cookie-manager-page.c	/^	GtkWidget *delete_button;$/;"	m	struct:_CookieManagerPagePrivate	file:
delete_popup_button	extensions/cookie-manager/cookie-manager-page.c	/^	GtkWidget *delete_popup_button;$/;"	m	struct:_CookieManagerPagePrivate	file:
deque	waf-modules/wafadmin/Utils.py	/^	class deque(list):$/;"	c
desc_label	extensions/cookie-manager/cookie-manager-page.c	/^	GtkWidget *desc_label;$/;"	m	struct:_CookieManagerPagePrivate	file:
description	extensions/addons.c	/^    gchar* description;$/;"	m	struct:AddonElement	file:
description	midori/midori-extension.c	/^    gchar* description;$/;"	m	struct:_MidoriExtensionPrivate	file:
detach	waf-modules/wafadmin/Environment.py	/^	def detach(self):$/;"	m	class:Environment
detect	waf-modules/wafadmin/3rdparty/fluid.py	/^def detect(conf):$/;"	f
detect	waf-modules/wafadmin/Tools/ar.py	/^def detect(conf):$/;"	f
detect	waf-modules/wafadmin/Tools/bison.py	/^def detect(conf):$/;"	f
detect	waf-modules/wafadmin/Tools/compiler_cc.py	/^def detect(conf):$/;"	f
detect	waf-modules/wafadmin/Tools/compiler_cxx.py	/^def detect(conf):$/;"	f
detect	waf-modules/wafadmin/Tools/compiler_d.py	/^def detect(conf):$/;"	f
detect	waf-modules/wafadmin/Tools/cs.py	/^def detect(conf):$/;"	f
detect	waf-modules/wafadmin/Tools/dbus.py	/^def detect(conf):$/;"	f
detect	waf-modules/wafadmin/Tools/dmd.py	/^def detect(conf):$/;"	f
detect	waf-modules/wafadmin/Tools/flex.py	/^def detect(conf):$/;"	f
detect	waf-modules/wafadmin/Tools/gas.py	/^def detect(conf):$/;"	f
detect	waf-modules/wafadmin/Tools/gcc.py	/^def detect(conf):$/;"	f
detect	waf-modules/wafadmin/Tools/gdc.py	/^def detect(conf):$/;"	f
detect	waf-modules/wafadmin/Tools/glib2.py	/^def detect(conf):$/;"	f
detect	waf-modules/wafadmin/Tools/gnome.py	/^def detect(conf):$/;"	f
detect	waf-modules/wafadmin/Tools/gnu_dirs.py	/^def detect(conf):$/;"	f
detect	waf-modules/wafadmin/Tools/gob2.py	/^def detect(conf):$/;"	f
detect	waf-modules/wafadmin/Tools/gxx.py	/^def detect(conf):$/;"	f
detect	waf-modules/wafadmin/Tools/intltool.py	/^def detect(conf):$/;"	f
detect	waf-modules/wafadmin/Tools/javaw.py	/^def detect(conf):$/;"	f
detect	waf-modules/wafadmin/Tools/kde4.py	/^def detect(conf):$/;"	f
detect	waf-modules/wafadmin/Tools/lua.py	/^def detect(conf):$/;"	f
detect	waf-modules/wafadmin/Tools/nasm.py	/^def detect(conf):$/;"	f
detect	waf-modules/wafadmin/Tools/ocaml.py	/^def detect(conf):$/;"	f
detect	waf-modules/wafadmin/Tools/python.py	/^def detect(conf):$/;"	f
detect	waf-modules/wafadmin/Tools/qt4.py	/^def detect(conf):$/;"	f
detect	waf-modules/wafadmin/Tools/tex.py	/^def detect(conf):$/;"	f
detect	waf-modules/wafadmin/Tools/vala.py	/^def detect(conf):$/;"	f
detect	waf-modules/wafadmin/Tools/winres.py	/^def detect(conf):$/;"	f
detect	waf-modules/wafadmin/Tools/xlc.py	/^def detect(conf):$/;"	f
detect	waf-modules/wafadmin/Tools/xlcxx.py	/^def detect(conf):$/;"	f
detect_msvc	waf-modules/wafadmin/Tools/msvc.py	/^def detect_msvc(conf):$/;"	f
detect_platform	waf-modules/wafadmin/Utils.py	/^def detect_platform():$/;"	f
detect_qt4	waf-modules/wafadmin/Tools/qt4.py	/^def detect_qt4(conf):$/;"	f
dfsg_version	debian/rules	/^dfsg_version = $(upstream_version)+dfsg$/;"	m
dialog	extensions/toolbar-editor.c	/^	GtkWidget *dialog;$/;"	m	struct:__anon16	file:
dialog	midori/midori-searchaction.c	/^    GtkWidget* dialog;$/;"	m	struct:_MidoriSearchAction	file:
diff_path	waf-modules/wafadmin/Utils.py	/^def diff_path(top,subdir):$/;"	f
dir	waf-modules/wafadmin/Node.py	/^	def dir(self,env):$/;"	m	class:Node
dirs	waf-modules/wafadmin/Node.py	/^	def dirs(self):$/;"	m	class:Node
disable_hadjustment	katze/katze-scrolled.c	/^disable_hadjustment (KatzeScrolled* scrolled)$/;"	f	file:
display	waf-modules/wafadmin/Task.py	/^	def display(self):$/;"	m	class:TaskBase
displayname	extensions/addons.c	/^    gchar* displayname;$/;"	m	struct:AddonElement	file:
dist	waf-modules/wafadmin/Scripting.py	/^def dist(appname='',version=''):$/;"	f
dist_exts	waf-modules/wafadmin/Scripting.py	/^dist_exts='~ .rej .orig .pyc .pyo .bak .tar.bz2 tar.gz .zip .swp'.split()$/;"	v
distcheck	waf-modules/wafadmin/Scripting.py	/^def distcheck(appname='',version='',subdir=''):$/;"	f
distclean	waf-modules/wafadmin/Scripting.py	/^def distclean(ctx=None):$/;"	f
dll_recursive	win32/makedist/makedist.midori	/^dll_recursive ()$/;"	f
do_install	waf-modules/wafadmin/Build.py	/^	def do_install(self,src,tgt,chmod=O644):$/;"	m	class:BuildContext
do_motion_scroll	katze/katze-scrolled.c	/^do_motion_scroll (KatzeScrolled* scrolled,$/;"	f	file:
do_subst	waf-modules/wafadmin/py3kfixes.py	/^	def do_subst(fun):$/;"	f	function:subst
do_timeout_scroll	katze/katze-scrolled.c	/^do_timeout_scroll (KatzeScrolled* scrolled)$/;"	f	file:
doc	extensions/feed-panel/feed-parse.h	/^    xmlDocPtr   doc;   \/* The XML document *\/$/;"	m	struct:_FeedParser
docs	_build_/c4che/default.cache.py	/^docs = True$/;"	v
dont_dist	waf-modules/wafadmin/Scripting.py	/^def dont_dist(name,src,build_dir):$/;"	f
download	toolbars/midori-transferbar.c	/^    WebKitDownload* download;$/;"	m	struct:__anon81	file:
download_folder	midori/midori-websettings.c	/^    gchar* download_folder;$/;"	m	struct:_MidoriWebSettings	file:
drag_scrolling	katze/katze-scrolled.c	/^    gboolean drag_scrolling;$/;"	m	struct:_KatzeScrolledPrivate	file:
drag_source	extensions/toolbar-editor.c	/^	GtkWidget *drag_source;$/;"	m	struct:__anon16	file:
dragged	katze/katze-scrolled.c	/^    gboolean dragged;$/;"	m	struct:_KatzeScrolledPrivate	file:
dragging_stopped_delay	katze/katze-scrolled.c	/^    guint32 dragging_stopped_delay;$/;"	m	struct:_KatzeScrolledPrivate	file:
draw_icon	midori/gtkiconentry.c	/^draw_icon (GtkWidget *widget, GtkIconEntryPosition icon_pos)$/;"	f	file:
dummy_viewable_new	tests/properties.c	/^GtkWidget* dummy_viewable_new (void)$/;"	f
dw	waf-modules/wafadmin/Build.py	/^		def dw(on=True):$/;"	f	function:BuildContext.compile
dwFlags	waf-modules/wafadmin/pproc.py	/^			dwFlags=0$/;"	v	class:.__str__.STARTUPINFO
edit	panels/midori-bookmarks.c	/^    GtkWidget* edit;$/;"	m	struct:_MidoriBookmarks	file:
edit_button	midori/midori-searchaction.c	/^    GtkWidget* edit_button;$/;"	m	struct:_MidoriSearchAction	file:
element_motion	midori/midori-browser.h	/^    (*element_motion)          (MidoriBrowser*       browser,$/;"	m	struct:_MidoriBrowserClass
elements	extensions/addons.c	/^    GSList* elements;$/;"	m	struct:AddonsList	file:
enable_dns_prefetching	midori/midori-websettings.c	/^    gboolean enable_dns_prefetching;$/;"	m	struct:_MidoriWebSettings	file:
enable_hadjustment	katze/katze-scrolled.c	/^enable_hadjustment (KatzeScrolled* scrolled)$/;"	f	file:
enabled	extensions/addons.c	/^    gboolean enabled;$/;"	m	struct:AddonElement	file:
encoding_entries	midori/midori-browser.c	/^static const GtkRadioActionEntry encoding_entries[] =$/;"	v	file:
encoding_entries_n	midori/midori-browser.c	/^static const guint encoding_entries_n = G_N_ELEMENTS (encoding_entries);$/;"	v	file:
end	extensions/mouse-gestures.c	/^    struct MouseGestureNode end;$/;"	m	struct:_MouseGesture	typeref:struct:_MouseGesture::MouseGestureNode	file:
endElement	waf-modules/wafadmin/Tools/qt4.py	/^	def endElement(self,name):$/;"	m	class:XMLHandler
end_msg	waf-modules/wafadmin/Configure.py	/^	def end_msg(self,result,color):$/;"	m	class:ConfigurationContext
enforce_font_family	midori/midori-websettings.c	/^    gboolean enforce_font_family;$/;"	m	struct:_MidoriWebSettings	file:
ensure_dir_node_from_path	waf-modules/wafadmin/Node.py	/^	def ensure_dir_node_from_path(self,lst):$/;"	m	class:Node
entries	midori/midori-browser.c	/^static const GtkActionEntry entries[] =$/;"	v	file:
entries_n	midori/midori-browser.c	/^static const guint entries_n = G_N_ELEMENTS (entries);$/;"	v	file:
entry	midori/midori-locationaction.c	/^    GtkWidget* entry;$/;"	m	struct:_MidoriLocationAction	file:
entry_expose_event	midori/gtkiconentry.c	/^entry_expose_event (GtkWidget*      entry,$/;"	f	file:
env	waf-modules/wafadmin/Build.py	/^	env=property(get_env,set_env)$/;"	v	class:BuildContext
env	waf-modules/wafadmin/Tools/msvc.py	/^	env={}$/;"	v
env_of_name	waf-modules/wafadmin/Build.py	/^	def env_of_name(self,name):$/;"	m	class:BuildContext
err	waf	/^def err(m):$/;"	f
err	waf-unpacked	/^def err(m):$/;"	f
err_handler	waf-modules/wafadmin/Configure.py	/^	def err_handler(self,fun,error):$/;"	m	class:ConfigurationContext
error	extensions/feed-panel/feed-parse.h	/^    GError**    error;$/;"	m	struct:_FeedParser
error	waf-modules/wafadmin/Logs.py	/^def error(*k,**kw):$/;"	f
error	waf-modules/wafadmin/pproc.py	/^			error=IOError$/;"	v	class:.__str__.pywintypes
error_handler	waf-modules/wafadmin/Runner.py	/^	def error_handler(self,tsk):$/;"	m	class:Parallel
error_handlers	waf-modules/wafadmin/Configure.py	/^	error_handlers=[]$/;"	v	class:ConfigurationContext
escKeyval	_build_/default/extensions/history-list.c	/^	guint escKeyval;$/;"	m	struct:_HistoryListManager	file:
escape_to_color	waf-modules/wafadmin/ansiterm.py	/^		escape_to_color={(0,30):0x0,(0,31):0x4,(0,32):0x2,(0,33):0x4+0x2,(0,34):0x1,(0,35):0x1+0x4,(0,36):0x2+0x4,(0,37):0x1+0x2+0x4,(1,30):0x1+0x2+0x4,(1,31):0x4+0x8,(1,32):0x2+0x8,(1,33):0x4+0x2+0x8,(1,34):0x1+0x8,(1,35):0x1+0x4+0x8,(1,36):0x1+0x2+0x8,(1,37):0x1+0x2+0x4+0x8,}$/;"	v	class:AnsiTerm
eval_macro	waf-modules/wafadmin/Tools/preproc.py	/^def eval_macro(lst,adefs):$/;"	f
eval_rules	waf-modules/wafadmin/Configure.py	/^	def eval_rules(self,rules):$/;"	m	class:ConfigurationContext
event_handler	katze/katze-scrolled.c	/^    KatzeScrolledEventHandler event_handler;$/;"	m	struct:__anon24	file:
event_handlers	katze/katze-scrolled.c	/^static GList* event_handlers = NULL;$/;"	v	file:
ex_stack	waf-modules/wafadmin/Utils.py	/^def ex_stack():$/;"	f
exclude_pats	waf-modules/wafadmin/Node.py	/^exclude_pats=prune_pats+'*~ #*# .#* %*% ._* .gitignore .cvsignore vssver.scc .DS_Store'.split()$/;"	v
excludes	extensions/addons.c	/^    GSList* excludes;$/;"	m	struct:AddonElement	file:
excludes	waf-modules/wafadmin/Scripting.py	/^excludes='.bzr .bzrignore .git .gitignore .svn CVS .cvsignore .arch-ids {arch} SCCS BitKeeper .hg _MTN _darcs Makefile Makefile.in config.log .gitattributes .hgignore .hgtags'.split()$/;"	v
exclusive_build_node	waf-modules/wafadmin/Node.py	/^	def exclusive_build_node(self,path):$/;"	m	class:Node
exec_cfg	waf-modules/wafadmin/Tools/config_c.py	/^def exec_cfg(self,kw):$/;"	f
exec_command	waf-modules/wafadmin/Build.py	/^	def exec_command(self,cmd,**kw):$/;"	m	class:BuildContext
exec_command	waf-modules/wafadmin/Task.py	/^	def exec_command(self,*k,**kw):$/;"	m	class:TaskBase
exec_command	waf-modules/wafadmin/Tools/d.py	/^	def exec_command(self,*k,**kw):$/;"	f	function:override_exec
exec_command	waf-modules/wafadmin/Utils.py	/^	def exec_command(s,**kw):$/;"	f
exec_command	waf-modules/wafadmin/Utils.py	/^def exec_command(s,**kw):$/;"	f
exec_command_msvc	waf-modules/wafadmin/Tools/msvc.py	/^def exec_command_msvc(self,*k,**kw):$/;"	f
exec_mf	waf-modules/wafadmin/Tools/msvc.py	/^def exec_mf(self):$/;"	f
exec_query_with_try_create_table	katze/katze-http-cookies-sqlite.c	/^exec_query_with_try_create_table (sqlite3*    db,$/;"	f	file:
exec_rule	waf-modules/wafadmin/TaskGen.py	/^def exec_rule(self):$/;"	f
exec_test	waf-modules/wafadmin/Tools/unittestw.py	/^def exec_test(self):$/;"	f
exec_vnum_link	waf-modules/wafadmin/Tools/ccroot.py	/^def exec_vnum_link(self):$/;"	f
expand_buttons	extensions/cookie-manager/cookie-manager-page.c	/^	GtkWidget *expand_buttons[4];$/;"	m	struct:_CookieManagerPagePrivate	file:
extension	extensions/cookie-manager/cookie-manager.c	/^	MidoriExtension *extension;$/;"	m	struct:_CookieManagerPrivate	file:
extension	extensions/feed-panel/main.c	/^    MidoriExtension* extension;$/;"	m	struct:__anon11	file:
extension	extensions/feed-panel/main.c	/^    MidoriExtension* extension;$/;"	m	struct:__anon12	file:
extension	waf-modules/wafadmin/TaskGen.py	/^def extension(var):$/;"	f
extension_activate	tests/extensions.c	/^extension_activate (gconstpointer data)$/;"	f	file:
extension_activate_cb	midori/main.c	/^extension_activate_cb (MidoriExtension* extension,$/;"	f	file:
extension_activate_cb	tests/extensions.c	/^extension_activate_cb (MidoriExtension* extension,$/;"	f	file:
extension_create	tests/extensions.c	/^extension_create (void)$/;"	f	file:
extension_deactivate_cb	tests/extensions.c	/^extension_deactivate_cb (MidoriExtension* extension)$/;"	f	file:
extension_init	_build_/default/extensions/history-list.c	/^MidoriExtension* extension_init (void) {$/;"	f
extension_init	extensions/adblock.c	/^extension_init (void)$/;"	f
extension_init	extensions/addons.c	/^extension_init (void)$/;"	f
extension_init	extensions/colorful-tabs.c	/^extension_init (void)$/;"	f
extension_init	extensions/cookie-manager/main.c	/^MidoriExtension *extension_init(void)$/;"	f
extension_init	extensions/copy-tabs.c	/^extension_init (void)$/;"	f
extension_init	extensions/feed-panel/main.c	/^extension_init (void)$/;"	f
extension_init	extensions/formhistory.c	/^extension_init (void)$/;"	f
extension_init	extensions/mouse-gestures.c	/^extension_init (void)$/;"	f
extension_init	extensions/shortcuts.c	/^extension_init (void)$/;"	f
extension_init	extensions/status-clock.c	/^extension_init (void)$/;"	f
extension_init	extensions/statusbar-features.c	/^extension_init (void)$/;"	f
extension_init	extensions/tab-panel.c	/^extension_init (void)$/;"	f
extension_init	extensions/tabs-minimized.c	/^extension_init (void)$/;"	f
extension_init	extensions/toolbar-editor.c	/^MidoriExtension *extension_init(void)$/;"	f
extension_init	extensions/web-cache.c	/^extension_init (void)$/;"	f
extension_mock_object	tests/extensions.c	/^extension_mock_object (void)$/;"	f	file:
extension_settings	tests/extensions.c	/^extension_settings (void)$/;"	f	file:
extension_test	extensions/adblock.c	/^extension_test (void)$/;"	f
extension_test	extensions/addons.c	/^extension_test (void)$/;"	f
extensions	midori/midori-app.c	/^    KatzeArray* extensions;$/;"	m	struct:_MidoriApp	file:
extract_constraints	waf-modules/wafadmin/Task.py	/^	def extract_constraints(self):$/;"	m	class:TaskGroup
extract_deps	waf-modules/wafadmin/Task.py	/^def extract_deps(tasks):$/;"	f
extract_include	waf-modules/wafadmin/Tools/preproc.py	/^def extract_include(txt,defs):$/;"	f
extract_macro	waf-modules/wafadmin/Tools/preproc.py	/^def extract_macro(txt):$/;"	f
extract_outputs	waf-modules/wafadmin/Task.py	/^def extract_outputs(tasks):$/;"	f
f	waf	/^f = join(w, '3rdparty')$/;"	v
f	waf-modules/wafadmin/Build.py	/^	def f(*k,**kw):$/;"	f	function:group_method
f	waf-unpacked	/^f = join(w, '3rdparty')$/;"	v
fakelibtool_build	waf-modules/wafadmin/Tools/libtool.py	/^def fakelibtool_build(task):$/;"	f
fakelibtool_vardeps	waf-modules/wafadmin/Tools/libtool.py	/^fakelibtool_vardeps=['CXX','PREFIX']$/;"	v
family	midori/socket.c	/^	gint family;$/;"	m	struct:_SockAddrData	file:
farest_time	katze/katze-scrolled.c	/^    guint32 farest_time;$/;"	m	struct:_KatzeScrolledPrivate	file:
farest_x	katze/katze-scrolled.c	/^    gint farest_x;$/;"	m	struct:_KatzeScrolledPrivate	file:
farest_y	katze/katze-scrolled.c	/^    gint farest_y;$/;"	m	struct:_KatzeScrolledPrivate	file:
fatal	waf-modules/wafadmin/Configure.py	/^	def fatal(self,msg):$/;"	m	class:ConfigurationContext
fd_accept	midori/socket.c	/^gint fd_accept(gint sock)$/;"	f
fd_check_io	midori/socket.c	/^static gint fd_check_io(gint fd, GIOCondition cond)$/;"	f	file:
fd_close	midori/socket.c	/^gint fd_close(gint fd)$/;"	f
fd_connect_inet	midori/socket.c	/^gint fd_connect_inet(gushort port)$/;"	f
fd_connect_unix	midori/socket.c	/^gint fd_connect_unix(const gchar *path)$/;"	f
fd_getline	midori/socket.c	/^gint fd_getline(gint fd, gchar **line)$/;"	f
fd_gets	midori/socket.c	/^gint fd_gets(gint fd, gchar *buf, gint len)$/;"	f
fd_open_inet	midori/socket.c	/^gint fd_open_inet(gushort port)$/;"	f
fd_open_unix	midori/socket.c	/^gint fd_open_unix(const gchar *path)$/;"	f
fd_read	midori/socket.c	/^gint fd_read(gint fd, gchar *buf, gint len)$/;"	f
fd_recv	midori/socket.c	/^gint fd_recv(gint fd, gchar *buf, gint len, gint flags)$/;"	f
fd_write	midori/socket.c	/^gint fd_write(gint fd, const gchar *buf, gint len)$/;"	f
fd_write_all	midori/socket.c	/^gint fd_write_all(gint fd, const gchar *buf, gint len)$/;"	f
feature	waf-modules/wafadmin/TaskGen.py	/^def feature(*k):$/;"	f
features	data/faq.html	/^<h1 class="sectionedit5"><a name="features" id="features">Features<\/a><\/h1>$/;"	a
features	debian/midori/usr/share/doc/midori/faq.html	/^<h1 class="sectionedit5"><a name="features" id="features">Features<\/a><\/h1>$/;"	a
features	debian/tmp/usr/share/doc/midori/faq.html	/^<h1 class="sectionedit5"><a name="features" id="features">Features<\/a><\/h1>$/;"	a
feed	extensions/feed-panel/main.c	/^    KatzeArray* feed;$/;"	m	struct:__anon12	file:
feed_activate_cb	extensions/feed-panel/main.c	/^feed_activate_cb (MidoriExtension* extension,$/;"	f	file:
feed_add_flags	extensions/feed-panel/main.c	31;"	d	file:
feed_add_item	extensions/feed-panel/main.c	/^feed_add_item (KatzeArray*  feeds,$/;"	f	file:
feed_app_add_browser_cb	extensions/feed-panel/main.c	/^feed_app_add_browser_cb (MidoriApp*       app,$/;"	f	file:
feed_deactivate_cb	extensions/feed-panel/main.c	/^feed_deactivate_cb (MidoriExtension* extension,$/;"	f	file:
feed_dialog_response_cb	extensions/feed-panel/main.c	/^feed_dialog_response_cb (GtkWidget* dialog,$/;"	f	file:
feed_get_element_date	extensions/feed-panel/feed-parse.c	/^feed_get_element_date (FeedParser* fparser)$/;"	f
feed_get_element_markup	extensions/feed-panel/feed-parse.c	/^feed_get_element_markup (FeedParser* fparser)$/;"	f
feed_get_element_string	extensions/feed-panel/feed-parse.c	/^feed_get_element_string (FeedParser* fparser)$/;"	f
feed_get_flags	extensions/feed-panel/main.c	21;"	d	file:
feed_handle_net_error	extensions/feed-panel/main.c	/^feed_handle_net_error (FeedNetPrivate* netpriv,$/;"	f	file:
feed_has_flags	extensions/feed-panel/main.c	28;"	d	file:
feed_item_exists	extensions/feed-panel/feed-parse.c	/^feed_item_exists (KatzeArray* array,$/;"	f
feed_panel_add_clicked_cb	extensions/feed-panel/feed-panel.c	/^feed_panel_add_clicked_cb (GtkWidget* toolitem,$/;"	f	file:
feed_panel_add_feeds	extensions/feed-panel/feed-panel.c	/^feed_panel_add_feeds (FeedPanel* panel,$/;"	f
feed_panel_add_item_cb	extensions/feed-panel/feed-panel.c	/^feed_panel_add_item_cb (KatzeArray* parent,$/;"	f	file:
feed_panel_button_release_event_cb	extensions/feed-panel/feed-panel.c	/^feed_panel_button_release_event_cb (GtkWidget*      widget,$/;"	f	file:
feed_panel_class_init	extensions/feed-panel/feed-panel.c	/^feed_panel_class_init (FeedPanelClass* class)$/;"	f	file:
feed_panel_cursor_or_row_changed_cb	extensions/feed-panel/feed-panel.c	/^feed_panel_cursor_or_row_changed_cb (GtkTreeView* treeview,$/;"	f	file:
feed_panel_delete_activate_cb	extensions/feed-panel/feed-panel.c	/^feed_panel_delete_activate_cb (GtkWidget* menuitem,$/;"	f	file:
feed_panel_delete_clicked_cb	extensions/feed-panel/feed-panel.c	/^feed_panel_delete_clicked_cb (GtkWidget* toolitem,$/;"	f	file:
feed_panel_disconnect_feed	extensions/feed-panel/feed-panel.c	/^feed_panel_disconnect_feed (FeedPanel*  panel,$/;"	f	file:
feed_panel_finalize	extensions/feed-panel/feed-panel.c	/^feed_panel_finalize (GObject* object)$/;"	f	file:
feed_panel_get_label	extensions/feed-panel/feed-panel.c	/^feed_panel_get_label (MidoriViewable* viewable)$/;"	f	file:
feed_panel_get_stock_id	extensions/feed-panel/feed-panel.c	/^feed_panel_get_stock_id (MidoriViewable* viewable)$/;"	f	file:
feed_panel_get_toolbar	extensions/feed-panel/feed-panel.c	/^feed_panel_get_toolbar (MidoriViewable* viewable)$/;"	f	file:
feed_panel_init	extensions/feed-panel/feed-panel.c	/^feed_panel_init (FeedPanel* panel)$/;"	f	file:
feed_panel_insert_item	extensions/feed-panel/feed-panel.c	/^feed_panel_insert_item (FeedPanel*    panel,$/;"	f	file:
feed_panel_move_item_cb	extensions/feed-panel/feed-panel.c	/^feed_panel_move_item_cb (KatzeArray* feed,$/;"	f	file:
feed_panel_new	extensions/feed-panel/feed-panel.c	/^feed_panel_new (void)$/;"	f
feed_panel_open_activate_cb	extensions/feed-panel/feed-panel.c	/^feed_panel_open_activate_cb (GtkWidget* menuitem,$/;"	f	file:
feed_panel_open_in_tab_activate_cb	extensions/feed-panel/feed-panel.c	/^feed_panel_open_in_tab_activate_cb (GtkWidget* menuitem,$/;"	f	file:
feed_panel_open_in_window_activate_cb	extensions/feed-panel/feed-panel.c	/^feed_panel_open_in_window_activate_cb (GtkWidget* menuitem,$/;"	f	file:
feed_panel_popup	extensions/feed-panel/feed-panel.c	/^feed_panel_popup (GtkWidget*      widget,$/;"	f	file:
feed_panel_popup_item	extensions/feed-panel/feed-panel.c	/^feed_panel_popup_item (GtkWidget*     menu,$/;"	f	file:
feed_panel_popup_menu_cb	extensions/feed-panel/feed-panel.c	/^feed_panel_popup_menu_cb (GtkWidget* widget,$/;"	f	file:
feed_panel_remove_item_cb	extensions/feed-panel/feed-panel.c	/^feed_panel_remove_item_cb (KatzeArray* item,$/;"	f	file:
feed_panel_remove_iter	extensions/feed-panel/feed-panel.c	/^feed_panel_remove_iter (GtkTreeModel* model,$/;"	f	file:
feed_panel_row_activated_cb	extensions/feed-panel/feed-panel.c	/^feed_panel_row_activated_cb (GtkTreeView*       treeview,$/;"	f	file:
feed_panel_treeview_render_icon_cb	extensions/feed-panel/feed-panel.c	/^feed_panel_treeview_render_icon_cb (GtkTreeViewColumn* column,$/;"	f	file:
feed_panel_treeview_render_text_cb	extensions/feed-panel/feed-panel.c	/^feed_panel_treeview_render_text_cb (GtkTreeViewColumn* column,$/;"	f	file:
feed_panel_viewable_iface_init	extensions/feed-panel/feed-panel.c	/^feed_panel_viewable_iface_init (MidoriViewableIface* iface)$/;"	f	file:
feed_parse_doc	extensions/feed-panel/feed-parse.c	/^feed_parse_doc (xmlDocPtr   doc,$/;"	f	file:
feed_parse_node	extensions/feed-panel/feed-parse.c	/^feed_parse_node (FeedParser* fparser)$/;"	f
feed_parser_set_error	extensions/feed-panel/feed-parse.h	53;"	d
feed_remove_flags	extensions/feed-panel/main.c	34;"	d	file:
feed_remove_markup	extensions/feed-panel/feed-parse.c	/^feed_remove_markup (gchar* markup)$/;"	f
feed_save_items	extensions/feed-panel/main.c	/^feed_save_items (MidoriExtension* extension,$/;"	f	file:
feed_set_flags	extensions/feed-panel/main.c	24;"	d	file:
feed_status_cb	extensions/feed-panel/main.c	/^feed_status_cb (KatzeNetRequest*  request,$/;"	f	file:
feed_transfer_cb	extensions/feed-panel/main.c	/^feed_transfer_cb (KatzeNetRequest* request,$/;"	f	file:
feeds	extensions/feed-panel/main.c	/^    KatzeArray* feeds;$/;"	m	struct:__anon11	file:
file	waf-modules/wafadmin/Node.py	/^	def file(self):$/;"	m	class:Node
file_base	waf-modules/wafadmin/Node.py	/^	def file_base(self):$/;"	m	class:Node
file_deps	waf-modules/wafadmin/Task.py	/^file_deps=Utils.nada$/;"	v
file_opening_doesn_t_workpdfs_are_opened_with_gimp	data/faq.html	/^<h4><a name="file_opening_doesn_t_workpdfs_are_opened_with_gimp" id="file_opening_doesn_t_workpdfs_are_opened_with_gimp">File opening doesn&#039;t work\/ PDFs are opened with GIMP<\/a><\/h4>$/;"	a
file_opening_doesn_t_workpdfs_are_opened_with_gimp	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="file_opening_doesn_t_workpdfs_are_opened_with_gimp" id="file_opening_doesn_t_workpdfs_are_opened_with_gimp">File opening doesn&#039;t work\/ PDFs are opened with GIMP<\/a><\/h4>$/;"	a
file_opening_doesn_t_workpdfs_are_opened_with_gimp	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="file_opening_doesn_t_workpdfs_are_opened_with_gimp" id="file_opening_doesn_t_workpdfs_are_opened_with_gimp">File opening doesn&#039;t work\/ PDFs are opened with GIMP<\/a><\/h4>$/;"	a
filename	katze/katze-http-auth.c	/^    gchar* filename;$/;"	m	struct:_KatzeHttpAuth	file:
filename	katze/katze-http-cookies-sqlite.c	/^    gchar* filename;$/;"	m	struct:_KatzeHttpCookiesSqlite	file:
filename	katze/katze-http-cookies.c	/^    gchar* filename;$/;"	m	struct:_KatzeHttpCookies	file:
filename	tools/check-style	/^                    filename = line[6:]$/;"	v
filename	tools/check-style	/^        filename = handle.name$/;"	v
files	waf-modules/wafadmin/Node.py	/^	def files(self):$/;"	m	class:Node
filter	extensions/cookie-manager/cookie-manager-page.c	/^	GtkTreeModel *filter;$/;"	m	struct:_CookieManagerPagePrivate	file:
filter	panels/midori-bookmarks.c	/^    gchar* filter;$/;"	m	struct:_MidoriBookmarks	file:
filter	panels/midori-history.c	/^    gchar* filter;$/;"	m	struct:_MidoriHistory	file:
filter	waf-modules/wafadmin/Logs.py	/^	def filter(self,rec):$/;"	m	class:log_filter
filter_comments	waf-modules/wafadmin/Tools/d.py	/^def filter_comments(filename):$/;"	f
filter_comments	waf-modules/wafadmin/Tools/ocaml.py	/^def filter_comments(txt):$/;"	f
filter_comments	waf-modules/wafadmin/Tools/preproc.py	/^def filter_comments(filename):$/;"	f
filter_entry	extensions/cookie-manager/cookie-manager-page.c	/^	GtkWidget *filter_entry;$/;"	m	struct:_CookieManagerPagePrivate	file:
filter_text	extensions/cookie-manager/cookie-manager.c	/^	gchar *filter_text;$/;"	m	struct:_CookieManagerPrivate	file:
filter_timeout	panels/midori-bookmarks.c	/^    gint filter_timeout;$/;"	m	struct:_MidoriBookmarks	file:
filter_timeout	panels/midori-history.c	/^    gint filter_timeout;$/;"	m	struct:_MidoriHistory	file:
filtre	waf-modules/wafadmin/Node.py	/^		def filtre(name,nn):$/;"	f	function:Node.ant_glob
find	midori/midori-browser.c	/^    GtkWidget* find;$/;"	m	struct:_MidoriBrowser	file:
find_ancestor	waf-modules/wafadmin/Node.py	/^	def find_ancestor(self,node):$/;"	m	class:Node
find_ar	waf-modules/wafadmin/Tools/ar.py	/^def find_ar(conf):$/;"	f
find_bin	waf-modules/wafadmin/Tools/qt4.py	/^	def find_bin(lst,var):$/;"	f	function:detect_qt4
find_boost_includes	waf-modules/wafadmin/3rdparty/boost.py	/^def find_boost_includes(self,kw):$/;"	f
find_boost_library	waf-modules/wafadmin/3rdparty/boost.py	/^def find_boost_library(self,lib,kw):$/;"	f
find_case	toolbars/midori-findbar.c	/^    GtkToolItem* find_case;$/;"	m	struct:_MidoriFindbar	file:
find_close	toolbars/midori-findbar.c	/^    GtkToolItem* find_close;$/;"	m	struct:_MidoriFindbar	file:
find_compiler	win32/x86-mingw32-opensuse/crossconfig.sh	/^find_compiler ()$/;"	f
find_cpp	waf-modules/wafadmin/Tools/config_c.py	/^def find_cpp(conf):$/;"	f
find_cpp	waf-modules/wafadmin/Tools/xlc.py	/^def find_cpp(conf):$/;"	f
find_cpp	waf-modules/wafadmin/Tools/xlcxx.py	/^def find_cpp(conf):$/;"	f
find_deps	waf-modules/wafadmin/Tools/preproc.py	/^	def find_deps(node):$/;"	f	function:get_deps_simple
find_dir	waf-modules/wafadmin/Node.py	/^	def find_dir(self,lst):$/;"	m	class:Node
find_dmd	waf-modules/wafadmin/Tools/dmd.py	/^def find_dmd(conf):$/;"	f
find_file	waf-modules/wafadmin/Configure.py	/^def find_file(filename,path_list):$/;"	f
find_gcc	waf-modules/wafadmin/Tools/gcc.py	/^def find_gcc(conf):$/;"	f
find_gdc	waf-modules/wafadmin/Tools/gdc.py	/^def find_gdc(conf):$/;"	f
find_gxx	waf-modules/wafadmin/Tools/gxx.py	/^def find_gxx(conf):$/;"	f
find_highlight	toolbars/midori-findbar.c	/^    GtkToolItem* find_highlight;$/;"	m	struct:_MidoriFindbar	file:
find_icc	waf-modules/wafadmin/Tools/icc.py	/^def find_icc(conf):$/;"	f
find_icpc	waf-modules/wafadmin/Tools/icpc.py	/^def find_icpc(conf):$/;"	f
find_iter	waf-modules/wafadmin/Node.py	/^	def find_iter(self,in_pat=['*'],ex_pat=exclude_pats,prune_pat=prune_pats,src=True,bld=True,dir=False,maxdepth=25,flat=False):$/;"	m	class:Node
find_iter_impl	waf-modules/wafadmin/Node.py	/^	def find_iter_impl(self,src=True,bld=True,dir=True,accept_name=None,is_prune=None,maxdepth=25):$/;"	m	class:Node
find_lib	waf	/^def find_lib():$/;"	f
find_lib	waf-unpacked	/^def find_lib():$/;"	f
find_library_from_list	waf-modules/wafadmin/3rdparty/boost.py	/^	def find_library_from_list(lib,files):$/;"	f	function:find_boost_library
find_links	midori/midori-view.c	/^    gint find_links;$/;"	m	struct:_MidoriView	file:
find_lt_names_msvc	waf-modules/wafadmin/Tools/msvc.py	/^def find_lt_names_msvc(self,libname,is_static=False):$/;"	f
find_msvc	waf-modules/wafadmin/Tools/msvc.py	/^def find_msvc(conf):$/;"	f
find_node	waf-modules/wafadmin/Tools/misc.py	/^	def find_node(self,base_path):$/;"	m	class:cmd_dir_arg
find_node	waf-modules/wafadmin/Tools/misc.py	/^	def find_node(self,base_path):$/;"	m	class:input_file
find_node	waf-modules/wafadmin/Tools/misc.py	/^	def find_node(self,base_path):$/;"	m	class:output_file
find_or_declare	waf-modules/wafadmin/Node.py	/^	def find_or_declare(self,lst):$/;"	m	class:Node
find_program	waf-modules/wafadmin/Configure.py	/^	def find_program(self,filename,path_list=[],var=None,mandatory=False):$/;"	m	class:ConfigurationContext
find_program_impl	waf-modules/wafadmin/Configure.py	/^def find_program_impl(env,filename,path_list=[],var=None,environ=None):$/;"	f
find_resource	waf-modules/wafadmin/Node.py	/^	def find_resource(self,lst):$/;"	m	class:Node
find_scc	waf-modules/wafadmin/Tools/suncc.py	/^def find_scc(conf):$/;"	f
find_sources_in_dirs	waf-modules/wafadmin/TaskGen.py	/^	def find_sources_in_dirs(self,dirnames,excludes=[],exts=[]):$/;"	m	class:task_gen
find_sxx	waf-modules/wafadmin/Tools/suncxx.py	/^def find_sxx(conf):$/;"	f
find_text	toolbars/midori-findbar.c	/^    GtkWidget* find_text;$/;"	m	struct:_MidoriFindbar	file:
find_typing	toolbars/midori-findbar.c	/^    gboolean find_typing;$/;"	m	struct:_MidoriFindbar	file:
find_while_typing	midori/midori-websettings.c	/^    gboolean find_while_typing : 1;$/;"	m	struct:_MidoriWebSettings	file:
find_xlc	waf-modules/wafadmin/Tools/xlc.py	/^def find_xlc(conf):$/;"	f
find_xlcxx	waf-modules/wafadmin/Tools/xlcxx.py	/^def find_xlcxx(conf):$/;"	f
first_party_cookies_only	midori/midori-websettings.c	/^    gboolean first_party_cookies_only : 1;$/;"	m	struct:_MidoriWebSettings	file:
first_step	_build_/default/extensions/history-list.c	/^	gboolean first_step;$/;"	m	struct:_HistoryListNewTabWindow	file:
fixdir	waf-modules/wafadmin/py3kfixes.py	/^def fixdir(dir):$/;"	f
flag_vars	waf-modules/wafadmin/Tools/cs.py	/^flag_vars=['FLAGS','ASSEMBLIES']$/;"	v
flash_blocking_via_a_user_script	data/faq.html	/^<h4><a name="flash_blocking_via_a_user_script" id="flash_blocking_via_a_user_script">Flash blocking via a User script<\/a><\/h4>$/;"	a
flash_blocking_via_a_user_script	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="flash_blocking_via_a_user_script" id="flash_blocking_via_a_user_script">Flash blocking via a User script<\/a><\/h4>$/;"	a
flash_blocking_via_a_user_script	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="flash_blocking_via_a_user_script" id="flash_blocking_via_a_user_script">Flash blocking via a User script<\/a><\/h4>$/;"	a
flash_blocking_via_a_user_style	data/faq.html	/^<h4><a name="flash_blocking_via_a_user_style" id="flash_blocking_via_a_user_style">Flash blocking via a User style<\/a><\/h4>$/;"	a
flash_blocking_via_a_user_style	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="flash_blocking_via_a_user_style" id="flash_blocking_via_a_user_style">Flash blocking via a User style<\/a><\/h4>$/;"	a
flash_blocking_via_a_user_style	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="flash_blocking_via_a_user_style" id="flash_blocking_via_a_user_style">Flash blocking via a User style<\/a><\/h4>$/;"	a
flash_is_crashing_all_the_time	data/faq.html	/^<h4><a name="flash_is_crashing_all_the_time" id="flash_is_crashing_all_the_time">Flash is crashing all the time<\/a><\/h4>$/;"	a
flash_is_crashing_all_the_time	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="flash_is_crashing_all_the_time" id="flash_is_crashing_all_the_time">Flash is crashing all the time<\/a><\/h4>$/;"	a
flash_is_crashing_all_the_time	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="flash_is_crashing_all_the_time" id="flash_is_crashing_all_the_time">Flash is crashing all the time<\/a><\/h4>$/;"	a
flash_window_on_bg_tabs	midori/midori-websettings.c	/^    gboolean flash_window_on_bg_tabs;$/;"	m	struct:_MidoriWebSettings	file:
flashnetscape_plugins_don_t_work	data/faq.html	/^<h4><a name="flashnetscape_plugins_don_t_work" id="flashnetscape_plugins_don_t_work">Flash\/ Netscape plugins don&#039;t work<\/a><\/h4>$/;"	a
flashnetscape_plugins_don_t_work	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="flashnetscape_plugins_don_t_work" id="flashnetscape_plugins_don_t_work">Flash\/ Netscape plugins don&#039;t work<\/a><\/h4>$/;"	a
flashnetscape_plugins_don_t_work	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="flashnetscape_plugins_don_t_work" id="flashnetscape_plugins_don_t_work">Flash\/ Netscape plugins don&#039;t work<\/a><\/h4>$/;"	a
fluid	waf-modules/wafadmin/3rdparty/fluid.py	/^def fluid(self,node):$/;"	f
flush	waf-modules/wafadmin/Build.py	/^	def flush(self,all=1):$/;"	m	class:BuildContext
flush	waf-modules/wafadmin/ansiterm.py	/^		def flush(self):$/;"	m	class:AnsiTerm
fmt	tools/check-style	/^fmt = '%s - %d: %s'$/;"	v
following_links	data/faq.html	/^<h3 class="sectionedit11"><a name="following_links" id="following_links">Following Links<\/a><\/h3>$/;"	a
following_links	debian/midori/usr/share/doc/midori/faq.html	/^<h3 class="sectionedit11"><a name="following_links" id="following_links">Following Links<\/a><\/h3>$/;"	a
following_links	debian/tmp/usr/share/doc/midori/faq.html	/^<h3 class="sectionedit11"><a name="following_links" id="following_links">Following Links<\/a><\/h3>$/;"	a
foo	waf-modules/wafadmin/Logs.py	/^class foo(object):$/;"	c
format	waf-modules/wafadmin/Logs.py	/^	def format(self,rec):$/;"	m	class:formatter
format_error	waf-modules/wafadmin/Build.py	/^	def format_error(self):$/;"	m	class:BuildError
format_error	waf-modules/wafadmin/Task.py	/^	def format_error(self):$/;"	m	class:TaskBase
formatter	waf-modules/wafadmin/Logs.py	/^class formatter(logging.Formatter):$/;"	c
formhistory_activate_cb	extensions/formhistory.c	/^formhistory_activate_cb (MidoriExtension* extension,$/;"	f	file:
formhistory_add_field	extensions/formhistory.c	/^formhistory_add_field (gpointer  data,$/;"	f	file:
formhistory_add_tab_cb	extensions/formhistory.c	/^formhistory_add_tab_cb (MidoriBrowser*   browser,$/;"	f	file:
formhistory_add_tab_foreach_cb	extensions/formhistory.c	/^formhistory_add_tab_foreach_cb (MidoriView*     view,$/;"	f	file:
formhistory_app_add_browser_cb	extensions/formhistory.c	/^formhistory_app_add_browser_cb (MidoriApp*       app,$/;"	f	file:
formhistory_build_js	extensions/formhistory.c	/^formhistory_build_js ()$/;"	f	file:
formhistory_deactivate_cb	extensions/formhistory.c	/^formhistory_deactivate_cb (MidoriExtension* extension,$/;"	f	file:
formhistory_deactivate_tabs	extensions/formhistory.c	/^formhistory_deactivate_tabs (MidoriView*      view,$/;"	f	file:
formhistory_fixup_value	extensions/formhistory.c	/^formhistory_fixup_value (char* value)$/;"	f	file:
formhistory_navigation_decision_cb	extensions/formhistory.c	/^formhistory_navigation_decision_cb (WebKitWebView*             web_view,$/;"	f	file:
formhistory_preferences_cb	extensions/formhistory.c	/^formhistory_preferences_cb (MidoriExtension* extension)$/;"	f	file:
formhistory_preferences_response_cb	extensions/formhistory.c	/^formhistory_preferences_response_cb (GtkWidget*       dialog,$/;"	f	file:
formhistory_prepare_js	extensions/formhistory.c	/^formhistory_prepare_js ()$/;"	f	file:
formhistory_toggle_state_cb	extensions/formhistory.c	/^formhistory_toggle_state_cb (GtkAction*     action,$/;"	f	file:
formhistory_update_database	extensions/formhistory.c	/^formhistory_update_database (gpointer     db,$/;"	f	file:
formhistory_update_main_hash	extensions/formhistory.c	/^formhistory_update_main_hash (gchar* key,$/;"	f	file:
formhistory_window_object_cleared_cb	extensions/formhistory.c	/^formhistory_window_object_cleared_cb (WebKitWebView*  web_view,$/;"	f	file:
fraction	midori/gtkiconentry.c	/^  gdouble fraction;$/;"	m	struct:_GtkIconEntryPrivate	file:
frame	midori/midori-panel.c	/^    GtkWidget* frame;$/;"	m	struct:_MidoriPanel	file:
fullpath	extensions/addons.c	/^    gchar* fullpath;$/;"	m	struct:AddonElement	file:
func	midori/socket.c	/^	SockAddrFunc func;$/;"	m	struct:_SockLookupData	file:
func	midori/socket.c	/^	SockConnectFunc func;$/;"	m	struct:_SockConnectData	file:
funex	waf-modules/wafadmin/Task.py	/^def funex(c):$/;"	f
g_bibtex_re	waf-modules/wafadmin/Tools/tex.py	/^g_bibtex_re=re.compile('bibdata',re.M)$/;"	v
g_cc_flag_vars	waf-modules/wafadmin/Tools/cc.py	/^g_cc_flag_vars=['CCDEPS','FRAMEWORK','FRAMEWORKPATH','STATICLIB','LIB','LIBPATH','LINKFLAGS','RPATH','CCFLAGS','CPPPATH','CPPFLAGS','CCDEFINES']$/;"	v
g_cc_type_vars	waf-modules/wafadmin/Tools/cc.py	/^g_cc_type_vars=['CCFLAGS','LINKFLAGS']$/;"	v
g_cclosure_user_marshal_VOID__OBJECT_BOXED	_build_/default/midori/midori-extensions-column.c	/^static void g_cclosure_user_marshal_VOID__OBJECT_BOXED (GClosure * closure, GValue * return_value, guint n_param_values, const GValue * param_values, gpointer invocation_hint, gpointer marshal_data) {$/;"	f	file:
g_cxx_flag_vars	waf-modules/wafadmin/Tools/cxx.py	/^g_cxx_flag_vars=['CXXDEPS','FRAMEWORK','FRAMEWORKPATH','STATICLIB','LIB','LIBPATH','LINKFLAGS','RPATH','CXXFLAGS','CCFLAGS','CPPPATH','CPPFLAGS','CXXDEFINES']$/;"	v
g_cxx_type_vars	waf-modules/wafadmin/Tools/cxx.py	/^g_cxx_type_vars=['CXXFLAGS','LINKFLAGS']$/;"	v
g_format_size	katze/gtk3-compat.h	39;"	d
g_gz	waf-modules/wafadmin/Scripting.py	/^g_gz='bz2'$/;"	v
g_loaded_modules	waf-modules/wafadmin/Utils.py	/^g_loaded_modules={}$/;"	v
g_marshal_value_peek_boolean	_build_/default/midori/marshal.c	31;"	d	file:
g_marshal_value_peek_boolean	_build_/default/midori/marshal.c	7;"	d	file:
g_marshal_value_peek_boxed	_build_/default/midori/marshal.c	22;"	d	file:
g_marshal_value_peek_boxed	_build_/default/midori/marshal.c	46;"	d	file:
g_marshal_value_peek_char	_build_/default/midori/marshal.c	32;"	d	file:
g_marshal_value_peek_char	_build_/default/midori/marshal.c	8;"	d	file:
g_marshal_value_peek_double	_build_/default/midori/marshal.c	19;"	d	file:
g_marshal_value_peek_double	_build_/default/midori/marshal.c	43;"	d	file:
g_marshal_value_peek_enum	_build_/default/midori/marshal.c	16;"	d	file:
g_marshal_value_peek_enum	_build_/default/midori/marshal.c	40;"	d	file:
g_marshal_value_peek_flags	_build_/default/midori/marshal.c	17;"	d	file:
g_marshal_value_peek_flags	_build_/default/midori/marshal.c	41;"	d	file:
g_marshal_value_peek_float	_build_/default/midori/marshal.c	18;"	d	file:
g_marshal_value_peek_float	_build_/default/midori/marshal.c	42;"	d	file:
g_marshal_value_peek_int	_build_/default/midori/marshal.c	10;"	d	file:
g_marshal_value_peek_int	_build_/default/midori/marshal.c	34;"	d	file:
g_marshal_value_peek_int64	_build_/default/midori/marshal.c	14;"	d	file:
g_marshal_value_peek_int64	_build_/default/midori/marshal.c	38;"	d	file:
g_marshal_value_peek_long	_build_/default/midori/marshal.c	12;"	d	file:
g_marshal_value_peek_long	_build_/default/midori/marshal.c	36;"	d	file:
g_marshal_value_peek_object	_build_/default/midori/marshal.c	24;"	d	file:
g_marshal_value_peek_object	_build_/default/midori/marshal.c	48;"	d	file:
g_marshal_value_peek_param	_build_/default/midori/marshal.c	21;"	d	file:
g_marshal_value_peek_param	_build_/default/midori/marshal.c	45;"	d	file:
g_marshal_value_peek_pointer	_build_/default/midori/marshal.c	23;"	d	file:
g_marshal_value_peek_pointer	_build_/default/midori/marshal.c	47;"	d	file:
g_marshal_value_peek_string	_build_/default/midori/marshal.c	20;"	d	file:
g_marshal_value_peek_string	_build_/default/midori/marshal.c	44;"	d	file:
g_marshal_value_peek_uchar	_build_/default/midori/marshal.c	33;"	d	file:
g_marshal_value_peek_uchar	_build_/default/midori/marshal.c	9;"	d	file:
g_marshal_value_peek_uint	_build_/default/midori/marshal.c	11;"	d	file:
g_marshal_value_peek_uint	_build_/default/midori/marshal.c	35;"	d	file:
g_marshal_value_peek_uint64	_build_/default/midori/marshal.c	15;"	d	file:
g_marshal_value_peek_uint64	_build_/default/midori/marshal.c	39;"	d	file:
g_marshal_value_peek_ulong	_build_/default/midori/marshal.c	13;"	d	file:
g_marshal_value_peek_ulong	_build_/default/midori/marshal.c	37;"	d	file:
g_marshal_value_peek_variant	_build_/default/midori/marshal.c	25;"	d	file:
g_marshal_value_peek_variant	_build_/default/midori/marshal.c	49;"	d	file:
g_module	waf-modules/wafadmin/Utils.py	/^g_module=None$/;"	v
gai_strerror	midori/socket.c	/^const gchar *gai_strerror(gint errcode)$/;"	f
gai_strerror	midori/socket.c	826;"	d	file:
gather_icl_versions	waf-modules/wafadmin/Tools/msvc.py	/^def gather_icl_versions(conf,versions):$/;"	f
gather_msvc_versions	waf-modules/wafadmin/Tools/msvc.py	/^def gather_msvc_versions(conf,versions):$/;"	f
gather_wsdk_versions	waf-modules/wafadmin/Tools/msvc.py	/^def gather_wsdk_versions(conf,versions):$/;"	f
gcc_common_flags	waf-modules/wafadmin/Tools/gcc.py	/^def gcc_common_flags(conf):$/;"	f
gcc_modifier_aix	waf-modules/wafadmin/Tools/gcc.py	/^def gcc_modifier_aix(conf):$/;"	f
gcc_modifier_cygwin	waf-modules/wafadmin/Tools/gcc.py	/^def gcc_modifier_cygwin(conf):$/;"	f
gcc_modifier_darwin	waf-modules/wafadmin/Tools/gcc.py	/^def gcc_modifier_darwin(conf):$/;"	f
gcc_modifier_platform	waf-modules/wafadmin/Tools/gcc.py	/^def gcc_modifier_platform(conf):$/;"	f
gcc_modifier_win32	waf-modules/wafadmin/Tools/gcc.py	/^def gcc_modifier_win32(conf):$/;"	f
generateMakefile	configure	/^generateMakefile()$/;"	f
generate_header	waf-modules/wafadmin/Tools/d.py	/^def generate_header(self,filename,install_path):$/;"	f
generate_ident_string	midori/midori-websettings.c	/^generate_ident_string (MidoriWebSettings* web_settings,$/;"	f	file:
genmarshal_func	waf-modules/wafadmin/Tools/glib2.py	/^def genmarshal_func(self):$/;"	f
gesture	extensions/mouse-gestures.c	/^MouseGesture *gesture = NULL;$/;"	v
get_boost_version_number	waf-modules/wafadmin/3rdparty/boost.py	/^def get_boost_version_number(self,dir):$/;"	f
get_borders	midori/gtkiconentry.c	/^get_borders (GtkIconEntry *entry, gint *xborder, gint *yborder)$/;"	f	file:
get_build	waf-modules/wafadmin/Node.py	/^	def get_build(self,name,default=None):$/;"	m	class:Node
get_cc_version	waf-modules/wafadmin/Tools/ccroot.py	/^def get_cc_version(conf,cc,gcc=False,icc=False):$/;"	f
get_chmod	waf-modules/wafadmin/TaskGen.py	/^	def get_chmod(self):$/;"	m	class:task_gen
get_color	waf-modules/wafadmin/Logs.py	/^def get_color(cl):$/;"	f
get_config_header	waf-modules/wafadmin/Tools/config_c.py	/^def get_config_header(self):$/;"	f
get_curdir	waf-modules/wafadmin/Utils.py	/^	def get_curdir(self):$/;"	m	class:Context
get_define	waf-modules/wafadmin/Tools/config_c.py	/^def get_define(self,define):$/;"	f
get_deps	waf-modules/wafadmin/Tools/preproc.py	/^def get_deps(node,env,nodepaths=[]):$/;"	f
get_deps_simple	waf-modules/wafadmin/Tools/preproc.py	/^def get_deps_simple(node,env,nodepaths=[],defines={}):$/;"	f
get_destdir	waf-modules/wafadmin/Environment.py	/^	def get_destdir(self):$/;"	m	class:Environment
get_dir	waf-modules/wafadmin/Node.py	/^	def get_dir(self,name,default=None):$/;"	m	class:Node
get_elapsed_time	waf-modules/wafadmin/Utils.py	/^def get_elapsed_time(start):$/;"	f
get_env	waf-modules/wafadmin/Build.py	/^	def get_env(self):$/;"	m	class:BuildContext
get_file	waf-modules/wafadmin/Node.py	/^	def get_file(self,name,default=None):$/;"	m	class:Node
get_flat	waf-modules/wafadmin/Environment.py	/^	def get_flat(self,key):$/;"	m	class:Environment
get_hook	waf-modules/wafadmin/TaskGen.py	/^	def get_hook(self,ext):$/;"	m	class:task_gen
get_icon_allocation	midori/gtkiconentry.c	/^get_icon_allocation (GtkIconEntry *icon_entry,$/;"	f	file:
get_icon_width	midori/gtkiconentry.c	/^get_icon_width (GtkIconEntry *entry, GtkIconEntryPosition icon_pos)$/;"	f	file:
get_inst_path	waf-modules/wafadmin/TaskGen.py	/^	def get_inst_path(self):$/;"	m	class:task_gen
get_install_path	waf-modules/wafadmin/Build.py	/^	def get_install_path(self,path,env=None):$/;"	m	class:BuildContext
get_label	midori/midori-viewable.h	/^    (*get_label)              (MidoriViewable*             viewable);$/;"	m	struct:_MidoriViewableIface
get_layout_position	midori/gtkiconentry.c	/^get_layout_position (GtkEntry *entry,$/;"	f	file:
get_libs	waf-modules/wafadmin/Tools/libtool.py	/^	def get_libs(self):$/;"	m	class:libtool_config
get_libs	waf-modules/wafadmin/Tools/libtool.py	/^	def get_libs(self):$/;"	m	class:libtool_la_file
get_libs_only_L	waf-modules/wafadmin/Tools/libtool.py	/^	def get_libs_only_L(self):$/;"	m	class:libtool_config
get_libs_only_l	waf-modules/wafadmin/Tools/libtool.py	/^	def get_libs_only_l(self):$/;"	m	class:libtool_config
get_libs_only_other	waf-modules/wafadmin/Tools/libtool.py	/^	def get_libs_only_other(self):$/;"	m	class:libtool_config
get_merged_dict	waf-modules/wafadmin/Environment.py	/^	def get_merged_dict(self):$/;"	m	class:Environment
get_msvc_version	waf-modules/wafadmin/Tools/msvc.py	/^def get_msvc_version(conf,compiler,version,target,vcvars):$/;"	f
get_msvc_versions	waf-modules/wafadmin/Tools/msvc.py	/^def get_msvc_versions(conf):$/;"	f
get_next	waf-modules/wafadmin/Runner.py	/^	def get_next(self):$/;"	m	class:Parallel
get_next_set	waf-modules/wafadmin/Task.py	/^	def get_next_set(self):$/;"	m	class:TaskGroup
get_next_set	waf-modules/wafadmin/Task.py	/^	def get_next_set(self):$/;"	m	class:TaskManager
get_num	waf-modules/wafadmin/Tools/preproc.py	/^def get_num(lst):$/;"	f
get_option_group	waf-modules/wafadmin/Options.py	/^	def get_option_group(self,opt_str):$/;"	m	class:Handler
get_out	waf-modules/wafadmin/Runner.py	/^	def get_out(self):$/;"	m	class:Parallel
get_param	waf-modules/wafadmin/Tools/gnu_dirs.py	/^	def get_param(varname,default):$/;"	f	function:detect
get_path	waf-modules/wafadmin/Tools/misc.py	/^	def get_path(self,dummy_env,dummy_absolute):$/;"	m	class:input_dir
get_path	waf-modules/wafadmin/Tools/misc.py	/^	def get_path(self,env,absolute):$/;"	m	class:input_file
get_path	waf-modules/wafadmin/Tools/misc.py	/^	def get_path(self,env,absolute):$/;"	m	class:output_file
get_path	waf-modules/wafadmin/Tools/misc.py	/^	def get_path(self,env,dummy_absolute):$/;"	m	class:output_dir
get_pixbuf_from_icon	midori/gtkiconentry.c	/^get_pixbuf_from_icon (GtkIconEntry *entry, GtkIconEntryPosition icon_pos)$/;"	f	file:
get_stock_id	midori/midori-viewable.h	/^    (*get_stock_id)           (MidoriViewable*             viewable);$/;"	m	struct:_MidoriViewableIface
get_strings	waf-modules/wafadmin/Tools/d.py	/^	def get_strings(self,code):$/;"	m	class:d_parser
get_sys_name	midori/midori-websettings.c	/^get_sys_name (gchar** architecture)$/;"	f	file:
get_target_name	waf-modules/wafadmin/Tools/ccroot.py	/^def get_target_name(self):$/;"	f
get_target_name	waf-modules/wafadmin/Tools/d.py	/^def get_target_name(self):$/;"	f
get_term	waf-modules/wafadmin/Tools/preproc.py	/^def get_term(lst):$/;"	f
get_term_cols	waf-modules/wafadmin/Utils.py	/^def get_term_cols():$/;"	f
get_text_area_size	midori/gtkiconentry.c	/^get_text_area_size (GtkIconEntry *entry, GtkAllocation *alloc)$/;"	f	file:
get_toolbar	midori/midori-viewable.h	/^    (*get_toolbar)            (MidoriViewable*             viewable);$/;"	m	struct:_MidoriViewableIface
get_type	waf-modules/wafadmin/Node.py	/^	def get_type(self):$/;"	m	class:Node
get_usage	waf-modules/wafadmin/Options.py	/^def get_usage(self):$/;"	f
getstr	waf-modules/wafadmin/Tools/gnome.py	/^	def getstr(varname):$/;"	f	function:detect
getstr	waf-modules/wafadmin/Tools/intltool.py	/^	def getstr(varname):$/;"	f	function:detect
getting_started	data/faq.html	/^<h1 class="sectionedit2"><a name="getting_started" id="getting_started">Getting started<\/a><\/h1>$/;"	a
getting_started	debian/midori/usr/share/doc/midori/faq.html	/^<h1 class="sectionedit2"><a name="getting_started" id="getting_started">Getting started<\/a><\/h1>$/;"	a
getting_started	debian/tmp/usr/share/doc/midori/faq.html	/^<h1 class="sectionedit2"><a name="getting_started" id="getting_started">Getting started<\/a><\/h1>$/;"	a
gicon	midori/gtkiconentry.c	/^  GIcon *gicon;$/;"	m	struct:__anon54	file:
gitdiff	tools/check-style	/^                gitdiff = subprocess.Popen (['git', 'diff', '^HEAD',$/;"	v
glob	waf-modules/wafadmin/Build.py	/^	def glob(self,pattern,relative=True):$/;"	m	class:BuildContext
global_keys	extensions/formhistory.c	/^static GHashTable* global_keys;$/;"	v	file:
gnome_doc_taskgen	waf-modules/wafadmin/Tools/gnome.py	/^class gnome_doc_taskgen(TaskGen.task_gen):$/;"	c
gnome_sgml2man_taskgen	waf-modules/wafadmin/Tools/gnome.py	/^class gnome_sgml2man_taskgen(TaskGen.task_gen):$/;"	c
go_absolute	waf-modules/wafadmin/Tools/preproc.py	/^go_absolute=0$/;"	v
going_down	katze/katze-scrolled.c	/^    gboolean going_down;$/;"	m	struct:_KatzeScrolledPrivate	file:
going_right	katze/katze-scrolled.c	/^    gboolean going_right;$/;"	m	struct:_KatzeScrolledPrivate	file:
got_tty	waf-modules/wafadmin/Logs.py	/^		got_tty=sys.stderr.isatty()or(sys.platform=='win32'and term in['xterm','msys'])$/;"	v
got_tty	waf-modules/wafadmin/Logs.py	/^got_tty=False$/;"	v
group_idx	waf-modules/wafadmin/Task.py	/^	def group_idx(self,tg):$/;"	m	class:TaskManager
group_method	waf-modules/wafadmin/Build.py	/^def group_method(fun):$/;"	f
group_name	waf-modules/wafadmin/Task.py	/^	def group_name(self,g):$/;"	m	class:TaskManager
gtk_activatable_get_related_action	katze/gtk3-compat.h	54;"	d
gtk_adjustment_get_lower	katze/gtk3-compat.h	48;"	d
gtk_adjustment_get_page_size	katze/gtk3-compat.h	46;"	d
gtk_adjustment_get_upper	katze/gtk3-compat.h	47;"	d
gtk_adjustment_get_value	katze/gtk3-compat.h	49;"	d
gtk_box_repack	midori/midori-view.c	/^gtk_box_repack (GtkBox*    box,$/;"	f	file:
gtk_combo_box_text_append_text	katze/gtk3-compat.h	113;"	d
gtk_combo_box_text_get_active_text	katze/gtk3-compat.h	116;"	d
gtk_combo_box_text_new	katze/gtk3-compat.h	114;"	d
gtk_combo_box_text_new_with_entry	katze/gtk3-compat.h	115;"	d
gtk_dialog_get_action_area	katze/gtk3-compat.h	44;"	d
gtk_dialog_get_content_area	katze/gtk3-compat.h	43;"	d
gtk_entry_borders	midori/gtkiconentry.c	/^gtk_entry_borders (GtkEntry* entry,$/;"	f	file:
gtk_entry_draw_text	midori/gtkiconentry.c	/^gtk_entry_draw_text (GtkEntry *entry)$/;"	f	file:
gtk_entry_get_pixel_ranges	midori/gtkiconentry.c	/^gtk_entry_get_pixel_ranges (GtkEntry  *entry,$/;"	f	file:
gtk_entry_get_text_area_size	midori/gtkiconentry.c	/^gtk_entry_get_text_area_size (GtkEntry *entry,$/;"	f	file:
gtk_entry_set_placeholder_text	katze/gtk3-compat.c	/^gtk_entry_set_placeholder_text (GtkEntry*    entry,$/;"	f
gtk_entry_set_placeholder_text	katze/gtk3-compat.h	91;"	d
gtk_hbox_new	katze/gtk3-compat.h	19;"	d
gtk_hpaned_new	katze/gtk3-compat.h	23;"	d
gtk_hseparator_new	katze/gtk3-compat.h	22;"	d
gtk_icon_entry_button_press	midori/gtkiconentry.c	/^gtk_icon_entry_button_press (GtkWidget *widget, GdkEventButton *event)$/;"	f	file:
gtk_icon_entry_button_release	midori/gtkiconentry.c	/^gtk_icon_entry_button_release (GtkWidget *widget, GdkEventButton *event)$/;"	f	file:
gtk_icon_entry_class_init	midori/gtkiconentry.c	/^gtk_icon_entry_class_init (GtkIconEntryClass *klass)$/;"	f	file:
gtk_icon_entry_dispose	midori/gtkiconentry.c	/^gtk_icon_entry_dispose (GObject *obj)$/;"	f	file:
gtk_icon_entry_editable_init	midori/gtkiconentry.c	/^gtk_icon_entry_editable_init (GtkEditableClass *iface)$/;"	f	file:
gtk_icon_entry_enter_notify	midori/gtkiconentry.c	/^gtk_icon_entry_enter_notify (GtkWidget *widget, GdkEventCrossing *event)$/;"	f	file:
gtk_icon_entry_expose	midori/gtkiconentry.c	/^gtk_icon_entry_expose (GtkWidget *widget, GdkEventExpose *event)$/;"	f	file:
gtk_icon_entry_finalize	midori/gtkiconentry.c	/^gtk_icon_entry_finalize (GObject *obj)$/;"	f	file:
gtk_icon_entry_get_gicon	midori/gtkiconentry.c	/^gtk_icon_entry_get_gicon (const GtkIconEntry *entry,$/;"	f
gtk_icon_entry_get_icon_highlight	midori/gtkiconentry.c	/^gtk_icon_entry_get_icon_highlight (const GtkIconEntry *entry,$/;"	f
gtk_icon_entry_get_pixbuf	midori/gtkiconentry.c	/^gtk_icon_entry_get_pixbuf (const GtkIconEntry *entry,$/;"	f
gtk_icon_entry_get_property	midori/gtkiconentry.c	/^gtk_icon_entry_get_property (GObject      *object,$/;"	f	file:
gtk_icon_entry_init	midori/gtkiconentry.c	/^gtk_icon_entry_init (GtkIconEntry *entry)$/;"	f	file:
gtk_icon_entry_leave_notify	midori/gtkiconentry.c	/^gtk_icon_entry_leave_notify (GtkWidget *widget, GdkEventCrossing *event)$/;"	f	file:
gtk_icon_entry_map	midori/gtkiconentry.c	/^gtk_icon_entry_map (GtkWidget *widget)$/;"	f	file:
gtk_icon_entry_new	midori/gtkiconentry.c	/^gtk_icon_entry_new (void)$/;"	f
gtk_icon_entry_new	midori/gtkiconentry.h	36;"	d
gtk_icon_entry_realize	midori/gtkiconentry.c	/^gtk_icon_entry_realize (GtkWidget *widget)$/;"	f	file:
gtk_icon_entry_set_cursor	midori/gtkiconentry.c	/^gtk_icon_entry_set_cursor (const GtkIconEntry *entry,$/;"	f
gtk_icon_entry_set_icon_from_gicon	midori/gtkiconentry.c	/^gtk_icon_entry_set_icon_from_gicon (const GtkIconEntry *entry,$/;"	f
gtk_icon_entry_set_icon_from_icon_name	midori/gtkiconentry.c	/^gtk_icon_entry_set_icon_from_icon_name (GtkIconEntry *entry,$/;"	f
gtk_icon_entry_set_icon_from_icon_name	midori/gtkiconentry.h	38;"	d
gtk_icon_entry_set_icon_from_pixbuf	midori/gtkiconentry.c	/^gtk_icon_entry_set_icon_from_pixbuf (GtkEntry*            entry,$/;"	f
gtk_icon_entry_set_icon_from_pixbuf	midori/gtkiconentry.c	/^gtk_icon_entry_set_icon_from_pixbuf (GtkIconEntry *entry,$/;"	f
gtk_icon_entry_set_icon_from_stock	midori/gtkiconentry.c	/^gtk_icon_entry_set_icon_from_stock (GtkIconEntry *entry,$/;"	f
gtk_icon_entry_set_icon_from_stock	midori/gtkiconentry.h	37;"	d
gtk_icon_entry_set_icon_highlight	midori/gtkiconentry.c	/^gtk_icon_entry_set_icon_highlight (const GtkIconEntry *entry,$/;"	f
gtk_icon_entry_set_icon_highlight	midori/gtkiconentry.h	45;"	d
gtk_icon_entry_set_icon_internal	midori/gtkiconentry.c	/^gtk_icon_entry_set_icon_internal (GtkIconEntry *entry,$/;"	f	file:
gtk_icon_entry_set_icon_sensitive	midori/gtkiconentry.c	/^gtk_icon_entry_set_icon_sensitive (const GtkIconEntry *icon_entry,$/;"	f
gtk_icon_entry_set_progress_fraction	midori/gtkiconentry.c	/^gtk_icon_entry_set_progress_fraction (GtkIconEntry *icon_entry,$/;"	f
gtk_icon_entry_set_progress_fraction	midori/gtkiconentry.h	46;"	d
gtk_icon_entry_set_property	midori/gtkiconentry.c	/^gtk_icon_entry_set_property (GObject      *object,$/;"	f	file:
gtk_icon_entry_set_tooltip	midori/gtkiconentry.c	/^gtk_icon_entry_set_tooltip (const GtkIconEntry *entry,$/;"	f
gtk_icon_entry_set_tooltip	midori/gtkiconentry.h	44;"	d
gtk_icon_entry_size_allocate	midori/gtkiconentry.c	/^gtk_icon_entry_size_allocate (GtkWidget *widget, GtkAllocation *allocation)$/;"	f	file:
gtk_icon_entry_size_request	midori/gtkiconentry.c	/^gtk_icon_entry_size_request (GtkWidget *widget, GtkRequisition *requisition)$/;"	f	file:
gtk_icon_entry_style_set	midori/gtkiconentry.c	/^gtk_icon_entry_style_set (GtkWidget *widget, GtkStyle *prev_style)$/;"	f	file:
gtk_icon_entry_unmap	midori/gtkiconentry.c	/^gtk_icon_entry_unmap (GtkWidget *widget)$/;"	f	file:
gtk_icon_entry_unrealize	midori/gtkiconentry.c	/^gtk_icon_entry_unrealize (GtkWidget *widget)$/;"	f	file:
gtk_image_menu_item_set_always_show_image	katze/gtk3-compat.h	58;"	d
gtk_menu_item_set_label	katze/gtk3-compat.h	55;"	d
gtk_notebook_switch_page_after_cb	midori/midori-browser.c	/^gtk_notebook_switch_page_after_cb (GtkWidget*       notebook,$/;"	f	file:
gtk_notebook_switch_page_cb	midori/midori-browser.c	/^gtk_notebook_switch_page_cb (GtkWidget*       notebook,$/;"	f	file:
gtk_tool_item_set_tooltip_text	katze/gtk3-compat.c	/^gtk_tool_item_set_tooltip_text (GtkToolItem* toolitem,$/;"	f
gtk_vbox_new	katze/gtk3-compat.h	13;"	d
gtk_vpaned_new	katze/gtk3-compat.h	24;"	d
gtk_widget_button_press_event_cb	midori/midori-view.c	/^gtk_widget_button_press_event_cb (WebKitWebView*  web_view,$/;"	f	file:
gtk_widget_get_allocation	katze/gtk3-compat.h	68;"	d
gtk_widget_get_allocation	katze/gtk3-compat.h	70;"	d
gtk_widget_get_drawable	katze/gtk3-compat.h	73;"	d
gtk_widget_get_has_window	katze/gtk3-compat.h	69;"	d
gtk_widget_get_realized	katze/gtk3-compat.h	80;"	d
gtk_widget_get_sensitive	katze/gtk3-compat.h	65;"	d
gtk_widget_get_visible	katze/gtk3-compat.h	64;"	d
gtk_widget_get_window	katze/gtk3-compat.h	45;"	d
gtk_widget_has_focus	katze/gtk3-compat.h	63;"	d
gtk_widget_is_drawable	katze/gtk3-compat.h	72;"	d
gtk_widget_is_toplevel	katze/gtk3-compat.h	62;"	d
gtk_widget_key_press_event_cb	midori/midori-view.c	/^gtk_widget_key_press_event_cb (WebKitWebView* web_view,$/;"	f	file:
gtk_widget_render_icon	katze/gtk3-compat.h	27;"	d
gtk_widget_scroll_event_cb	midori/midori-view.c	/^gtk_widget_scroll_event_cb (WebKitWebView*  web_view,$/;"	f	file:
gtk_widget_set_can_focus	katze/gtk3-compat.h	66;"	d
gtk_widget_set_has_tooltip	katze/gtk3-compat.c	/^gtk_widget_set_has_tooltip (GtkWidget* widget,$/;"	f
gtk_widget_set_has_window	katze/gtk3-compat.h	74;"	d
gtk_widget_set_realized	katze/gtk3-compat.h	81;"	d
gtk_widget_set_tooltip_text	katze/gtk3-compat.c	/^gtk_widget_set_tooltip_text (GtkWidget*   widget,$/;"	f
gtk_widget_set_window	katze/gtk3-compat.h	71;"	d
gtk_widget_size_request	katze/gtk3-compat.h	29;"	d
gxx_common_flags	waf-modules/wafadmin/Tools/gxx.py	/^def gxx_common_flags(conf):$/;"	f
gxx_modifier_aix	waf-modules/wafadmin/Tools/gxx.py	/^def gxx_modifier_aix(conf):$/;"	f
gxx_modifier_cygwin	waf-modules/wafadmin/Tools/gxx.py	/^def gxx_modifier_cygwin(conf):$/;"	f
gxx_modifier_darwin	waf-modules/wafadmin/Tools/gxx.py	/^def gxx_modifier_darwin(conf):$/;"	f
gxx_modifier_platform	waf-modules/wafadmin/Tools/gxx.py	/^def gxx_modifier_platform(conf):$/;"	f
gxx_modifier_win32	waf-modules/wafadmin/Tools/gxx.py	/^def gxx_modifier_win32(conf):$/;"	f
hStdError	waf-modules/wafadmin/pproc.py	/^			hStdError=None$/;"	v	class:.__str__.STARTUPINFO
hStdInput	waf-modules/wafadmin/pproc.py	/^			hStdInput=None$/;"	v	class:.__str__.STARTUPINFO
hStdOutput	waf-modules/wafadmin/pproc.py	/^			hStdOutput=None$/;"	v	class:.__str__.STARTUPINFO
h_file	waf-modules/wafadmin/Utils.py	/^		def h_file(filename):$/;"	f	function:WscriptError.h_file
h_file	waf-modules/wafadmin/Utils.py	/^	def h_file(filename):$/;"	m	class:WscriptError
h_fun	waf-modules/wafadmin/Utils.py	/^def h_fun(fun):$/;"	f
h_list	waf-modules/wafadmin/Utils.py	/^def h_list(lst):$/;"	f
hadjustment	katze/katze-scrolled.c	/^    GtkAdjustment* hadjustment;$/;"	m	struct:_KatzeScrolledPrivate	file:
handle_markup_chars	extensions/feed-panel/feed-parse.c	/^handle_markup_chars (void*          user_data,$/;"	f	file:
handles	tools/check-style	/^        handles = []$/;"	v
handles	tools/check-style	/^        handles = [sys.stdin]$/;"	v
has_selection	midori/midori-view.c	/^    gboolean has_selection;$/;"	m	struct:_MidoriView	file:
has_xml	waf-modules/wafadmin/Tools/qt4.py	/^	has_xml=False$/;"	v
has_xml	waf-modules/wafadmin/Tools/qt4.py	/^	has_xml=True$/;"	v
hash_constraints	waf-modules/wafadmin/Task.py	/^	def hash_constraints(self):$/;"	m	class:TaskBase
hash_env_vars	waf-modules/wafadmin/Build.py	/^	def hash_env_vars(self,env,vars_lst):$/;"	m	class:BuildContext
have_define	waf-modules/wafadmin/Tools/config_c.py	/^def have_define(self,name):$/;"	f
hbox	_build_/default/extensions/history-list.c	/^	GtkHBox* hbox;$/;"	m	struct:_HistoryListTabWindow	file:
hbox	katze/katze-preferences.c	/^    GtkWidget* hbox;$/;"	m	struct:_KatzePreferencesPrivate	file:
hconsole	waf-modules/wafadmin/ansiterm.py	/^	hconsole=windll.kernel32.GetStdHandle(-11)$/;"	v
height	katze/katze-throbber.c	/^    gint height;$/;"	m	struct:_KatzeThrobber	file:
height	waf-modules/wafadmin/Node.py	/^	def height(self):$/;"	m	class:Node
hide_cursor	waf-modules/wafadmin/ansiterm.py	/^		def hide_cursor(self,param):$/;"	m	class:AnsiTerm
highlight	midori/gtkiconentry.c	/^  gboolean highlight;$/;"	m	struct:__anon54	file:
history	midori/midori-app.c	/^    KatzeArray* history;$/;"	m	struct:_MidoriApp	file:
history	midori/midori-browser.c	/^    KatzeArray* history;$/;"	m	struct:_MidoriBrowser	file:
history	midori/midori-locationaction.c	/^    KatzeArray* history;$/;"	m	struct:_MidoriLocationAction	file:
history_list_history_window_class_init	_build_/default/extensions/history-list.c	/^static void history_list_history_window_class_init (HistoryListHistoryWindowClass * klass) {$/;"	f	file:
history_list_history_window_clean_up	_build_/default/extensions/history-list.c	/^void history_list_history_window_clean_up (HistoryListHistoryWindow* self) {$/;"	f
history_list_history_window_construct	_build_/default/extensions/history-list.c	/^HistoryListHistoryWindow* history_list_history_window_construct (GType object_type, MidoriBrowser* browser) {$/;"	f
history_list_history_window_finalize	_build_/default/extensions/history-list.c	/^static void history_list_history_window_finalize (GObject* obj) {$/;"	f	file:
history_list_history_window_get_browser	_build_/default/extensions/history-list.c	/^MidoriBrowser* history_list_history_window_get_browser (HistoryListHistoryWindow* self) {$/;"	f
history_list_history_window_get_type	_build_/default/extensions/history-list.c	/^GType history_list_history_window_get_type (void) {$/;"	f
history_list_history_window_instance_init	_build_/default/extensions/history-list.c	/^static void history_list_history_window_instance_init (HistoryListHistoryWindow * self) {$/;"	f	file:
history_list_history_window_make_update	_build_/default/extensions/history-list.c	/^void history_list_history_window_make_update (HistoryListHistoryWindow* self) {$/;"	f
history_list_history_window_parent_class	_build_/default/extensions/history-list.c	/^static gpointer history_list_history_window_parent_class = NULL;$/;"	v	file:
history_list_history_window_real_clean_up	_build_/default/extensions/history-list.c	/^static void history_list_history_window_real_clean_up (HistoryListHistoryWindow* self) {$/;"	f	file:
history_list_history_window_real_make_update	_build_/default/extensions/history-list.c	/^static void history_list_history_window_real_make_update (HistoryListHistoryWindow* self) {$/;"	f	file:
history_list_history_window_real_walk	_build_/default/extensions/history-list.c	/^static void history_list_history_window_real_walk (HistoryListHistoryWindow* self, gint step) {$/;"	f	file:
history_list_history_window_set_browser	_build_/default/extensions/history-list.c	/^void history_list_history_window_set_browser (HistoryListHistoryWindow* self, MidoriBrowser* value) {$/;"	f
history_list_history_window_walk	_build_/default/extensions/history-list.c	/^void history_list_history_window_walk (HistoryListHistoryWindow* self, gint step) {$/;"	f
history_list_manager_activated	_build_/default/extensions/history-list.c	/^static void history_list_manager_activated (HistoryListManager* self, MidoriApp* app) {$/;"	f	file:
history_list_manager_browser_added	_build_/default/extensions/history-list.c	/^static void history_list_manager_browser_added (HistoryListManager* self, MidoriBrowser* browser) {$/;"	f	file:
history_list_manager_browser_removed	_build_/default/extensions/history-list.c	/^static void history_list_manager_browser_removed (HistoryListManager* self, MidoriBrowser* browser) {$/;"	f	file:
history_list_manager_class_init	_build_/default/extensions/history-list.c	/^static void history_list_manager_class_init (HistoryListManagerClass * klass) {$/;"	f	file:
history_list_manager_construct	_build_/default/extensions/history-list.c	/^HistoryListManager* history_list_manager_construct (GType object_type) {$/;"	f
history_list_manager_constructor	_build_/default/extensions/history-list.c	/^static GObject * history_list_manager_constructor (GType type, guint n_construct_properties, GObjectConstructParam * construct_properties) {$/;"	f	file:
history_list_manager_deactivated	_build_/default/extensions/history-list.c	/^static void history_list_manager_deactivated (HistoryListManager* self) {$/;"	f	file:
history_list_manager_finalize	_build_/default/extensions/history-list.c	/^static void history_list_manager_finalize (GObject* obj) {$/;"	f	file:
history_list_manager_get_type	_build_/default/extensions/history-list.c	/^GType history_list_manager_get_type (void) {$/;"	f
history_list_manager_instance_init	_build_/default/extensions/history-list.c	/^static void history_list_manager_instance_init (HistoryListManager * self) {$/;"	f	file:
history_list_manager_key_press	_build_/default/extensions/history-list.c	/^gboolean history_list_manager_key_press (HistoryListManager* self, GdkEventKey* event_key) {$/;"	f
history_list_manager_key_release	_build_/default/extensions/history-list.c	/^gboolean history_list_manager_key_release (HistoryListManager* self, GdkEventKey* event_key, MidoriBrowser* browser) {$/;"	f
history_list_manager_new	_build_/default/extensions/history-list.c	/^HistoryListManager* history_list_manager_new (void) {$/;"	f
history_list_manager_parent_class	_build_/default/extensions/history-list.c	/^static gpointer history_list_manager_parent_class = NULL;$/;"	v	file:
history_list_manager_preferences_changed_cb	_build_/default/extensions/history-list.c	/^void history_list_manager_preferences_changed_cb (HistoryListManager* self) {$/;"	f
history_list_manager_show_preferences	_build_/default/extensions/history-list.c	/^static void history_list_manager_show_preferences (HistoryListManager* self) {$/;"	f	file:
history_list_manager_special_function	_build_/default/extensions/history-list.c	/^void history_list_manager_special_function (HistoryListManager* self, GtkAction* action, MidoriBrowser* browser) {$/;"	f
history_list_manager_tab_added	_build_/default/extensions/history-list.c	/^static void history_list_manager_tab_added (HistoryListManager* self, MidoriBrowser* browser, MidoriView* view) {$/;"	f	file:
history_list_manager_tab_changed	_build_/default/extensions/history-list.c	/^static void history_list_manager_tab_changed (HistoryListManager* self, GObject* window, GParamSpec* pspec) {$/;"	f	file:
history_list_manager_tab_list_resort	_build_/default/extensions/history-list.c	/^static void history_list_manager_tab_list_resort (HistoryListManager* self, MidoriBrowser* browser, MidoriView* view) {$/;"	f	file:
history_list_manager_tab_removed	_build_/default/extensions/history-list.c	/^static void history_list_manager_tab_removed (HistoryListManager* self, MidoriBrowser* browser, MidoriView* view) {$/;"	f	file:
history_list_manager_walk	_build_/default/extensions/history-list.c	/^void history_list_manager_walk (HistoryListManager* self, GtkAction* action, MidoriBrowser* browser, GType type, gint step) {$/;"	f
history_list_new_tab_window_class_init	_build_/default/extensions/history-list.c	/^static void history_list_new_tab_window_class_init (HistoryListNewTabWindowClass * klass) {$/;"	f	file:
history_list_new_tab_window_construct	_build_/default/extensions/history-list.c	/^HistoryListNewTabWindow* history_list_new_tab_window_construct (GType object_type, MidoriBrowser* browser) {$/;"	f
history_list_new_tab_window_finalize	_build_/default/extensions/history-list.c	/^static void history_list_new_tab_window_finalize (GObject* obj) {$/;"	f	file:
history_list_new_tab_window_get_type	_build_/default/extensions/history-list.c	/^GType history_list_new_tab_window_get_type (void) {$/;"	f
history_list_new_tab_window_instance_init	_build_/default/extensions/history-list.c	/^static void history_list_new_tab_window_instance_init (HistoryListNewTabWindow * self) {$/;"	f	file:
history_list_new_tab_window_new	_build_/default/extensions/history-list.c	/^HistoryListNewTabWindow* history_list_new_tab_window_new (MidoriBrowser* browser) {$/;"	f
history_list_new_tab_window_parent_class	_build_/default/extensions/history-list.c	/^static gpointer history_list_new_tab_window_parent_class = NULL;$/;"	v	file:
history_list_new_tab_window_real_clean_up	_build_/default/extensions/history-list.c	/^static void history_list_new_tab_window_real_clean_up (HistoryListHistoryWindow* base) {$/;"	f	file:
history_list_new_tab_window_real_insert_rows	_build_/default/extensions/history-list.c	/^static void history_list_new_tab_window_real_insert_rows (HistoryListTabWindow* base, GtkListStore* store) {$/;"	f	file:
history_list_new_tab_window_real_walk	_build_/default/extensions/history-list.c	/^static void history_list_new_tab_window_real_walk (HistoryListHistoryWindow* base, gint step) {$/;"	f	file:
history_list_preferences_dialog_class_init	_build_/default/extensions/history-list.c	/^static void history_list_preferences_dialog_class_init (HistoryListPreferencesDialogClass * klass) {$/;"	f	file:
history_list_preferences_dialog_construct	_build_/default/extensions/history-list.c	/^HistoryListPreferencesDialog* history_list_preferences_dialog_construct (GType object_type, HistoryListManager* manager) {$/;"	f
history_list_preferences_dialog_create_widgets	_build_/default/extensions/history-list.c	/^static void history_list_preferences_dialog_create_widgets (HistoryListPreferencesDialog* self) {$/;"	f	file:
history_list_preferences_dialog_finalize	_build_/default/extensions/history-list.c	/^static void history_list_preferences_dialog_finalize (GObject* obj) {$/;"	f	file:
history_list_preferences_dialog_get_type	_build_/default/extensions/history-list.c	/^GType history_list_preferences_dialog_get_type (void) {$/;"	f
history_list_preferences_dialog_instance_init	_build_/default/extensions/history-list.c	/^static void history_list_preferences_dialog_instance_init (HistoryListPreferencesDialog * self) {$/;"	f	file:
history_list_preferences_dialog_new	_build_/default/extensions/history-list.c	/^HistoryListPreferencesDialog* history_list_preferences_dialog_new (HistoryListManager* manager) {$/;"	f
history_list_preferences_dialog_parent_class	_build_/default/extensions/history-list.c	/^static gpointer history_list_preferences_dialog_parent_class = NULL;$/;"	v	file:
history_list_preferences_dialog_response_cb	_build_/default/extensions/history-list.c	/^static void history_list_preferences_dialog_response_cb (HistoryListPreferencesDialog* self, GtkDialog* source, gint response_id) {$/;"	f	file:
history_list_tab_closing_behavior_get_type	_build_/default/extensions/history-list.c	/^GType history_list_tab_closing_behavior_get_type (void) {$/;"	f
history_list_tab_closing_behavior_model_get_type	_build_/default/extensions/history-list.c	/^GType history_list_tab_closing_behavior_model_get_type (void) {$/;"	f
history_list_tab_tree_cells_get_type	_build_/default/extensions/history-list.c	/^GType history_list_tab_tree_cells_get_type (void) {$/;"	f
history_list_tab_window_class_init	_build_/default/extensions/history-list.c	/^static void history_list_tab_window_class_init (HistoryListTabWindowClass * klass) {$/;"	f	file:
history_list_tab_window_construct	_build_/default/extensions/history-list.c	/^HistoryListTabWindow* history_list_tab_window_construct (GType object_type, MidoriBrowser* browser) {$/;"	f
history_list_tab_window_finalize	_build_/default/extensions/history-list.c	/^static void history_list_tab_window_finalize (GObject* obj) {$/;"	f	file:
history_list_tab_window_get_type	_build_/default/extensions/history-list.c	/^GType history_list_tab_window_get_type (void) {$/;"	f
history_list_tab_window_insert_rows	_build_/default/extensions/history-list.c	/^void history_list_tab_window_insert_rows (HistoryListTabWindow* self, GtkListStore* store) {$/;"	f
history_list_tab_window_instance_init	_build_/default/extensions/history-list.c	/^static void history_list_tab_window_instance_init (HistoryListTabWindow * self) {$/;"	f	file:
history_list_tab_window_new	_build_/default/extensions/history-list.c	/^HistoryListTabWindow* history_list_tab_window_new (MidoriBrowser* browser) {$/;"	f
history_list_tab_window_parent_class	_build_/default/extensions/history-list.c	/^static gpointer history_list_tab_window_parent_class = NULL;$/;"	v	file:
history_list_tab_window_real_clean_up	_build_/default/extensions/history-list.c	/^static void history_list_tab_window_real_clean_up (HistoryListHistoryWindow* base) {$/;"	f	file:
history_list_tab_window_real_insert_rows	_build_/default/extensions/history-list.c	/^static void history_list_tab_window_real_insert_rows (HistoryListTabWindow* self, GtkListStore* store) {$/;"	f	file:
history_list_tab_window_real_make_update	_build_/default/extensions/history-list.c	/^static void history_list_tab_window_real_make_update (HistoryListHistoryWindow* base) {$/;"	f	file:
history_list_tab_window_store_append_row	_build_/default/extensions/history-list.c	/^void history_list_tab_window_store_append_row (HistoryListTabWindow* self, GPtrArray* list, GtkListStore* store, GtkTreeIter* iter) {$/;"	f
history_window	_build_/default/extensions/history-list.c	/^	HistoryListHistoryWindow* history_window;$/;"	m	struct:_HistoryListManager	file:
hit_test	midori/midori-view.c	/^    WebKitHitTestResult* hit_test;$/;"	m	struct:_MidoriView	file:
hjkl	data/faq.html	/^<h3 class="sectionedit10"><a name="hjkl" id="hjkl">HJKL<\/a><\/h3>$/;"	a
hjkl	debian/midori/usr/share/doc/midori/faq.html	/^<h3 class="sectionedit10"><a name="hjkl" id="hjkl">HJKL<\/a><\/h3>$/;"	a
hjkl	debian/tmp/usr/share/doc/midori/faq.html	/^<h3 class="sectionedit10"><a name="hjkl" id="hjkl">HJKL<\/a><\/h3>$/;"	a
hl_manager	_build_/default/extensions/history-list.c	/^	HistoryListManager* hl_manager;$/;"	m	struct:_HistoryListPreferencesDialog	file:
homepage	midori/midori-websettings.c	/^    gchar* homepage;$/;"	m	struct:_MidoriWebSettings	file:
horizontal_deceleration	katze/katze-scrolled.c	/^    gdouble horizontal_deceleration;$/;"	m	struct:_KatzeScrolledPrivate	file:
horizontal_speed	katze/katze-scrolled.c	/^    gdouble horizontal_speed;$/;"	m	struct:_KatzeScrolledPrivate	file:
hostname	midori/socket.c	/^	gchar *hostname;$/;"	m	struct:_SockConnectData	file:
hostname	midori/socket.c	/^	gchar *hostname;$/;"	m	struct:_SockLookupData	file:
hostname	midori/socket.h	/^	gchar *hostname;$/;"	m	struct:_SockInfo
hovered	midori/gtkiconentry.c	/^  gboolean hovered;$/;"	m	struct:__anon54	file:
how_can_i_reload_and_bypass_the_cache	data/faq.html	/^<h4><a name="how_can_i_reload_and_bypass_the_cache" id="how_can_i_reload_and_bypass_the_cache">How can I reload and bypass the cache?<\/a><\/h4>$/;"	a
how_can_i_reload_and_bypass_the_cache	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="how_can_i_reload_and_bypass_the_cache" id="how_can_i_reload_and_bypass_the_cache">How can I reload and bypass the cache?<\/a><\/h4>$/;"	a
how_can_i_reload_and_bypass_the_cache	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="how_can_i_reload_and_bypass_the_cache" id="how_can_i_reload_and_bypass_the_cache">How can I reload and bypass the cache?<\/a><\/h4>$/;"	a
how_do_i_get_rid_of_the_menubar	data/faq.html	/^<h4><a name="how_do_i_get_rid_of_the_menubar" id="how_do_i_get_rid_of_the_menubar">How do I get rid of the menubar?<\/a><\/h4>$/;"	a
how_do_i_get_rid_of_the_menubar	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="how_do_i_get_rid_of_the_menubar" id="how_do_i_get_rid_of_the_menubar">How do I get rid of the menubar?<\/a><\/h4>$/;"	a
how_do_i_get_rid_of_the_menubar	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="how_do_i_get_rid_of_the_menubar" id="how_do_i_get_rid_of_the_menubar">How do I get rid of the menubar?<\/a><\/h4>$/;"	a
how_do_i_make_tabs_pinnedstickyminimized	data/faq.html	/^<h4><a name="how_do_i_make_tabs_pinnedstickyminimized" id="how_do_i_make_tabs_pinnedstickyminimized">How do I make tabs pinned\/ sticky\/ minimized?<\/a><\/h4>$/;"	a
how_do_i_make_tabs_pinnedstickyminimized	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="how_do_i_make_tabs_pinnedstickyminimized" id="how_do_i_make_tabs_pinnedstickyminimized">How do I make tabs pinned\/ sticky\/ minimized?<\/a><\/h4>$/;"	a
how_do_i_make_tabs_pinnedstickyminimized	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="how_do_i_make_tabs_pinnedstickyminimized" id="how_do_i_make_tabs_pinnedstickyminimized">How do I make tabs pinned\/ sticky\/ minimized?<\/a><\/h4>$/;"	a
how_to_install_a_user_style	data/faq.html	/^<h4><a name="how_to_install_a_user_style" id="how_to_install_a_user_style">How to install a user style<\/a><\/h4>$/;"	a
how_to_install_a_user_style	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="how_to_install_a_user_style" id="how_to_install_a_user_style">How to install a user style<\/a><\/h4>$/;"	a
how_to_install_a_user_style	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="how_to_install_a_user_style" id="how_to_install_a_user_style">How to install a user style<\/a><\/h4>$/;"	a
how_to_install_a_user_style_before_midori_0020	data/faq.html	/^<h4><a name="how_to_install_a_user_style_before_midori_0020" id="how_to_install_a_user_style_before_midori_0020">How to install a user style before Midori 0.0.20<\/a><\/h4>$/;"	a
how_to_install_a_user_style_before_midori_0020	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="how_to_install_a_user_style_before_midori_0020" id="how_to_install_a_user_style_before_midori_0020">How to install a user style before Midori 0.0.20<\/a><\/h4>$/;"	a
how_to_install_a_user_style_before_midori_0020	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="how_to_install_a_user_style_before_midori_0020" id="how_to_install_a_user_style_before_midori_0020">How to install a user style before Midori 0.0.20<\/a><\/h4>$/;"	a
how_to_install_a_userscript	data/faq.html	/^<h4><a name="how_to_install_a_userscript" id="how_to_install_a_userscript">How to install a UserScript<\/a><\/h4>$/;"	a
how_to_install_a_userscript	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="how_to_install_a_userscript" id="how_to_install_a_userscript">How to install a UserScript<\/a><\/h4>$/;"	a
how_to_install_a_userscript	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="how_to_install_a_userscript" id="how_to_install_a_userscript">How to install a UserScript<\/a><\/h4>$/;"	a
how_to_pronounce_midori_and_what_does_the_name_mean	data/faq.html	/^<h4><a name="how_to_pronounce_midori_and_what_does_the_name_mean" id="how_to_pronounce_midori_and_what_does_the_name_mean">How to pronounce Midori and what does the name mean?<\/a><\/h4>$/;"	a
how_to_pronounce_midori_and_what_does_the_name_mean	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="how_to_pronounce_midori_and_what_does_the_name_mean" id="how_to_pronounce_midori_and_what_does_the_name_mean">How to pronounce Midori and what does the name mean?<\/a><\/h4>$/;"	a
how_to_pronounce_midori_and_what_does_the_name_mean	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="how_to_pronounce_midori_and_what_does_the_name_mean" id="how_to_pronounce_midori_and_what_does_the_name_mean">How to pronounce Midori and what does the name mean?<\/a><\/h4>$/;"	a
hpaned	midori/midori-panedaction.c	/^    GtkWidget* hpaned;$/;"	m	struct:_MidoriPanedAction	file:
html5_video_doesn_t_play	data/faq.html	/^<h4><a name="html5_video_doesn_t_play" id="html5_video_doesn_t_play">HTML5 Video doesn&#039;t play<\/a><\/h4>$/;"	a
html5_video_doesn_t_play	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="html5_video_doesn_t_play" id="html5_video_doesn_t_play">HTML5 Video doesn&#039;t play<\/a><\/h4>$/;"	a
html5_video_doesn_t_play	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="html5_video_doesn_t_play" id="html5_video_doesn_t_play">HTML5 Video doesn&#039;t play<\/a><\/h4>$/;"	a
http_accept_language	midori/midori-websettings.c	/^    gchar* http_accept_language;$/;"	m	struct:_MidoriWebSettings	file:
http_auth	katze/katze-http-auth.c	/^    KatzeHttpAuth* http_auth;$/;"	m	struct:__anon29	file:
http_proxy	midori/midori-websettings.c	/^    gchar* http_proxy;$/;"	m	struct:_MidoriWebSettings	file:
http_proxy_port	midori/midori-websettings.c	/^    gint http_proxy_port;$/;"	m	struct:_MidoriWebSettings	file:
https_urls_won_t_load	data/faq.html	/^<h4><a name="https_urls_won_t_load" id="https_urls_won_t_load">HTTPS URLS won&#039;t load<\/a><\/h4>$/;"	a
https_urls_won_t_load	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="https_urls_won_t_load" id="https_urls_won_t_load">HTTPS URLS won&#039;t load<\/a><\/h4>$/;"	a
https_urls_won_t_load	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="https_urls_won_t_load" id="https_urls_won_t_load">HTTPS URLS won&#039;t load<\/a><\/h4>$/;"	a
i	tools/check-style	/^                    i = i -1$/;"	v
i	tools/check-style	/^                    i = int (line.split (' ')[2].split (',')[0][1:]) - 1$/;"	v
i	tools/check-style	/^        i = 0$/;"	v
iapply_intltool_in_f	waf-modules/wafadmin/Tools/intltool.py	/^def iapply_intltool_in_f(self):$/;"	f
icon	midori/midori-view.c	/^    GdkPixbuf* icon;$/;"	m	struct:_MidoriView	file:
icon_file	midori/midori-view.c	/^    gchar* icon_file;$/;"	m	struct:__anon45	file:
icon_name	katze/katze-throbber.c	/^    gchar* icon_name;$/;"	m	struct:_KatzeThrobber	file:
icon_name	midori/gtkiconentry.c	/^  gchar *icon_name;$/;"	m	struct:__anon54	file:
icon_released_id	midori/gtkiconentry.c	/^  gulong icon_released_id;$/;"	m	struct:_GtkIconEntryPrivate	file:
icon_size	katze/katze-throbber.c	/^    GtkIconSize icon_size;$/;"	m	struct:_KatzeThrobber	file:
icon_theme_changed	katze/katze-throbber.c	/^icon_theme_changed (KatzeThrobber* throbber)$/;"	f	file:
icon_theme_changed	midori/gtkiconentry.c	/^icon_theme_changed (GtkIconEntry *entry)$/;"	f	file:
icon_uri	midori/midori-view.c	/^    gchar* icon_uri;$/;"	m	struct:_MidoriView	file:
icon_uri	midori/midori-view.c	/^    gchar* icon_uri;$/;"	m	struct:__anon45	file:
icons	midori/gtkiconentry.c	/^  EntryIconInfo icons[MAX_ICONS];$/;"	m	struct:_GtkIconEntryPrivate	file:
id	midori/socket.c	/^	gint id;$/;"	m	struct:_SockConnectData	file:
ident_string	midori/midori-websettings.c	/^    gchar* ident_string;$/;"	m	struct:_MidoriWebSettings	file:
identify_as	midori/midori-websettings.c	/^    MidoriIdentity identify_as : 3;$/;"	m	struct:_MidoriWebSettings	file:
ignoreNextChange	_build_/default/extensions/history-list.c	/^	gboolean ignoreNextChange;$/;"	m	struct:_HistoryListManager	file:
ignore_changed_count	extensions/cookie-manager/cookie-manager.c	/^	gint ignore_changed_count;$/;"	m	struct:_CookieManagerPrivate	file:
ignore_changed_filter	extensions/cookie-manager/cookie-manager-page.c	/^	gboolean ignore_changed_filter;$/;"	m	struct:_CookieManagerPagePrivate	file:
ignored	waf-modules/wafadmin/Tools/preproc.py	/^ignored='i'$/;"	v
includes	extensions/addons.c	/^    GSList* includes;$/;"	m	struct:AddonElement	file:
includes	waf-modules/wafadmin/Tools/python.py	/^	includes=[]$/;"	v
incstr	waf-modules/wafadmin/Tools/python.py	/^				incstr=incstr[2:]$/;"	v
index	katze/katze-throbber.c	/^    gint index;$/;"	m	struct:_KatzeThrobber	file:
indicator	waf-modules/wafadmin/Utils.py	/^indicator=is_win32 and'\\x1b[A\\x1b[K%s%s%s\\r'or'\\x1b[K%s%s%s\\r'$/;"	v
info	waf-modules/wafadmin/Logs.py	/^info=logging.info$/;"	v
infos	toolbars/midori-transferbar.c	/^    GList* infos;$/;"	m	struct:_MidoriTransferbar	file:
initSuggestions	data/autosuggestcontrol.js	/^function initSuggestions () {$/;"	f
initSuggestions	debian/midori/usr/share/midori/res/autosuggestcontrol.js	/^function initSuggestions () {$/;"	f
initSuggestions	debian/tmp/usr/share/midori/res/autosuggestcontrol.js	/^function initSuggestions () {$/;"	f
init_cc	waf-modules/wafadmin/Tools/cc.py	/^def init_cc(self):$/;"	f
init_cmd_output	waf-modules/wafadmin/Tools/misc.py	/^def init_cmd_output(self):$/;"	f
init_cs	waf-modules/wafadmin/Tools/cs.py	/^def init_cs(self):$/;"	f
init_cxx	waf-modules/wafadmin/Tools/cxx.py	/^def init_cxx(self):$/;"	f
init_d	waf-modules/wafadmin/Tools/d.py	/^def init_d(self):$/;"	f
init_envs_ml	waf-modules/wafadmin/Tools/ocaml.py	/^def init_envs_ml(self):$/;"	f
init_gnome_doc	waf-modules/wafadmin/Tools/gnome.py	/^def init_gnome_doc(self):$/;"	f
init_log	waf-modules/wafadmin/Logs.py	/^def init_log():$/;"	f
init_lua	waf-modules/wafadmin/Tools/lua.py	/^def init_lua(self):$/;"	f
init_ml	waf-modules/wafadmin/Tools/ocaml.py	/^def init_ml(self):$/;"	f
init_msgfmt	waf-modules/wafadmin/Tools/kde4.py	/^def init_msgfmt(self):$/;"	f
init_perlext	waf-modules/wafadmin/Tools/perl.py	/^def init_perlext(self):$/;"	f
init_py	waf-modules/wafadmin/Tools/python.py	/^def init_py(self):$/;"	f
init_pyembed	waf-modules/wafadmin/Tools/python.py	/^def init_pyembed(self):$/;"	f
init_pyext	waf-modules/wafadmin/Tools/python.py	/^def init_pyext(self):$/;"	f
init_rubyext	waf-modules/wafadmin/Tools/ruby.py	/^def init_rubyext(self):$/;"	f
init_variants	waf-modules/wafadmin/Build.py	/^	def init_variants(self):$/;"	m	class:BuildContext
init_xml_to	waf-modules/wafadmin/Tools/gnome.py	/^def init_xml_to(self):$/;"	f
input_dir	waf-modules/wafadmin/Tools/misc.py	/^class input_dir(cmd_dir_arg):$/;"	c
input_file	waf-modules/wafadmin/Tools/misc.py	/^class input_file(cmd_arg):$/;"	c
input_path	waf-modules/wafadmin/Tools/misc.py	/^		def input_path(node,template):$/;"	f	function:command_output.run
inputs	waf-modules/wafadmin/Tools/misc.py	/^	inputs=[]$/;"	v
insensitive	midori/gtkiconentry.c	/^  gboolean insensitive;$/;"	m	struct:__anon54	file:
insert_rows	_build_/default/extensions/history-list.c	/^	void (*insert_rows) (HistoryListTabWindow* self, GtkListStore* store);$/;"	m	struct:_HistoryListTabWindowClass	file:
inspector	midori/midori-browser.c	/^    GtkWidget* inspector;$/;"	m	struct:_MidoriBrowser	file:
inspector_view	midori/midori-browser.c	/^    GtkWidget* inspector_view;$/;"	m	struct:_MidoriBrowser	file:
inst_py	waf-modules/wafadmin/Tools/python.py	/^	def inst_py(ctx):$/;"	f	function:process_py
install	waf-modules/wafadmin/Build.py	/^	def install(self):$/;"	m	class:BuildContext
install	waf-modules/wafadmin/Scripting.py	/^def install(bld):$/;"	f
install	waf-modules/wafadmin/Task.py	/^	def install(self):$/;"	m	class:TaskBase
install	waf-modules/wafadmin/Tools/vala.py	/^	def install(self):$/;"	m	class:valac_task
install_as	waf-modules/wafadmin/Build.py	/^	def install_as(self,path,srcfile,env=None,chmod=O644,cwd=None):$/;"	m	class:BuildContext
install_as	waf-modules/wafadmin/Build.py	/^	install_as=group_method(install_as)$/;"	v	class:BuildContext
install_dir	waf-modules/wafadmin/Build.py	/^	def install_dir(self,path,env=None):$/;"	m	class:BuildContext
install_files	waf-modules/wafadmin/Build.py	/^	def install_files(self,path,files,env=None,chmod=O644,relative_trick=False,cwd=None):$/;"	m	class:BuildContext
install_files	waf-modules/wafadmin/Build.py	/^	install_files=group_method(install_files)$/;"	v	class:BuildContext
install_path	waf-modules/wafadmin/TaskGen.py	/^	install_path=property(get_inst_path,set_inst_path)$/;"	v	class:task_gen
install_pyfile	waf-modules/wafadmin/Tools/python.py	/^def install_pyfile(self,node):$/;"	f
install_result	waf-modules/wafadmin/Tools/gnome.py	/^	def install_result(task):$/;"	f	function:apply_gnome_sgml2man
install_translation	waf-modules/wafadmin/Tools/intltool.py	/^	def install_translation(task):$/;"	f	function:apply_intltool_po
instance	midori/midori-app.c	/^    MidoriAppInstance instance;$/;"	m	struct:_MidoriApp	file:
interval	katze/katze-scrolled.c	/^    guint interval;$/;"	m	struct:_KatzeScrolledPrivate	file:
intltool_in_taskgen	waf-modules/wafadmin/Tools/intltool.py	/^class intltool_in_taskgen(TaskGen.task_gen):$/;"	c
intltool_po_taskgen	waf-modules/wafadmin/Tools/intltool.py	/^class intltool_po_taskgen(TaskGen.task_gen):$/;"	c
io_tag	midori/socket.c	/^	guint io_tag;$/;"	m	struct:_SockConnectData	file:
io_tag	midori/socket.c	/^	guint io_tag;$/;"	m	struct:_SockLookupData	file:
io_timeout	midori/socket.c	/^static guint io_timeout = 60;$/;"	v	file:
isD	waf-modules/wafadmin/Tools/ccroot.py	/^		def isD(var):$/;"	f	function:get_cc_version
isT	waf-modules/wafadmin/Tools/ccroot.py	/^		def isT(var):$/;"	f	function:get_cc_version
is_abitag	waf-modules/wafadmin/3rdparty/boost.py	/^is_abitag=re.compile('^[sgydpn]+$')$/;"	v
is_child_of	waf-modules/wafadmin/Node.py	/^	def is_child_of(self,node):$/;"	m	class:Node
is_defined	waf-modules/wafadmin/Tools/config_c.py	/^def is_defined(self,key):$/;"	f
is_dirty	_build_/default/extensions/history-list.c	/^	gboolean is_dirty;$/;"	m	struct:_HistoryListTabWindow	file:
is_install	waf-modules/wafadmin/Options.py	/^is_install=False$/;"	v
is_nonblocking_mode	midori/socket.c	/^static gboolean is_nonblocking_mode(gint fd)$/;"	f	file:
is_prune	waf-modules/wafadmin/Node.py	/^		def is_prune(node,name):$/;"	f	function:Node.find_iter
is_pythontag	waf-modules/wafadmin/3rdparty/boost.py	/^is_pythontag=re.compile('^py[0-9]{2}$')$/;"	v
is_running	extensions/feed-panel/main.c	/^    gboolean is_running;$/;"	m	struct:__anon11	file:
is_threadingtag	waf-modules/wafadmin/3rdparty/boost.py	/^is_threadingtag=re.compile('^mt$')$/;"	v
is_toolsettag	waf-modules/wafadmin/3rdparty/boost.py	/^is_toolsettag=re.compile('^(acc|borland|como|cw|dmc|darwin|gcc|hp_cxx|intel|kylix|vc|mgw|qcc|sun|vacpp)\\d*$')$/;"	v
is_versiontag	waf-modules/wafadmin/3rdparty/boost.py	/^is_versiontag=re.compile('^\\d+_\\d+_?\\d*$')$/;"	v
isatty	waf-modules/wafadmin/ansiterm.py	/^		def isatty(self):$/;"	m	class:AnsiTerm
isvalid	extensions/feed-panel/feed-parse.h	/^    gboolean (*isvalid)   (struct _FeedParser* fparser);$/;"	m	struct:_FeedParser
item	extensions/feed-panel/feed-parse.h	/^    KatzeItem*  item;$/;"	m	struct:_FeedParser
item	midori/midori-view.c	/^    KatzeItem* item;$/;"	m	struct:_MidoriView	file:
items	katze/katze-array.c	/^    GList* items;$/;"	m	struct:_KatzeArray	file:
iter	waf-modules/wafadmin/Tools/d.py	/^	def iter(self,node):$/;"	m	class:d_parser
jar	extensions/cookie-manager/cookie-manager.c	/^	SoupCookieJar *jar;$/;"	m	struct:_CookieManagerPrivate	file:
jar	katze/katze-http-cookies-sqlite.c	/^    SoupCookieJar* jar;$/;"	m	struct:_KatzeHttpCookiesSqlite	file:
jar	katze/katze-http-cookies.c	/^    SoupCookieJar* jar;$/;"	m	struct:_KatzeHttpCookies	file:
jar_files	waf-modules/wafadmin/Tools/javaw.py	/^def jar_files(self):$/;"	f
java_doesn_t_work_applets_don_t_show_up	data/faq.html	/^<h4><a name="java_doesn_t_work_applets_don_t_show_up" id="java_doesn_t_work_applets_don_t_show_up">Java doesn&#039;t work, applets don&#039;t show up<\/a><\/h4>$/;"	a
java_doesn_t_work_applets_don_t_show_up	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="java_doesn_t_work_applets_don_t_show_up" id="java_doesn_t_work_applets_don_t_show_up">Java doesn&#039;t work, applets don&#039;t show up<\/a><\/h4>$/;"	a
java_doesn_t_work_applets_don_t_show_up	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="java_doesn_t_work_applets_don_t_show_up" id="java_doesn_t_work_applets_don_t_show_up">Java doesn&#039;t work, applets don&#039;t show up<\/a><\/h4>$/;"	a
jmpenv	midori/socket.c	/^static sigjmp_buf jmpenv;$/;"	v	file:
join	waf	/^join = os.path.join$/;"	v
join	waf-unpacked	/^join = os.path.join$/;"	v
js_metadata_from_file	extensions/addons.c	/^js_metadata_from_file (const gchar* filename,$/;"	f	file:
jsforms	extensions/formhistory.c	/^static gchar* jsforms;$/;"	v	file:
kalistglobal	katze/katze-array.c	/^GList* kalistglobal;$/;"	v
katze_app_info_get_all_for_category	katze/katze-utils.c	/^katze_app_info_get_all_for_category (const gchar* category)$/;"	f	file:
katze_app_info_get_commandline	katze/katze-utils.c	/^katze_app_info_get_commandline (GAppInfo* info)$/;"	f	file:
katze_array_action_activate	katze/katze-arrayaction.c	/^katze_array_action_activate (GtkAction* action)$/;"	f	file:
katze_array_action_activate_item	katze/katze-arrayaction.c	/^katze_array_action_activate_item (KatzeArrayAction* action,$/;"	f	file:
katze_array_action_class_init	katze/katze-arrayaction.c	/^katze_array_action_class_init (KatzeArrayActionClass* class)$/;"	f	file:
katze_array_action_connect_proxy	katze/katze-arrayaction.c	/^katze_array_action_connect_proxy (GtkAction* action,$/;"	f	file:
katze_array_action_create_menu_item	katze/katze-arrayaction.c	/^katze_array_action_create_menu_item (GtkAction* action)$/;"	f	file:
katze_array_action_create_tool_item	katze/katze-arrayaction.c	/^katze_array_action_create_tool_item (GtkAction* action)$/;"	f	file:
katze_array_action_create_tool_item_for	katze/katze-arrayaction.c	/^katze_array_action_create_tool_item_for (KatzeArrayAction* array_action,$/;"	f
katze_array_action_disconnect_proxy	katze/katze-arrayaction.c	/^katze_array_action_disconnect_proxy (GtkAction* action,$/;"	f	file:
katze_array_action_finalize	katze/katze-arrayaction.c	/^katze_array_action_finalize (GObject* object)$/;"	f	file:
katze_array_action_generate_menu	katze/katze-arrayaction.c	/^katze_array_action_generate_menu (KatzeArrayAction* array_action,$/;"	f
katze_array_action_get_array	katze/katze-arrayaction.c	/^katze_array_action_get_array (KatzeArrayAction* array_action)$/;"	f
katze_array_action_get_property	katze/katze-arrayaction.c	/^katze_array_action_get_property (GObject*    object,$/;"	f	file:
katze_array_action_init	katze/katze-arrayaction.c	/^katze_array_action_init (KatzeArrayAction* array_action)$/;"	f	file:
katze_array_action_item_notify_cb	katze/katze-arrayaction.c	/^katze_array_action_item_notify_cb (KatzeItem*   item,$/;"	f	file:
katze_array_action_label_notify_cb	katze/katze-arrayaction.c	/^katze_array_action_label_notify_cb (GtkToolButton* item,$/;"	f	file:
katze_array_action_menu_activate_cb	katze/katze-arrayaction.c	/^katze_array_action_menu_activate_cb  (GtkWidget*        proxy,$/;"	f	file:
katze_array_action_menu_button_press_cb	katze/katze-arrayaction.c	/^katze_array_action_menu_button_press_cb (GtkWidget*        proxy,$/;"	f	file:
katze_array_action_menu_deactivate_cb	katze/katze-arrayaction.c	/^katze_array_action_menu_deactivate_cb (GtkWidget* menu,$/;"	f	file:
katze_array_action_menu_item_select_cb	katze/katze-arrayaction.c	/^katze_array_action_menu_item_select_cb (GtkWidget*        proxy,$/;"	f	file:
katze_array_action_proxy_clicked_cb	katze/katze-arrayaction.c	/^katze_array_action_proxy_clicked_cb (GtkWidget*        proxy,$/;"	f	file:
katze_array_action_proxy_create_menu_proxy_cb	katze/katze-arrayaction.c	/^katze_array_action_proxy_create_menu_proxy_cb (GtkWidget* proxy,$/;"	f	file:
katze_array_action_set_array	katze/katze-arrayaction.c	/^katze_array_action_set_array (KatzeArrayAction* array_action,$/;"	f
katze_array_action_set_property	katze/katze-arrayaction.c	/^katze_array_action_set_property (GObject*      object,$/;"	f	file:
katze_array_action_toolitem_destroy_cb	katze/katze-arrayaction.c	/^katze_array_action_toolitem_destroy_cb (GtkToolItem* toolitem,$/;"	f	file:
katze_array_add_item	katze/katze-array.c	/^katze_array_add_item (KatzeArray* array,$/;"	f
katze_array_class_init	katze/katze-array.c	/^katze_array_class_init (KatzeArrayClass* class)$/;"	f	file:
katze_array_clear	katze/katze-array.c	/^katze_array_clear (KatzeArray* array)$/;"	f
katze_array_finalize	katze/katze-array.c	/^katze_array_finalize (GObject* object)$/;"	f	file:
katze_array_find_token	katze/katze-array.c	/^katze_array_find_token (KatzeArray*  array,$/;"	f
katze_array_find_uri	katze/katze-array.c	/^katze_array_find_uri (KatzeArray*  array,$/;"	f
katze_array_from_netscape_file	midori/midori-array.c	/^katze_array_from_netscape_file (KatzeArray* array,$/;"	f	file:
katze_array_from_opera_file	midori/midori-array.c	/^katze_array_from_opera_file (KatzeArray* array,$/;"	f	file:
katze_array_from_sqlite	midori/midori-array.c	/^katze_array_from_sqlite (sqlite3*     db,$/;"	f
katze_array_from_statement	midori/midori-array.c	/^katze_array_from_statement (sqlite3_stmt* stmt)$/;"	f
katze_array_from_xmlDocPtr	midori/midori-array.c	/^katze_array_from_xmlDocPtr (KatzeArray* array,$/;"	f	file:
katze_array_from_xmlNodePtr	midori/midori-array.c	/^katze_array_from_xmlNodePtr (xmlNodePtr cur)$/;"	f	file:
katze_array_get_item_index	katze/katze-array.c	/^katze_array_get_item_index (KatzeArray* array,$/;"	f
katze_array_get_items	katze/katze-array.c	/^katze_array_get_items (KatzeArray* array)$/;"	f
katze_array_get_length	katze/katze-array.c	/^katze_array_get_length (KatzeArray* array)$/;"	f
katze_array_get_nth_item	katze/katze-array.c	/^katze_array_get_nth_item (KatzeArray* array,$/;"	f
katze_array_init	katze/katze-array.c	/^katze_array_init (KatzeArray* array)$/;"	f	file:
katze_array_is_a	katze/katze-array.c	/^katze_array_is_a (KatzeArray* array,$/;"	f
katze_array_is_empty	katze/katze-array.c	/^katze_array_is_empty (KatzeArray* array)$/;"	f
katze_array_move_item	katze/katze-array.c	/^katze_array_move_item (KatzeArray* array,$/;"	f
katze_array_new	katze/katze-array.c	/^katze_array_new (GType type)$/;"	f
katze_array_peek_items	katze/katze-array.c	/^katze_array_peek_items (KatzeArray* array)$/;"	f
katze_array_remove_item	katze/katze-array.c	/^katze_array_remove_item (KatzeArray* array,$/;"	f
katze_array_to_netscape_html	midori/midori-array.c	/^katze_array_to_netscape_html (KatzeArray* array,$/;"	f	file:
katze_array_to_xbel	midori/midori-array.c	/^katze_array_to_xbel (KatzeArray* array,$/;"	f	file:
katze_array_update	katze/katze-array.c	/^katze_array_update (KatzeArray* array)$/;"	f
katze_assert_cmpstrv	tests/extensions.c	/^katze_assert_cmpstrv (gchar** values1,$/;"	f	file:
katze_assert_str_equal	katze/katze-utils.c	/^katze_assert_str_equal (const gchar* input,$/;"	f
katze_assign	katze/katze-utils.h	38;"	d
katze_bookmark_populate_tree_view	katze/katze-utils.c	/^katze_bookmark_populate_tree_view (KatzeArray*   array,$/;"	f
katze_hig_frame_new	katze/katze-preferences.c	/^katze_hig_frame_new (const gchar* title)$/;"	f	file:
katze_http_auth_attach	katze/katze-http-auth.c	/^katze_http_auth_attach (SoupSessionFeature* feature,$/;"	f	file:
katze_http_auth_class_init	katze/katze-http-auth.c	/^katze_http_auth_class_init (KatzeHttpAuthClass* class)$/;"	f	file:
katze_http_auth_detach	katze/katze-http-auth.c	/^katze_http_auth_detach (SoupSessionFeature* feature,$/;"	f	file:
katze_http_auth_finalize	katze/katze-http-auth.c	/^katze_http_auth_finalize (GObject* object)$/;"	f	file:
katze_http_auth_get_property	katze/katze-http-auth.c	/^katze_http_auth_get_property (GObject*    object,$/;"	f	file:
katze_http_auth_init	katze/katze-http-auth.c	/^katze_http_auth_init (KatzeHttpAuth* http_auth)$/;"	f	file:
katze_http_auth_login_free	katze/katze-http-auth.c	/^katze_http_auth_login_free (KatzeHttpAuthLogin* login)$/;"	f	file:
katze_http_auth_session_authenticate_cb	katze/katze-http-auth.c	/^katze_http_auth_session_authenticate_cb (SoupSession*   session,$/;"	f	file:
katze_http_auth_session_feature_iface_init	katze/katze-http-auth.c	/^katze_http_auth_session_feature_iface_init (SoupSessionFeatureInterface *iface,$/;"	f	file:
katze_http_auth_session_request_queued_cb	katze/katze-http-auth.c	/^katze_http_auth_session_request_queued_cb (SoupSession*   session,$/;"	f	file:
katze_http_auth_set_filename	katze/katze-http-auth.c	/^katze_http_auth_set_filename (KatzeHttpAuth* http_auth,$/;"	f	file:
katze_http_auth_set_property	katze/katze-http-auth.c	/^katze_http_auth_set_property (GObject*      object,$/;"	f	file:
katze_http_auth_soup_auth_get_hash	katze/katze-http-auth.c	/^katze_http_auth_soup_auth_get_hash (SoupAuth* auth)$/;"	f	file:
katze_http_cookies_attach	katze/katze-http-cookies.c	/^katze_http_cookies_attach (SoupSessionFeature* feature,$/;"	f	file:
katze_http_cookies_class_init	katze/katze-http-cookies.c	/^katze_http_cookies_class_init (KatzeHttpCookiesClass* class)$/;"	f	file:
katze_http_cookies_detach	katze/katze-http-cookies.c	/^katze_http_cookies_detach (SoupSessionFeature* feature,$/;"	f	file:
katze_http_cookies_finalize	katze/katze-http-cookies.c	/^katze_http_cookies_finalize (GObject* object)$/;"	f	file:
katze_http_cookies_init	katze/katze-http-cookies.c	/^katze_http_cookies_init (KatzeHttpCookies* http_cookies)$/;"	f	file:
katze_http_cookies_jar_changed_cb	katze/katze-http-cookies.c	/^katze_http_cookies_jar_changed_cb (SoupCookieJar*    jar,$/;"	f	file:
katze_http_cookies_session_feature_iface_init	katze/katze-http-cookies.c	/^katze_http_cookies_session_feature_iface_init (SoupSessionFeatureInterface *iface,$/;"	f	file:
katze_http_cookies_sqlite_attach	katze/katze-http-cookies-sqlite.c	/^katze_http_cookies_sqlite_attach (SoupSessionFeature* feature,$/;"	f	file:
katze_http_cookies_sqlite_class_init	katze/katze-http-cookies-sqlite.c	/^katze_http_cookies_sqlite_class_init (KatzeHttpCookiesSqliteClass* class)$/;"	f	file:
katze_http_cookies_sqlite_detach	katze/katze-http-cookies-sqlite.c	/^katze_http_cookies_sqlite_detach (SoupSessionFeature* feature,$/;"	f	file:
katze_http_cookies_sqlite_finalize	katze/katze-http-cookies-sqlite.c	/^katze_http_cookies_sqlite_finalize (GObject* object)$/;"	f	file:
katze_http_cookies_sqlite_init	katze/katze-http-cookies-sqlite.c	/^katze_http_cookies_sqlite_init (KatzeHttpCookiesSqlite* http_cookies)$/;"	f	file:
katze_http_cookies_sqlite_jar_changed_cb	katze/katze-http-cookies-sqlite.c	/^katze_http_cookies_sqlite_jar_changed_cb (SoupCookieJar*    jar,$/;"	f	file:
katze_http_cookies_sqlite_load	katze/katze-http-cookies-sqlite.c	/^katze_http_cookies_sqlite_load (KatzeHttpCookiesSqlite* http_cookies)$/;"	f	file:
katze_http_cookies_sqlite_open_db	katze/katze-http-cookies-sqlite.c	/^katze_http_cookies_sqlite_open_db (KatzeHttpCookiesSqlite* http_cookies)$/;"	f	file:
katze_http_cookies_sqlite_session_feature_iface_init	katze/katze-http-cookies-sqlite.c	/^katze_http_cookies_sqlite_session_feature_iface_init (SoupSessionFeatureInterface *iface,$/;"	f	file:
katze_http_cookies_update_jar	katze/katze-http-cookies.c	/^katze_http_cookies_update_jar (KatzeHttpCookies* http_cookies)$/;"	f	file:
katze_image_menu_item_new_ellipsized	katze/katze-utils.c	/^katze_image_menu_item_new_ellipsized (const gchar* label)$/;"	f
katze_item_class_init	katze/katze-item.c	/^katze_item_class_init (KatzeItemClass* class)$/;"	f	file:
katze_item_copy	katze/katze-item.c	/^katze_item_copy (KatzeItem* item)$/;"	f
katze_item_finalize	katze/katze-item.c	/^katze_item_finalize (GObject* object)$/;"	f	file:
katze_item_from_xmlNodePtr	midori/midori-array.c	/^katze_item_from_xmlNodePtr (xmlNodePtr cur)$/;"	f	file:
katze_item_get_added	katze/katze-item.c	/^katze_item_get_added (KatzeItem* item)$/;"	f
katze_item_get_icon	katze/katze-item.c	/^katze_item_get_icon (KatzeItem* item)$/;"	f
katze_item_get_meta_boolean	katze/katze-item.c	/^katze_item_get_meta_boolean  (KatzeItem*   item,$/;"	f
katze_item_get_meta_integer	katze/katze-item.c	/^katze_item_get_meta_integer (KatzeItem*   item,$/;"	f
katze_item_get_meta_keys	katze/katze-item.c	/^katze_item_get_meta_keys (KatzeItem* item)$/;"	f
katze_item_get_meta_string	katze/katze-item.c	/^katze_item_get_meta_string (KatzeItem*   item,$/;"	f
katze_item_get_name	katze/katze-item.c	/^katze_item_get_name (KatzeItem* item)$/;"	f
katze_item_get_parent	katze/katze-item.c	/^katze_item_get_parent (KatzeItem* item)$/;"	f
katze_item_get_property	katze/katze-item.c	/^katze_item_get_property (GObject*    object,$/;"	f	file:
katze_item_get_text	katze/katze-item.c	/^katze_item_get_text (KatzeItem* item)$/;"	f
katze_item_get_token	katze/katze-item.c	/^katze_item_get_token (KatzeItem* item)$/;"	f
katze_item_get_uri	katze/katze-item.c	/^katze_item_get_uri (KatzeItem* item)$/;"	f
katze_item_init	katze/katze-item.c	/^katze_item_init (KatzeItem* item)$/;"	f	file:
katze_item_metadata_to_xbel	midori/midori-array.c	/^katze_item_metadata_to_xbel (KatzeItem* item)$/;"	f	file:
katze_item_new	katze/katze-item.c	/^katze_item_new (void)$/;"	f
katze_item_set_added	katze/katze-item.c	/^katze_item_set_added (KatzeItem* item,$/;"	f
katze_item_set_icon	katze/katze-item.c	/^katze_item_set_icon (KatzeItem*   item,$/;"	f
katze_item_set_meta_data_value	katze/katze-item.c	/^katze_item_set_meta_data_value (KatzeItem*   item,$/;"	f	file:
katze_item_set_meta_integer	katze/katze-item.c	/^katze_item_set_meta_integer (KatzeItem*   item,$/;"	f
katze_item_set_meta_string	katze/katze-item.c	/^katze_item_set_meta_string (KatzeItem*   item,$/;"	f
katze_item_set_name	katze/katze-item.c	/^katze_item_set_name (KatzeItem*   item,$/;"	f
katze_item_set_parent	katze/katze-item.c	/^katze_item_set_parent (KatzeItem* item,$/;"	f
katze_item_set_property	katze/katze-item.c	/^katze_item_set_property (GObject*      object,$/;"	f	file:
katze_item_set_text	katze/katze-item.c	/^katze_item_set_text (KatzeItem*   item,$/;"	f
katze_item_set_token	katze/katze-item.c	/^katze_item_set_token (KatzeItem*   item,$/;"	f
katze_item_set_uri	katze/katze-item.c	/^katze_item_set_uri (KatzeItem*   item,$/;"	f
katze_item_set_value_from_column	midori/midori-array.c	/^katze_item_set_value_from_column (sqlite3_stmt* stmt,$/;"	f	file:
katze_load_cached_icon	katze/katze-utils.c	/^katze_load_cached_icon (const gchar* uri,$/;"	f
katze_mkdir_with_parents	katze/katze-utils.c	/^katze_mkdir_with_parents (const gchar* pathname,$/;"	f
katze_net_class_init	katze/katze-net.c	/^katze_net_class_init (KatzeNetClass* class)$/;"	f	file:
katze_net_default_cb	katze/katze-net.c	/^katze_net_default_cb (KatzeNetPriv* priv)$/;"	f	file:
katze_net_finalize	katze/katze-net.c	/^katze_net_finalize (GObject* object)$/;"	f	file:
katze_net_finished_cb	katze/katze-net.c	/^katze_net_finished_cb (SoupMessage*  msg,$/;"	f	file:
katze_net_get_cached_path	katze/katze-net.c	/^katze_net_get_cached_path (KatzeNet*    net,$/;"	f
katze_net_got_body_cb	katze/katze-net.c	/^katze_net_got_body_cb (SoupMessage*  msg,$/;"	f	file:
katze_net_got_headers_cb	katze/katze-net.c	/^katze_net_got_headers_cb (SoupMessage*  msg,$/;"	f	file:
katze_net_icon_priv_free	midori/midori-view.c	/^katze_net_icon_priv_free (KatzeNetIconPriv* priv)$/;"	f	file:
katze_net_icon_status_cb	midori/midori-view.c	/^katze_net_icon_status_cb (KatzeNetRequest*  request,$/;"	f	file:
katze_net_icon_transfer_cb	midori/midori-view.c	/^katze_net_icon_transfer_cb (KatzeNetRequest*  request,$/;"	f	file:
katze_net_init	katze/katze-net.c	/^katze_net_init (KatzeNet* net)$/;"	f	file:
katze_net_load_uri	katze/katze-net.c	/^katze_net_load_uri (KatzeNet*          net,$/;"	f
katze_net_local_cb	katze/katze-net.c	/^katze_net_local_cb (KatzeNetPriv* priv)$/;"	f	file:
katze_net_new	katze/katze-net.c	/^katze_net_new (void)$/;"	f	file:
katze_net_object_maybe_unref	midori/midori-view.c	/^katze_net_object_maybe_unref (gpointer object)$/;"	f	file:
katze_net_priv_free	katze/katze-net.c	/^katze_net_priv_free (KatzeNetPriv* priv)$/;"	f	file:
katze_object_assign	katze/katze-utils.h	47;"	d
katze_object_get_boolean	katze/katze-utils.c	/^katze_object_get_boolean (gpointer     object,$/;"	f
katze_object_get_enum	katze/katze-utils.c	/^katze_object_get_enum (gpointer     object,$/;"	f
katze_object_get_float	katze/katze-utils.c	/^katze_object_get_float (gpointer     object,$/;"	f
katze_object_get_int	katze/katze-utils.c	/^katze_object_get_int (gpointer     object,$/;"	f
katze_object_get_object	katze/katze-utils.c	/^katze_object_get_object (gpointer     object,$/;"	f
katze_object_get_string	katze/katze-utils.c	/^katze_object_get_string (gpointer     object,$/;"	f
katze_object_has_property	katze/katze-utils.c	/^katze_object_has_property (gpointer     object,$/;"	f
katze_pixbuf_new_from_buffer	katze/katze-utils.c	/^katze_pixbuf_new_from_buffer (const guchar* buffer,$/;"	f
katze_preferences_add_category	katze/katze-preferences.c	/^katze_preferences_add_category (KatzePreferences* preferences,$/;"	f
katze_preferences_add_group	katze/katze-preferences.c	/^katze_preferences_add_group (KatzePreferences* preferences,$/;"	f
katze_preferences_add_widget	katze/katze-preferences.c	/^katze_preferences_add_widget (KatzePreferences* preferences,$/;"	f
katze_preferences_class_init	katze/katze-preferences.c	/^katze_preferences_class_init (KatzePreferencesClass* class)$/;"	f	file:
katze_preferences_finalize	katze/katze-preferences.c	/^katze_preferences_finalize (GObject* object)$/;"	f	file:
katze_preferences_help_clicked_cb	katze/katze-preferences.c	/^katze_preferences_help_clicked_cb (GtkWidget* button,$/;"	f	file:
katze_preferences_init	katze/katze-preferences.c	/^katze_preferences_init (KatzePreferences* preferences)$/;"	f	file:
katze_preferences_new	katze/katze-preferences.c	/^katze_preferences_new (GtkWindow* parent)$/;"	f
katze_preferences_prepare	katze/katze-preferences.c	/^katze_preferences_prepare (KatzePreferences* preferences)$/;"	f	file:
katze_preferences_response_cb	katze/katze-preferences.c	/^katze_preferences_response_cb (KatzePreferences* preferences,$/;"	f	file:
katze_preferences_size_request_cb	katze/katze-preferences.c	/^katze_preferences_size_request_cb (KatzePreferences* preferences,$/;"	f	file:
katze_preferences_toolbutton_clicked_cb	katze/katze-preferences.c	/^katze_preferences_toolbutton_clicked_cb (GtkWidget* toolbutton,$/;"	f	file:
katze_property_label	katze/katze-utils.c	/^katze_property_label (gpointer     object,$/;"	f
katze_property_proxy	katze/katze-utils.c	/^katze_property_proxy (gpointer     object,$/;"	f
katze_scrolled_activate_scrolling	katze/katze-scrolled.c	/^katze_scrolled_activate_scrolling (KatzeScrolled* scrolled,$/;"	f	file:
katze_scrolled_add	katze/katze-scrolled.c	/^katze_scrolled_add (GtkContainer* container,$/;"	f	file:
katze_scrolled_class_init	katze/katze-scrolled.c	/^katze_scrolled_class_init (KatzeScrolledClass* class)$/;"	f	file:
katze_scrolled_dispose	katze/katze-scrolled.c	/^katze_scrolled_dispose (GObject* object)$/;"	f	file:
katze_scrolled_event_handler	katze/katze-scrolled.c	/^katze_scrolled_event_handler (GdkEvent*           event,$/;"	f	file:
katze_scrolled_event_handler_append	katze/katze-scrolled.c	/^katze_scrolled_event_handler_append (KatzeScrolledEventHandler event_handler,$/;"	f	file:
katze_scrolled_event_handler_func	katze/katze-scrolled.c	/^katze_scrolled_event_handler_func (GdkEvent* event,$/;"	f	file:
katze_scrolled_event_handler_next	katze/katze-scrolled.c	/^katze_scrolled_event_handler_next (GdkEvent*           event,$/;"	f	file:
katze_scrolled_get_property	katze/katze-scrolled.c	/^katze_scrolled_get_property (GObject*    object,$/;"	f	file:
katze_scrolled_init	katze/katze-scrolled.c	/^katze_scrolled_init (KatzeScrolled* scrolled)$/;"	f	file:
katze_scrolled_new	katze/katze-scrolled.c	/^katze_scrolled_new (GtkAdjustment* hadjustment,$/;"	f
katze_scrolled_realize	katze/katze-scrolled.c	/^katze_scrolled_realize (GtkWidget* widget)$/;"	f	file:
katze_scrolled_set_drag_scrolling	katze/katze-scrolled.c	/^katze_scrolled_set_drag_scrolling (KatzeScrolled* scrolled,$/;"	f	file:
katze_scrolled_set_property	katze/katze-scrolled.c	/^katze_scrolled_set_property (GObject*      object,$/;"	f	file:
katze_separator_action_activate	katze/katze-separatoraction.c	/^katze_separator_action_activate (GtkAction* action)$/;"	f	file:
katze_separator_action_class_init	katze/katze-separatoraction.c	/^katze_separator_action_class_init (KatzeSeparatorActionClass* class)$/;"	f	file:
katze_separator_action_connect_proxy	katze/katze-separatoraction.c	/^katze_separator_action_connect_proxy (GtkAction* action,$/;"	f	file:
katze_separator_action_create_menu_item	katze/katze-separatoraction.c	/^katze_separator_action_create_menu_item (GtkAction* action)$/;"	f	file:
katze_separator_action_create_tool_item	katze/katze-separatoraction.c	/^katze_separator_action_create_tool_item (GtkAction* action)$/;"	f	file:
katze_separator_action_disconnect_proxy	katze/katze-separatoraction.c	/^katze_separator_action_disconnect_proxy (GtkAction* action,$/;"	f	file:
katze_separator_action_finalize	katze/katze-separatoraction.c	/^katze_separator_action_finalize (GObject* object)$/;"	f	file:
katze_separator_action_init	katze/katze-separatoraction.c	/^katze_separator_action_init (KatzeSeparatorAction* separator_action)$/;"	f	file:
katze_str_equal	midori/midori-array.c	31;"	d	file:
katze_strip_mnemonics	katze/katze-utils.c	/^katze_strip_mnemonics (const gchar* original)$/;"	f
katze_strv_assign	katze/katze-utils.h	59;"	d
katze_throbber_aligned_coords	katze/katze-throbber.c	/^katze_throbber_aligned_coords (GtkWidget* widget,$/;"	f	file:
katze_throbber_class_init	katze/katze-throbber.c	/^katze_throbber_class_init (KatzeThrobberClass* class)$/;"	f	file:
katze_throbber_destroy	katze/katze-throbber.c	/^katze_throbber_destroy (GtkWidget* object)$/;"	f	file:
katze_throbber_dispose	katze/katze-throbber.c	/^katze_throbber_dispose (GObject* object)$/;"	f	file:
katze_throbber_expose_event	katze/katze-throbber.c	/^katze_throbber_expose_event (GtkWidget*      widget,$/;"	f	file:
katze_throbber_get_animated	katze/katze-throbber.c	/^katze_throbber_get_animated (KatzeThrobber* throbber)$/;"	f
katze_throbber_get_icon_name	katze/katze-throbber.c	/^katze_throbber_get_icon_name (KatzeThrobber* throbber)$/;"	f
katze_throbber_get_icon_size	katze/katze-throbber.c	/^katze_throbber_get_icon_size (KatzeThrobber* throbber)$/;"	f
katze_throbber_get_pixbuf	katze/katze-throbber.c	/^katze_throbber_get_pixbuf (KatzeThrobber* throbber)$/;"	f
katze_throbber_get_preferred_height	katze/katze-throbber.c	/^katze_throbber_get_preferred_height (GtkWidget *widget,$/;"	f	file:
katze_throbber_get_preferred_width	katze/katze-throbber.c	/^katze_throbber_get_preferred_width (GtkWidget *widget,$/;"	f	file:
katze_throbber_get_property	katze/katze-throbber.c	/^katze_throbber_get_property (GObject*    object,$/;"	f	file:
katze_throbber_get_static_icon_name	katze/katze-throbber.c	/^katze_throbber_get_static_icon_name (KatzeThrobber* throbber)$/;"	f
katze_throbber_get_static_pixbuf	katze/katze-throbber.c	/^katze_throbber_get_static_pixbuf (KatzeThrobber* throbber)$/;"	f
katze_throbber_get_static_stock_id	katze/katze-throbber.c	/^katze_throbber_get_static_stock_id (KatzeThrobber* throbber)$/;"	f
katze_throbber_init	katze/katze-throbber.c	/^katze_throbber_init (KatzeThrobber *throbber)$/;"	f	file:
katze_throbber_map	katze/katze-throbber.c	/^katze_throbber_map (GtkWidget* widget)$/;"	f	file:
katze_throbber_new	katze/katze-throbber.c	/^katze_throbber_new (void)$/;"	f
katze_throbber_realize	katze/katze-throbber.c	/^katze_throbber_realize (GtkWidget* widget)$/;"	f	file:
katze_throbber_screen_changed	katze/katze-throbber.c	/^katze_throbber_screen_changed (GtkWidget* widget,$/;"	f	file:
katze_throbber_set_animated	katze/katze-throbber.c	/^katze_throbber_set_animated (KatzeThrobber*  throbber,$/;"	f
katze_throbber_set_icon_name	katze/katze-throbber.c	/^katze_throbber_set_icon_name (KatzeThrobber*  throbber,$/;"	f
katze_throbber_set_icon_size	katze/katze-throbber.c	/^katze_throbber_set_icon_size (KatzeThrobber* throbber,$/;"	f
katze_throbber_set_pixbuf	katze/katze-throbber.c	/^katze_throbber_set_pixbuf (KatzeThrobber* throbber,$/;"	f
katze_throbber_set_property	katze/katze-throbber.c	/^katze_throbber_set_property (GObject*      object,$/;"	f	file:
katze_throbber_set_static_icon_name	katze/katze-throbber.c	/^katze_throbber_set_static_icon_name (KatzeThrobber*  throbber,$/;"	f
katze_throbber_set_static_pixbuf	katze/katze-throbber.c	/^katze_throbber_set_static_pixbuf (KatzeThrobber* throbber,$/;"	f
katze_throbber_set_static_stock_id	katze/katze-throbber.c	/^katze_throbber_set_static_stock_id (KatzeThrobber* throbber,$/;"	f
katze_throbber_size_request	katze/katze-throbber.c	/^katze_throbber_size_request (GtkWidget*      widget,$/;"	f	file:
katze_throbber_style_set	katze/katze-throbber.c	/^katze_throbber_style_set (GtkWidget* widget,$/;"	f	file:
katze_throbber_timeout	katze/katze-throbber.c	/^katze_throbber_timeout (KatzeThrobber*  throbber)$/;"	f	file:
katze_throbber_timeout_destroy	katze/katze-throbber.c	/^katze_throbber_timeout_destroy (KatzeThrobber*  throbber)$/;"	f	file:
katze_throbber_unmap	katze/katze-throbber.c	/^katze_throbber_unmap (GtkWidget* widget)$/;"	f	file:
katze_throbber_unrealize	katze/katze-throbber.c	/^katze_throbber_unrealize (GtkWidget* widget)$/;"	f	file:
katze_tree_view_get_selected_iter	katze/katze-utils.c	/^katze_tree_view_get_selected_iter (GtkTreeView*   treeview,$/;"	f
katze_unescape_html	midori/midori-array.c	/^katze_unescape_html (const gchar* text)$/;"	f	file:
katze_uri_entry_changed_cb	katze/katze-utils.c	/^katze_uri_entry_changed_cb (GtkWidget* entry,$/;"	f	file:
katze_uri_entry_new	katze/katze-utils.c	/^katze_uri_entry_new (GtkWidget* other_widget)$/;"	f
katze_widget_has_touchscreen_mode	katze/katze-utils.c	/^katze_widget_has_touchscreen_mode (GtkWidget* widget)$/;"	f
katze_widget_popup	katze/katze-utils.c	/^katze_widget_popup (GtkWidget*      widget,$/;"	f
katze_widget_popup_position_menu	katze/katze-utils.c	/^katze_widget_popup_position_menu (GtkMenu*  menu,$/;"	f	file:
katze_xbel_parse_info	midori/midori-array.c	/^katze_xbel_parse_info (KatzeItem* item,$/;"	f	file:
key	midori/midori-locationaction.c	/^    gchar* key;$/;"	m	struct:_MidoriLocationAction	file:
key_file	midori/midori-extension.c	/^    GKeyFile* key_file;$/;"	m	struct:_MidoriExtensionPrivate	file:
keys	extensions/adblock.c	/^static GHashTable* keys;$/;"	v	file:
kind	extensions/addons.c	/^    AddonsKind kind;$/;"	m	struct:_Addons	file:
kinetic_scrolling	katze/katze-scrolled.c	/^    gboolean kinetic_scrolling;$/;"	m	struct:_KatzeScrolledPrivate	file:
kinetic_scrolling	midori/midori-websettings.c	/^    gboolean kinetic_scrolling : 1;$/;"	m	struct:_MidoriWebSettings	file:
label	extensions/statusbar-features.c	/^    const gchar* label;$/;"	m	struct:__anon19	file:
label	midori/midori-panel.c	/^    gchar* label;$/;"	m	struct:__anon67	file:
label	midori/sokoke.h	/^    gchar* label;$/;"	m	struct:__anon53
labelbar	midori/midori-panel.c	/^    GtkWidget* labelbar;$/;"	m	struct:_MidoriPanel	file:
last	extensions/mouse-gestures.c	/^    MouseButton last;$/;"	m	struct:_MouseGesture	file:
last_drag_path	extensions/toolbar-editor.c	/^	GtkTreePath *last_drag_path;$/;"	m	struct:__anon16	file:
last_drag_pos	extensions/toolbar-editor.c	/^	GtkTreeViewDropPosition last_drag_pos;$/;"	m	struct:__anon16	file:
last_panel_page	midori/midori-websettings.c	/^    gint last_panel_page;$/;"	m	struct:_MidoriWebSettings	file:
last_panel_position	midori/midori-websettings.c	/^    gint last_panel_position;$/;"	m	struct:_MidoriWebSettings	file:
last_proxy	midori/midori-searchaction.c	/^    GtkWidget* last_proxy;$/;"	m	struct:_MidoriSearchAction	file:
last_tab_size	midori/midori-browser.c	/^    gint last_tab_size;$/;"	m	struct:_MidoriBrowser	file:
last_web_search	midori/midori-browser.c	/^    guint last_web_search;$/;"	m	struct:_MidoriBrowser	file:
last_web_search	midori/midori-websettings.c	/^    gint last_web_search;$/;"	m	struct:_MidoriWebSettings	file:
last_window_height	midori/midori-browser.c	/^    gint last_window_width, last_window_height;$/;"	m	struct:_MidoriBrowser	file:
last_window_height	midori/midori-websettings.c	/^    gint last_window_height;$/;"	m	struct:_MidoriWebSettings	file:
last_window_state	midori/midori-websettings.c	/^    MidoriWindowState last_window_state : 2;$/;"	m	struct:_MidoriWebSettings	file:
last_window_width	midori/midori-browser.c	/^    gint last_window_width, last_window_height;$/;"	m	struct:_MidoriBrowser	file:
last_window_width	midori/midori-websettings.c	/^    gint last_window_width;$/;"	m	struct:_MidoriWebSettings	file:
latex_build	waf-modules/wafadmin/Tools/tex.py	/^def latex_build(task):$/;"	f
latex_vardeps	waf-modules/wafadmin/Tools/tex.py	/^latex_vardeps=['LATEX','LATEXFLAGS']$/;"	v
launch_dir	waf-modules/wafadmin/Options.py	/^launch_dir=''$/;"	v
launch_node	waf-modules/wafadmin/Build.py	/^	def launch_node(self):$/;"	m	class:BuildContext
length	katze/katze-net.h	/^    gint64 length;$/;"	m	struct:__anon34
length	midori/midori-extension.c	/^    gsize length;$/;"	m	struct:__anon72	file:
level	extensions/statusbar-features.c	/^    gdouble level;$/;"	m	struct:__anon19	file:
lib	waf-modules/wafadmin/Tools/python.py	/^				lib=lib[2:]$/;"	v
libfiles	waf-modules/wafadmin/3rdparty/boost.py	/^def libfiles(lib,pattern,lib_paths):$/;"	f
libname_msvc	waf-modules/wafadmin/Tools/msvc.py	/^def libname_msvc(self,libname,is_static=False,mandatory=False):$/;"	f
libtool_config	waf-modules/wafadmin/Tools/libtool.py	/^class libtool_config:$/;"	c
libtool_la_file	waf-modules/wafadmin/Tools/libtool.py	/^class libtool_la_file:$/;"	c
line	tools/check-style	/^                line = line[1:]$/;"	v
line	tools/check-style	/^            line = line[:-1]$/;"	v
lines	waf-modules/wafadmin/Tools/msvc.py	/^	lines=sout.splitlines()$/;"	v
lines_includes	waf-modules/wafadmin/Tools/preproc.py	/^def lines_includes(filename):$/;"	f
link_add_flags	waf-modules/wafadmin/Tools/config_c.py	/^def link_add_flags(conf):$/;"	f
link_may_start	waf-modules/wafadmin/Tools/ocaml.py	/^def link_may_start(self):$/;"	f
link_str	waf-modules/wafadmin/Tools/cc.py	/^link_str='${LINK_CC} ${CCLNK_SRC_F}${SRC} ${CCLNK_TGT_F}${TGT[0].abspath(env)} ${LINKFLAGS}'$/;"	v
link_str	waf-modules/wafadmin/Tools/cxx.py	/^link_str='${LINK_CXX} ${CXXLNK_SRC_F}${SRC} ${CXXLNK_TGT_F}${TGT[0].abspath(env)} ${LINKFLAGS}'$/;"	v
link_str	waf-modules/wafadmin/Tools/d.py	/^link_str='${D_LINKER} ${DLNK_SRC_F}${SRC} ${DLNK_TGT_F}${TGT} ${DLINKFLAGS}'$/;"	v
link_uri	midori/midori-view.c	/^    gchar* link_uri;$/;"	m	struct:_MidoriView	file:
list2cmdline	waf-modules/wafadmin/pproc.py	/^def list2cmdline(seq):$/;"	f
list_netscape_plugins	midori/midori-view.c	/^static gchar* list_netscape_plugins ()$/;"	f	file:
list_video_formats	midori/midori-view.c	/^list_video_formats ()$/;"	f	file:
listdir	waf-modules/wafadmin/Utils.py	/^	listdir=listdir_win32$/;"	v
listdir	waf-modules/wafadmin/Utils.py	/^listdir=os.listdir$/;"	v
listdir_bld	waf-modules/wafadmin/Build.py	/^	def listdir_bld(self,parent_node,path,variant):$/;"	m	class:BuildContext
listdir_src	waf-modules/wafadmin/Build.py	/^	def listdir_src(self,parent_node):$/;"	m	class:BuildContext
listdir_win32	waf-modules/wafadmin/Utils.py	/^	def listdir_win32(s):$/;"	f
liststore	extensions/addons.c	/^    GtkListStore* liststore;$/;"	m	struct:AddonsList	file:
load	waf-modules/wafadmin/Build.py	/^	def load(self):$/;"	m	class:BuildContext
load	waf-modules/wafadmin/Environment.py	/^	def load(self,filename):$/;"	m	class:Environment
load_dirs	waf-modules/wafadmin/Build.py	/^	def load_dirs(self,srcdir,blddir,load_cache=1):$/;"	m	class:BuildContext
load_envs	waf-modules/wafadmin/Build.py	/^	def load_envs(self):$/;"	m	class:BuildContext
load_extensions	tests/extensions.c	/^load_extensions (void)$/;"	f	file:
load_module	waf-modules/wafadmin/Utils.py	/^def load_module(file_path,name=WSCRIPT_FILE):$/;"	f
load_on_startup	midori/midori-websettings.c	/^    MidoriStartup load_on_startup : 2;$/;"	m	struct:_MidoriWebSettings	file:
load_status	midori/midori-view.c	/^    MidoriLoadStatus load_status;$/;"	m	struct:_MidoriView	file:
load_tool	waf-modules/wafadmin/Utils.py	/^def load_tool(tool,tooldir=None):$/;"	f
locate_error	waf-modules/wafadmin/Utils.py	/^	def locate_error(self):$/;"	m	class:WscriptError
location_entry_search	midori/midori-browser.c	/^    gchar* location_entry_search;$/;"	m	struct:_MidoriBrowser	file:
location_entry_search	midori/midori-websettings.c	/^    gchar* location_entry_search;$/;"	m	struct:_MidoriWebSettings	file:
lockfile	waf-modules/wafadmin/Options.py	/^lockfile=os.environ.get('WAFLOCK','.lock-wscript')$/;"	v
log_filter	waf-modules/wafadmin/Logs.py	/^class log_filter(logging.Filter):$/;"	c
logins	katze/katze-http-auth.c	/^    GHashTable* logins;$/;"	m	struct:_KatzeHttpAuth	file:
lookup_data	midori/socket.c	/^	SockLookupData *lookup_data;$/;"	m	struct:_SockConnectData	file:
loop	waf-modules/wafadmin/Runner.py	/^	def loop(self):$/;"	m	class:TaskConsumer
lsettings	midori/midori-extension.c	/^    GList* lsettings;$/;"	m	struct:_MidoriExtensionPrivate	file:
macbundle_PATTERN	_build_/c4che/default.cache.py	/^macbundle_PATTERN = '%s.bundle'$/;"	v
magic	tests/extensions.c	/^const gpointer magic = (gpointer)0xdeadbeef;$/;"	v
magic_uri_fingerprint	tests/magic-uri.c	/^magic_uri_fingerprint (void)$/;"	f	file:
magic_uri_format	tests/magic-uri.c	/^magic_uri_format (void)$/;"	f	file:
magic_uri_idn	tests/magic-uri.c	/^magic_uri_idn (void)$/;"	f	file:
magic_uri_performance	tests/magic-uri.c	/^magic_uri_performance (void)$/;"	f	file:
magic_uri_prefetch	tests/magic-uri.c	/^magic_uri_prefetch (void)$/;"	f	file:
magic_uri_pseudo	tests/magic-uri.c	/^magic_uri_pseudo (void)$/;"	f	file:
magic_uri_search	tests/magic-uri.c	/^magic_uri_search (void)$/;"	f	file:
magic_uri_uri	tests/magic-uri.c	/^magic_uri_uri (void)$/;"	f	file:
main	_build_/.conf_check_0/test.c	/^int main() {$/;"	f
main	midori/main.c	/^main (int    argc,$/;"	f
main	tests/browser.c	/^main (int    argc,$/;"	f
main	tests/extensions.c	/^main (int    argc,$/;"	f
main	tests/magic-uri.c	/^main (int    argc,$/;"	f
main	tests/properties.c	/^main (int    argc,$/;"	f
main	waf-modules/wafadmin/Scripting.py	/^def main():$/;"	f
make_cstr_groups	waf-modules/wafadmin/Task.py	/^	def make_cstr_groups(self):$/;"	m	class:TaskGroup
make_test	waf-modules/wafadmin/Tools/unittestw.py	/^def make_test(self):$/;"	f
make_update	_build_/default/extensions/history-list.c	/^	void (*make_update) (HistoryListHistoryWindow* self);$/;"	m	struct:_HistoryListHistoryWindowClass	file:
mapped	waf-modules/wafadmin/TaskGen.py	/^	mapped={}$/;"	v	class:task_gen
mappings	waf-modules/wafadmin/TaskGen.py	/^	mappings={}$/;"	v	class:task_gen
maximum_cache_size	midori/midori-websettings.c	/^    gint maximum_cache_size;$/;"	m	struct:_MidoriWebSettings	file:
maximum_cookie_age	midori/midori-websettings.c	/^    gint maximum_cookie_age;$/;"	m	struct:_MidoriWebSettings	file:
maximum_history_age	midori/midori-browser.c	/^    guint maximum_history_age;$/;"	m	struct:_MidoriBrowser	file:
maximum_history_age	midori/midori-websettings.c	/^    gint maximum_history_age;$/;"	m	struct:_MidoriWebSettings	file:
maxjobs	waf-modules/wafadmin/Task.py	/^	maxjobs=MAXJOBS$/;"	v	class:TaskBase
me_setting_free	midori/midori-extension.c	/^void me_setting_free (gpointer setting)$/;"	f
me_setting_install	midori/midori-extension.c	104;"	d	file:
me_setting_type	midori/midori-extension.c	114;"	d	file:
memory	midori/midori-view.c	/^    GHashTable* memory;$/;"	m	struct:_MidoriView	file:
menu_item	midori/midori-view.c	/^    GtkWidget* menu_item;$/;"	m	struct:_MidoriView	file:
menu_tools	midori/midori-browser.c	/^    GtkWidget* menu_tools;$/;"	m	struct:_MidoriBrowser	file:
menubar	midori/midori-browser.c	/^    GtkWidget* menubar;$/;"	m	struct:_MidoriBrowser	file:
metadata	katze/katze-item.h	/^    GHashTable* metadata;$/;"	m	struct:_KatzeItem
middle	extensions/mouse-gestures.c	/^    struct MouseGestureNode middle;$/;"	m	struct:_MouseGesture	typeref:struct:_MouseGesture::MouseGestureNode	file:
middle_click_opens_selection	midori/midori-view.c	/^    gboolean middle_click_opens_selection;$/;"	m	struct:_MidoriView	file:
middle_click_opens_selection	midori/midori-websettings.c	/^    gboolean middle_click_opens_selection : 1;$/;"	m	struct:_MidoriWebSettings	file:
midori_-_frequently_asked_questions	data/faq.html	/^<h1 class="sectionedit1"><a name="midori_-_frequently_asked_questions" id="midori_-_frequently_asked_questions">Midori - Frequently asked questions<\/a><\/h1>$/;"	a
midori_-_frequently_asked_questions	debian/midori/usr/share/doc/midori/faq.html	/^<h1 class="sectionedit1"><a name="midori_-_frequently_asked_questions" id="midori_-_frequently_asked_questions">Midori - Frequently asked questions<\/a><\/h1>$/;"	a
midori_-_frequently_asked_questions	debian/tmp/usr/share/doc/midori/faq.html	/^<h1 class="sectionedit1"><a name="midori_-_frequently_asked_questions" id="midori_-_frequently_asked_questions">Midori - Frequently asked questions<\/a><\/h1>$/;"	a
midori_app_add_browser	midori/midori-app.c	/^midori_app_add_browser (MidoriApp*     app,$/;"	f
midori_app_add_browser_cb	midori/main.c	/^midori_app_add_browser_cb (MidoriApp*     app,$/;"	f	file:
midori_app_class_init	midori/midori-app.c	/^midori_app_class_init (MidoriAppClass* class)$/;"	f	file:
midori_app_command_received	midori/midori-app.c	/^midori_app_command_received (MidoriApp*   app,$/;"	f	file:
midori_app_create_browser	midori/midori-app.c	/^midori_app_create_browser (MidoriApp* app)$/;"	f
midori_app_create_instance	midori/midori-app.c	/^midori_app_create_instance (MidoriApp* app)$/;"	f	file:
midori_app_finalize	midori/midori-app.c	/^midori_app_finalize (GObject* object)$/;"	f	file:
midori_app_get_browser	midori/midori-app.c	/^midori_app_get_browser (MidoriApp* app)$/;"	f
midori_app_get_browsers	midori/midori-app.c	/^midori_app_get_browsers (MidoriApp* app)$/;"	f
midori_app_get_property	midori/midori-app.c	/^midori_app_get_property (GObject*    object,$/;"	f	file:
midori_app_init	midori/midori-app.c	/^midori_app_init (MidoriApp* app)$/;"	f	file:
midori_app_instance_is_running	midori/midori-app.c	/^midori_app_instance_is_running (MidoriApp* app)$/;"	f
midori_app_instance_send_activate	midori/midori-app.c	/^midori_app_instance_send_activate (MidoriApp* app)$/;"	f
midori_app_instance_send_new_browser	midori/midori-app.c	/^midori_app_instance_send_new_browser (MidoriApp* app)$/;"	f
midori_app_instance_send_uris	midori/midori-app.c	/^midori_app_instance_send_uris (MidoriApp* app,$/;"	f
midori_app_io_channel_watch_cb	midori/midori-app.c	/^midori_app_io_channel_watch_cb (GIOChannel*  channel,$/;"	f	file:
midori_app_new	midori/midori-app.c	/^midori_app_new (void)$/;"	f
midori_app_osso_rpc_handler_cb	midori/midori-app.c	/^midori_app_osso_rpc_handler_cb (const gchar* interface,$/;"	f	file:
midori_app_quit	midori/midori-app.c	/^midori_app_quit (MidoriApp* app)$/;"	f
midori_app_quit_cb	midori/main.c	/^midori_app_quit_cb (MidoriBrowser* browser,$/;"	f	file:
midori_app_raise_window	midori/midori-app.c	/^midori_app_raise_window (GtkWindow* window,$/;"	f	file:
midori_app_send_command	midori/midori-app.c	/^midori_app_send_command (MidoriApp* app,$/;"	f
midori_app_send_notification	midori/midori-app.c	/^midori_app_send_notification (MidoriApp*   app,$/;"	f
midori_app_set_property	midori/midori-app.c	/^midori_app_set_property (GObject*      object,$/;"	f	file:
midori_app_setup	midori/midori-app.c	/^midori_app_setup (gchar** argument_vector)$/;"	f
midori_array_from_file	midori/midori-array.c	/^midori_array_from_file (KatzeArray*  array,$/;"	f
midori_array_query	midori/midori-array.c	/^midori_array_query (KatzeArray*  bookmarks,$/;"	f
midori_array_to_file	midori/midori-array.c	/^midori_array_to_file (KatzeArray*  array,$/;"	f
midori_array_to_file_format	midori/midori-array.c	/^midori_array_to_file_format (KatzeArray*  array,$/;"	f	file:
midori_bookmark_folder_button_get_active	midori/midori-browser.c	/^midori_bookmark_folder_button_get_active (GtkWidget* combo)$/;"	f	file:
midori_bookmark_folder_button_new	midori/midori-browser.c	/^midori_bookmark_folder_button_new (KatzeArray*  array,$/;"	f	file:
midori_bookmarkbar_activate_item_alt	midori/midori-browser.c	/^midori_bookmarkbar_activate_item_alt (GtkAction*     action,$/;"	f	file:
midori_bookmarkbar_clear	midori/midori-browser.c	/^midori_bookmarkbar_clear (GtkWidget* toolbar)$/;"	f	file:
midori_bookmarkbar_insert_item	midori/midori-browser.c	/^midori_bookmarkbar_insert_item (GtkWidget* toolbar,$/;"	f	file:
midori_bookmarkbar_item_button_press_event_cb	midori/midori-browser.c	/^midori_bookmarkbar_item_button_press_event_cb (GtkWidget*      toolitem,$/;"	f	file:
midori_bookmarkbar_populate	midori/midori-browser.c	/^midori_bookmarkbar_populate (MidoriBrowser* browser)$/;"	f	file:
midori_bookmarkbar_remove_item_cb	midori/midori-browser.c	/^midori_bookmarkbar_remove_item_cb (KatzeArray*    bookmarks,$/;"	f	file:
midori_bookmarks_add_clicked_cb	panels/midori-bookmarks.c	/^midori_bookmarks_add_clicked_cb (GtkWidget* toolitem)$/;"	f	file:
midori_bookmarks_add_item_cb	midori/main.c	/^midori_bookmarks_add_item_cb (KatzeArray* array,$/;"	f	file:
midori_bookmarks_add_item_cb	panels/midori-bookmarks.c	/^midori_bookmarks_add_item_cb (KatzeArray*      array,$/;"	f	file:
midori_bookmarks_button_release_event_cb	panels/midori-bookmarks.c	/^midori_bookmarks_button_release_event_cb (GtkWidget*       widget,$/;"	f	file:
midori_bookmarks_class_init	panels/midori-bookmarks.c	/^midori_bookmarks_class_init (MidoriBookmarksClass* class)$/;"	f	file:
midori_bookmarks_delete_clicked_cb	panels/midori-bookmarks.c	/^midori_bookmarks_delete_clicked_cb (GtkWidget*       toolitem,$/;"	f	file:
midori_bookmarks_edit_clicked_cb	panels/midori-bookmarks.c	/^midori_bookmarks_edit_clicked_cb (GtkWidget*       toolitem,$/;"	f	file:
midori_bookmarks_export_array_db	panels/midori-bookmarks.c	/^midori_bookmarks_export_array_db (sqlite3*     db,$/;"	f
midori_bookmarks_filter_entry_changed_cb	panels/midori-bookmarks.c	/^midori_bookmarks_filter_entry_changed_cb (GtkEntry*        entry,$/;"	f	file:
midori_bookmarks_filter_entry_clear_cb	panels/midori-bookmarks.c	/^midori_bookmarks_filter_entry_clear_cb (GtkEntry*        entry,$/;"	f	file:
midori_bookmarks_filter_timeout_cb	panels/midori-bookmarks.c	/^midori_bookmarks_filter_timeout_cb (gpointer data)$/;"	f	file:
midori_bookmarks_finalize	panels/midori-bookmarks.c	/^midori_bookmarks_finalize (GObject* object)$/;"	f	file:
midori_bookmarks_get_label	panels/midori-bookmarks.c	/^midori_bookmarks_get_label (MidoriViewable* viewable)$/;"	f	file:
midori_bookmarks_get_property	panels/midori-bookmarks.c	/^midori_bookmarks_get_property (GObject*    object,$/;"	f	file:
midori_bookmarks_get_stock_id	panels/midori-bookmarks.c	/^midori_bookmarks_get_stock_id (MidoriViewable* viewable)$/;"	f	file:
midori_bookmarks_get_toolbar	panels/midori-bookmarks.c	/^midori_bookmarks_get_toolbar (MidoriViewable* viewable)$/;"	f	file:
midori_bookmarks_import	midori/main.c	/^midori_bookmarks_import (const gchar* filename,$/;"	f	file:
midori_bookmarks_import_array_db	panels/midori-bookmarks.c	/^midori_bookmarks_import_array_db (sqlite3*     db,$/;"	f
midori_bookmarks_init	panels/midori-bookmarks.c	/^midori_bookmarks_init (MidoriBookmarks* bookmarks)$/;"	f	file:
midori_bookmarks_initialize	midori/main.c	/^midori_bookmarks_initialize (KatzeArray*  array,$/;"	f	file:
midori_bookmarks_insert_item_db	panels/midori-bookmarks.c	/^midori_bookmarks_insert_item_db (sqlite3*     db,$/;"	f
midori_bookmarks_key_release_event_cb	panels/midori-bookmarks.c	/^midori_bookmarks_key_release_event_cb (GtkWidget*       widget,$/;"	f	file:
midori_bookmarks_open_activate_cb	panels/midori-bookmarks.c	/^midori_bookmarks_open_activate_cb (GtkWidget*       menuitem,$/;"	f	file:
midori_bookmarks_open_in_tab_activate_cb	panels/midori-bookmarks.c	/^midori_bookmarks_open_in_tab_activate_cb (GtkWidget*       menuitem,$/;"	f	file:
midori_bookmarks_open_in_window_activate_cb	panels/midori-bookmarks.c	/^midori_bookmarks_open_in_window_activate_cb (GtkWidget*       menuitem,$/;"	f	file:
midori_bookmarks_popup	panels/midori-bookmarks.c	/^midori_bookmarks_popup (GtkWidget*       widget,$/;"	f	file:
midori_bookmarks_popup_item	panels/midori-bookmarks.c	/^midori_bookmarks_popup_item (GtkWidget*       menu,$/;"	f	file:
midori_bookmarks_popup_menu_cb	panels/midori-bookmarks.c	/^midori_bookmarks_popup_menu_cb (GtkWidget*       widget,$/;"	f	file:
midori_bookmarks_read_from_db	panels/midori-bookmarks.c	/^midori_bookmarks_read_from_db (MidoriBookmarks* bookmarks,$/;"	f	file:
midori_bookmarks_read_from_db_to_model	panels/midori-bookmarks.c	/^midori_bookmarks_read_from_db_to_model (MidoriBookmarks* bookmarks,$/;"	f	file:
midori_bookmarks_remove_item_cb	midori/main.c	/^midori_bookmarks_remove_item_cb (KatzeArray* array,$/;"	f	file:
midori_bookmarks_remove_item_cb	panels/midori-bookmarks.c	/^midori_bookmarks_remove_item_cb (KatzeArray*      array,$/;"	f	file:
midori_bookmarks_row_activated_cb	panels/midori-bookmarks.c	/^midori_bookmarks_row_activated_cb (GtkTreeView*       treeview,$/;"	f	file:
midori_bookmarks_row_changed_cb	panels/midori-bookmarks.c	/^midori_bookmarks_row_changed_cb (GtkTreeModel*    model,$/;"	f	file:
midori_bookmarks_row_collapsed_cb	panels/midori-bookmarks.c	/^midori_bookmarks_row_collapsed_cb (GtkTreeView *treeview,$/;"	f	file:
midori_bookmarks_row_expanded_cb	panels/midori-bookmarks.c	/^midori_bookmarks_row_expanded_cb (GtkTreeView*     treeview,$/;"	f	file:
midori_bookmarks_selection_changed_cb	panels/midori-bookmarks.c	/^midori_bookmarks_selection_changed_cb (GtkTreeSelection *treeview,$/;"	f	file:
midori_bookmarks_set_app	panels/midori-bookmarks.c	/^midori_bookmarks_set_app (MidoriBookmarks* bookmarks,$/;"	f	file:
midori_bookmarks_set_property	panels/midori-bookmarks.c	/^midori_bookmarks_set_property (GObject*      object,$/;"	f	file:
midori_bookmarks_toolbar_update	panels/midori-bookmarks.c	/^midori_bookmarks_toolbar_update (MidoriBookmarks *bookmarks)$/;"	f	file:
midori_bookmarks_treeview_render_icon_cb	panels/midori-bookmarks.c	/^midori_bookmarks_treeview_render_icon_cb (GtkTreeViewColumn* column,$/;"	f	file:
midori_bookmarks_treeview_render_text_cb	panels/midori-bookmarks.c	/^midori_bookmarks_treeview_render_text_cb (GtkTreeViewColumn* column,$/;"	f	file:
midori_bookmarks_update_cb	panels/midori-bookmarks.c	/^midori_bookmarks_update_cb (KatzeArray*      array,$/;"	f	file:
midori_bookmarks_viewable_iface_init	panels/midori-bookmarks.c	/^midori_bookmarks_viewable_iface_init (MidoriViewableIface* iface)$/;"	f	file:
midori_browser_accel_switch_tab_activate_cb	midori/midori-browser.c	/^midori_browser_accel_switch_tab_activate_cb (GtkAccelGroup*  accel_group,$/;"	f	file:
midori_browser_action_last_session_activate_cb	midori/main.c	/^midori_browser_action_last_session_activate_cb (GtkAction*     action,$/;"	f	file:
midori_browser_activate_action	midori/midori-browser.c	/^midori_browser_activate_action (MidoriBrowser* browser,$/;"	f
midori_browser_add_actions	midori/midori-browser.c	/^midori_browser_add_actions (MidoriBrowser* browser)$/;"	f	file:
midori_browser_add_item	midori/midori-browser.c	/^midori_browser_add_item (MidoriBrowser* browser,$/;"	f
midori_browser_add_speed_dial	midori/midori-browser.c	/^midori_browser_add_speed_dial (MidoriBrowser* browser)$/;"	f	file:
midori_browser_add_tab	midori/midori-browser.c	/^midori_browser_add_tab (MidoriBrowser* browser,$/;"	f
midori_browser_add_uri	midori/midori-browser.c	/^midori_browser_add_uri (MidoriBrowser* browser,$/;"	f
midori_browser_alloc_timeout	midori/midori-browser.c	/^midori_browser_alloc_timeout (MidoriBrowser* browser)$/;"	f	file:
midori_browser_block_action	midori/midori-browser.c	/^midori_browser_block_action (MidoriBrowser* browser,$/;"	f
midori_browser_bookmark_delete_activate_cb	midori/midori-browser.c	/^midori_browser_bookmark_delete_activate_cb (GtkWidget*     menuitem,$/;"	f	file:
midori_browser_bookmark_edit_activate_cb	midori/midori-browser.c	/^midori_browser_bookmark_edit_activate_cb (GtkWidget*     menuitem,$/;"	f	file:
midori_browser_bookmark_open_activate_cb	midori/midori-browser.c	/^midori_browser_bookmark_open_activate_cb (GtkWidget*     menuitem,$/;"	f	file:
midori_browser_bookmark_open_in_tab_activate_cb	midori/midori-browser.c	/^midori_browser_bookmark_open_in_tab_activate_cb (GtkWidget*     menuitem,$/;"	f	file:
midori_browser_bookmark_open_in_window_activate_cb	midori/midori-browser.c	/^midori_browser_bookmark_open_in_window_activate_cb (GtkWidget*     menuitem,$/;"	f	file:
midori_browser_bookmark_popup	midori/midori-browser.c	/^midori_browser_bookmark_popup (GtkWidget*      widget,$/;"	f	file:
midori_browser_bookmark_popup_item	midori/midori-browser.c	/^midori_browser_bookmark_popup_item (GtkWidget*     menu,$/;"	f	file:
midori_browser_class_init	midori/midori-browser.c	/^midori_browser_class_init (MidoriBrowserClass* class)$/;"	f	file:
midori_browser_clear_on_quit_toggled_cb	midori/midori-browser.c	/^midori_browser_clear_on_quit_toggled_cb (GtkToggleButton*   button,$/;"	f	file:
midori_browser_clear_private_data_response_cb	midori/midori-browser.c	/^midori_browser_clear_private_data_response_cb (GtkWidget*     dialog,$/;"	f	file:
midori_browser_close_other_tabs_cb	midori/midori-browser.c	/^midori_browser_close_other_tabs_cb (GtkWidget* view,$/;"	f	file:
midori_browser_delete_event	midori/midori-browser.c	/^midori_browser_delete_event (GtkWidget*   widget,$/;"	f	file:
midori_browser_delete_event_cb	midori/midori-app.c	/^midori_browser_delete_event_cb (MidoriBrowser* browser,$/;"	f	file:
midori_browser_destroy_cb	midori/midori-app.c	/^midori_browser_destroy_cb (MidoriBrowser* browser,$/;"	f	file:
midori_browser_destroy_cb	midori/midori-browser.c	/^midori_browser_destroy_cb (MidoriBrowser* browser)$/;"	f	file:
midori_browser_dispose	midori/midori-browser.c	/^midori_browser_dispose (GObject* object)$/;"	f	file:
midori_browser_edit_bookmark_add_speed_dial_cb	midori/midori-browser.c	/^midori_browser_edit_bookmark_add_speed_dial_cb (GtkWidget* button,$/;"	f	file:
midori_browser_edit_bookmark_dialog_new	midori/midori-browser.c	/^midori_browser_edit_bookmark_dialog_new (MidoriBrowser* browser,$/;"	f
midori_browser_edit_bookmark_title_changed_cb	midori/midori-browser.c	/^midori_browser_edit_bookmark_title_changed_cb (GtkEntry*      entry,$/;"	f	file:
midori_browser_finalize	midori/midori-browser.c	/^midori_browser_finalize (GObject* object)$/;"	f	file:
midori_browser_focus_in_event_cb	midori/midori-app.c	/^midori_browser_focus_in_event_cb (MidoriBrowser* browser,$/;"	f	file:
midori_browser_foreach	midori/midori-browser.c	/^midori_browser_foreach (MidoriBrowser* browser,$/;"	f
midori_browser_get_action_group	midori/midori-browser.c	/^midori_browser_get_action_group (MidoriBrowser* browser)$/;"	f
midori_browser_get_current_page	midori/midori-browser.c	/^midori_browser_get_current_page (MidoriBrowser* browser)$/;"	f
midori_browser_get_current_tab	midori/midori-browser.c	/^midori_browser_get_current_tab (MidoriBrowser* browser)$/;"	f
midori_browser_get_current_uri	midori/midori-browser.c	/^midori_browser_get_current_uri (MidoriBrowser* browser)$/;"	f
midori_browser_get_for_widget	midori/midori-browser.c	/^midori_browser_get_for_widget (GtkWidget* widget)$/;"	f
midori_browser_get_nth_tab	midori/midori-browser.c	/^midori_browser_get_nth_tab (MidoriBrowser* browser,$/;"	f
midori_browser_get_property	midori/midori-browser.c	/^midori_browser_get_property (GObject*    object,$/;"	f	file:
midori_browser_get_proxy_array	midori/midori-browser.c	/^midori_browser_get_proxy_array (MidoriBrowser* browser)$/;"	f
midori_browser_get_proxy_items	midori/midori-browser.c	/^midori_browser_get_proxy_items (MidoriBrowser* browser)$/;"	f
midori_browser_get_settings	midori/midori-browser.c	/^midori_browser_get_settings (MidoriBrowser* browser)$/;"	f
midori_browser_get_tab	midori/midori-browser.h	153;"	d
midori_browser_get_tabs	midori/midori-browser.c	/^midori_browser_get_tabs (MidoriBrowser* browser)$/;"	f
midori_browser_get_toolbar_actions	midori/midori-browser.c	/^midori_browser_get_toolbar_actions (MidoriBrowser* browser)$/;"	f
midori_browser_get_uri_extension	midori/midori-browser.c	/^midori_browser_get_uri_extension (const gchar* uri)$/;"	f	file:
midori_browser_init	midori/midori-browser.c	/^midori_browser_init (MidoriBrowser* browser)$/;"	f	file:
midori_browser_is_fullscreen	midori/midori-browser.c	/^midori_browser_is_fullscreen (MidoriBrowser* browser)$/;"	f	file:
midori_browser_key_press_event	midori/midori-browser.c	/^midori_browser_key_press_event (GtkWidget*   widget,$/;"	f	file:
midori_browser_mce_filter_cb	midori/midori-browser.c	/^midori_browser_mce_filter_cb (DBusConnection* connection,$/;"	f	file:
midori_browser_menu_button_press_event_cb	midori/midori-browser.c	/^midori_browser_menu_button_press_event_cb (GtkWidget*      toolitem,$/;"	f	file:
midori_browser_menu_item_middle_click_event_cb	midori/midori-browser.c	/^midori_browser_menu_item_middle_click_event_cb (GtkWidget*      toolitem,$/;"	f	file:
midori_browser_message_received_cb	midori/midori-app.c	/^midori_browser_message_received_cb (UniqueApp*         instance,$/;"	f	file:
midori_browser_navigationbar_notify_style_cb	midori/midori-browser.c	/^midori_browser_navigationbar_notify_style_cb (GObject*       object,$/;"	f	file:
midori_browser_new	midori/midori-browser.c	/^midori_browser_new (void)$/;"	f
midori_browser_new_history_item	midori/midori-browser.c	/^midori_browser_new_history_item (MidoriBrowser* browser,$/;"	f	file:
midori_browser_new_window_cb	midori/midori-app.c	/^midori_browser_new_window_cb (MidoriBrowser* browser,$/;"	f	file:
midori_browser_news_feed_clicked_cb	midori/midori-browser.c	/^midori_browser_news_feed_clicked_cb (GtkWidget*     menuitem,$/;"	f	file:
midori_browser_notebook_button_press_event_after_cb	midori/midori-browser.c	/^midori_browser_notebook_button_press_event_after_cb (GtkNotebook*    notebook,$/;"	f	file:
midori_browser_notebook_create_window_cb	midori/midori-browser.c	/^midori_browser_notebook_create_window_cb (GtkNotebook*   notebook,$/;"	f	file:
midori_browser_notebook_page_reordered_cb	midori/midori-browser.c	/^midori_browser_notebook_page_reordered_cb (GtkNotebook*   notebook,$/;"	f	file:
midori_browser_notebook_reorder_tab_cb	midori/midori-browser.c	/^midori_browser_notebook_reorder_tab_cb (GtkNotebook*     notebook,$/;"	f	file:
midori_browser_notebook_resize	midori/midori-browser.c	/^midori_browser_notebook_resize (MidoriBrowser* browser,$/;"	f	file:
midori_browser_notebook_size_allocate_cb	midori/midori-browser.c	/^midori_browser_notebook_size_allocate_cb (GtkWidget*     widget,$/;"	f	file:
midori_browser_notify_new_tab	midori/midori-browser.c	/^midori_browser_notify_new_tab (MidoriBrowser *browser)$/;"	f	file:
midori_browser_notify_new_tab_timeout_cb	midori/midori-browser.c	/^midori_browser_notify_new_tab_timeout_cb (MidoriBrowser *browser)$/;"	f	file:
midori_browser_open_bookmark	midori/midori-browser.c	/^midori_browser_open_bookmark (MidoriBrowser* browser,$/;"	f
midori_browser_panel_timeout	midori/midori-browser.c	/^midori_browser_panel_timeout (GtkWidget* hpaned)$/;"	f	file:
midori_browser_prepare_download	midori/midori-browser.c	/^midori_browser_prepare_download (MidoriBrowser*  browser,$/;"	f	file:
midori_browser_privacy_preferences_cb	midori/main.c	/^midori_browser_privacy_preferences_cb (MidoriBrowser*    browser,$/;"	f	file:
midori_browser_quit	midori/midori-browser.c	/^midori_browser_quit (MidoriBrowser* browser)$/;"	f
midori_browser_quit_cb	midori/midori-app.c	/^midori_browser_quit_cb (MidoriBrowser* browser,$/;"	f	file:
midori_browser_realize_cb	midori/midori-browser.c	/^midori_browser_realize_cb (GtkStyle*      style,$/;"	f	file:
midori_browser_remove_tab	midori/midori-browser.c	/^midori_browser_remove_tab (MidoriBrowser* browser,$/;"	f
midori_browser_restore_tab	midori/midori-browser.c	/^midori_browser_restore_tab (MidoriBrowser* browser,$/;"	f	file:
midori_browser_save_source	midori/midori-browser.c	/^midori_browser_save_source (const gchar* uri,$/;"	f	file:
midori_browser_save_uri	midori/midori-browser.c	/^midori_browser_save_uri (MidoriBrowser* browser,$/;"	f	file:
midori_browser_session_cb	midori/main.c	/^midori_browser_session_cb (MidoriBrowser* browser,$/;"	f	file:
midori_browser_set_action_visible	midori/midori-browser.c	/^midori_browser_set_action_visible (MidoriBrowser* browser,$/;"	f
midori_browser_set_bookmarks	midori/midori-browser.c	/^midori_browser_set_bookmarks (MidoriBrowser* browser,$/;"	f	file:
midori_browser_set_current_page	midori/midori-browser.c	/^midori_browser_set_current_page (MidoriBrowser* browser,$/;"	f
midori_browser_set_current_page_smartly	midori/midori-browser.c	/^midori_browser_set_current_page_smartly (MidoriBrowser* browser,$/;"	f
midori_browser_set_current_tab	midori/midori-browser.c	/^midori_browser_set_current_tab (MidoriBrowser* browser,$/;"	f
midori_browser_set_current_uri	midori/midori-browser.c	/^midori_browser_set_current_uri (MidoriBrowser* browser,$/;"	f
midori_browser_set_history	midori/midori-browser.c	/^midori_browser_set_history (MidoriBrowser* browser,$/;"	f	file:
midori_browser_set_portrait_mode	midori/midori-browser.c	/^midori_browser_set_portrait_mode (MidoriBrowser* browser,$/;"	f	file:
midori_browser_set_property	midori/midori-browser.c	/^midori_browser_set_property (GObject*      object,$/;"	f	file:
midori_browser_set_tab	midori/midori-browser.h	149;"	d
midori_browser_set_title	midori/midori-browser.c	/^midori_browser_set_title (MidoriBrowser* browser,$/;"	f	file:
midori_browser_settings_notify	midori/midori-browser.c	/^midori_browser_settings_notify (MidoriWebSettings* web_settings,$/;"	f	file:
midori_browser_show_bookmarkbar_notify_value_cb	midori/midori-browser.c	/^midori_browser_show_bookmarkbar_notify_value_cb (MidoriWebSettings* settings,$/;"	f	file:
midori_browser_show_preferences_cb	midori/main.c	/^midori_browser_show_preferences_cb (MidoriBrowser*    browser,$/;"	f	file:
midori_browser_size_allocate_cb	midori/midori-browser.c	/^midori_browser_size_allocate_cb (MidoriBrowser* browser,$/;"	f	file:
midori_browser_speed_dial_get_next_free_slot	midori/midori-browser.c	/^midori_browser_speed_dial_get_next_free_slot (MidoriView* view)$/;"	f	file:
midori_browser_subscribe_to_news_feed	midori/midori-browser.c	/^midori_browser_subscribe_to_news_feed (MidoriBrowser* browser,$/;"	f	file:
midori_browser_switch_tab_cb	midori/midori-browser.c	/^midori_browser_switch_tab_cb (GtkWidget*     menuitem,$/;"	f	file:
midori_browser_tab_destroy_cb	midori/midori-browser.c	/^midori_browser_tab_destroy_cb (GtkWidget*     widget,$/;"	f	file:
midori_browser_tab_leave_notify_event_cb	midori/midori-browser.c	/^midori_browser_tab_leave_notify_event_cb (GtkWidget*        widget,$/;"	f	file:
midori_browser_toolbar_item_button_press_event_cb	midori/midori-browser.c	/^midori_browser_toolbar_item_button_press_event_cb (GtkWidget*      toolitem,$/;"	f	file:
midori_browser_toolbar_popup_context_menu_cb	midori/midori-browser.c	/^midori_browser_toolbar_popup_context_menu_cb (GtkWidget*     widget,$/;"	f	file:
midori_browser_unblock_action	midori/midori-browser.c	/^midori_browser_unblock_action (MidoriBrowser* browser,$/;"	f
midori_browser_update_history_title	midori/midori-browser.c	/^midori_browser_update_history_title (MidoriBrowser* browser,$/;"	f	file:
midori_browser_view_copy_history	midori/midori-browser.c	/^midori_browser_view_copy_history (GtkWidget* view_to,$/;"	f	file:
midori_browser_weak_notify_cb	midori/main.c	/^midori_browser_weak_notify_cb (MidoriBrowser* browser,$/;"	f	file:
midori_browser_window_state_event_cb	midori/midori-browser.c	/^midori_browser_window_state_event_cb (MidoriBrowser*       browser,$/;"	f	file:
midori_cclosure_marshal_BOOLEAN__OBJECT	_build_/default/midori/marshal.c	/^midori_cclosure_marshal_BOOLEAN__OBJECT (GClosure     *closure,$/;"	f
midori_cclosure_marshal_BOOLEAN__OBJECT_OBJECT	_build_/default/midori/marshal.c	/^midori_cclosure_marshal_BOOLEAN__OBJECT_OBJECT (GClosure     *closure,$/;"	f
midori_cclosure_marshal_BOOLEAN__OBJECT_UINT	_build_/default/midori/marshal.c	/^midori_cclosure_marshal_BOOLEAN__OBJECT_UINT (GClosure     *closure,$/;"	f
midori_cclosure_marshal_BOOLEAN__VOID	_build_/default/midori/marshal.c	/^midori_cclosure_marshal_BOOLEAN__VOID (GClosure     *closure,$/;"	f
midori_cclosure_marshal_OBJECT__OBJECT	_build_/default/midori/marshal.c	/^midori_cclosure_marshal_OBJECT__OBJECT (GClosure     *closure,$/;"	f
midori_cclosure_marshal_VOID__BOOLEAN_STRING	_build_/default/midori/marshal.c	/^midori_cclosure_marshal_VOID__BOOLEAN_STRING (GClosure     *closure,$/;"	f
midori_cclosure_marshal_VOID__OBJECT_ENUM_BOOLEAN	_build_/default/midori/marshal.c	/^midori_cclosure_marshal_VOID__OBJECT_ENUM_BOOLEAN (GClosure     *closure,$/;"	f
midori_cclosure_marshal_VOID__OBJECT_INT_INT	_build_/default/midori/marshal.c	/^midori_cclosure_marshal_VOID__OBJECT_INT_INT (GClosure     *closure,$/;"	f
midori_cclosure_marshal_VOID__POINTER_INT	_build_/default/midori/marshal.c	/^midori_cclosure_marshal_VOID__POINTER_INT (GClosure     *closure,$/;"	f
midori_cclosure_marshal_VOID__STRING_BOOLEAN	_build_/default/midori/marshal.c	/^midori_cclosure_marshal_VOID__STRING_BOOLEAN (GClosure     *closure,$/;"	f
midori_cclosure_marshal_VOID__STRING_INT_STRING	_build_/default/midori/marshal.c	/^midori_cclosure_marshal_VOID__STRING_INT_STRING (GClosure     *closure,$/;"	f
midori_cclosure_marshal_VOID__STRING_STRING	_build_/default/midori/marshal.c	/^midori_cclosure_marshal_VOID__STRING_STRING (GClosure     *closure,$/;"	f
midori_clear_flash_cookies_cb	midori/main.c	/^midori_clear_flash_cookies_cb (void)$/;"	f	file:
midori_clear_html5_databases_cb	midori/main.c	/^midori_clear_html5_databases_cb (void)$/;"	f	file:
midori_clear_offline_appcache_cb	midori/main.c	/^midori_clear_offline_appcache_cb (void)$/;"	f	file:
midori_clear_page_icons_cb	midori/main.c	/^midori_clear_page_icons_cb (void)$/;"	f	file:
midori_clear_saved_logins_cb	midori/main.c	/^midori_clear_saved_logins_cb (void)$/;"	f	file:
midori_clear_web_cache_cb	midori/main.c	/^midori_clear_web_cache_cb (void)$/;"	f	file:
midori_clear_web_cookies_cb	midori/main.c	/^midori_clear_web_cookies_cb (void)$/;"	f	file:
midori_crashes_shortly_before_pages_are_loaded	data/faq.html	/^<h4><a name="midori_crashes_shortly_before_pages_are_loaded" id="midori_crashes_shortly_before_pages_are_loaded">Midori crashes shortly before pages are loaded<\/a><\/h4>$/;"	a
midori_crashes_shortly_before_pages_are_loaded	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="midori_crashes_shortly_before_pages_are_loaded" id="midori_crashes_shortly_before_pages_are_loaded">Midori crashes shortly before pages are loaded<\/a><\/h4>$/;"	a
midori_crashes_shortly_before_pages_are_loaded	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="midori_crashes_shortly_before_pages_are_loaded" id="midori_crashes_shortly_before_pages_are_loaded">Midori crashes shortly before pages are loaded<\/a><\/h4>$/;"	a
midori_download_prepare_tooltip_text	midori/sokoke.c	/^midori_download_prepare_tooltip_text (WebKitDownload* download)$/;"	f
midori_dummy_viewable_class_init	midori/midori-panel.c	/^midori_dummy_viewable_class_init (MidoriDummyViewableClass* class)$/;"	f	file:
midori_dummy_viewable_finalize	midori/midori-panel.c	/^midori_dummy_viewable_finalize (GObject* object)$/;"	f	file:
midori_dummy_viewable_get_label	midori/midori-panel.c	/^midori_dummy_viewable_get_label (MidoriViewable* viewable)$/;"	f	file:
midori_dummy_viewable_get_stock_id	midori/midori-panel.c	/^midori_dummy_viewable_get_stock_id (MidoriViewable* viewable)$/;"	f	file:
midori_dummy_viewable_get_toolbar	midori/midori-panel.c	/^midori_dummy_viewable_get_toolbar (MidoriViewable* viewable)$/;"	f	file:
midori_dummy_viewable_iface_init	midori/midori-panel.c	/^midori_dummy_viewable_iface_init (MidoriViewableIface* iface)$/;"	f	file:
midori_dummy_viewable_init	midori/midori-panel.c	/^midori_dummy_viewable_init (MidoriDummyViewable* viewable)$/;"	f	file:
midori_dummy_viewable_new	midori/midori-panel.c	/^midori_dummy_viewable_new (const gchar* stock_id,$/;"	f
midori_extension_activate_cb	midori/midori-extension.c	/^midori_extension_activate_cb (MidoriExtension* extension,$/;"	f	file:
midori_extension_button_release_event_cb	extensions/tab-panel.c	/^midori_extension_button_release_event_cb (GtkWidget*       widget,$/;"	f	file:
midori_extension_can_install_setting	midori/midori-extension.c	90;"	d	file:
midori_extension_class_init	midori/midori-extension.c	/^midori_extension_class_init (MidoriExtensionClass* class)$/;"	f	file:
midori_extension_cursor_or_row_changed_cb	extensions/tab-panel.c	/^midori_extension_cursor_or_row_changed_cb (GtkTreeView*     treeview,$/;"	f	file:
midori_extension_deactivate	midori/midori-extension.c	/^midori_extension_deactivate (MidoriExtension* extension)$/;"	f
midori_extension_finalize	midori/midori-extension.c	/^midori_extension_finalize (GObject* object)$/;"	f	file:
midori_extension_get_app	midori/midori-extension.c	/^midori_extension_get_app (MidoriExtension* extension)$/;"	f
midori_extension_get_boolean	midori/midori-extension.c	/^midori_extension_get_boolean (MidoriExtension* extension,$/;"	f
midori_extension_get_config_dir	midori/midori-extension.c	/^midori_extension_get_config_dir (MidoriExtension* extension)$/;"	f
midori_extension_get_integer	midori/midori-extension.c	/^midori_extension_get_integer (MidoriExtension* extension,$/;"	f
midori_extension_get_property	midori/midori-extension.c	/^midori_extension_get_property (GObject*    object,$/;"	f	file:
midori_extension_get_string	midori/midori-extension.c	/^midori_extension_get_string (MidoriExtension* extension,$/;"	f
midori_extension_get_string_list	midori/midori-extension.c	/^midori_extension_get_string_list (MidoriExtension* extension,$/;"	f
midori_extension_has_preferences	midori/midori-extension.c	/^midori_extension_has_preferences (MidoriExtension* extension)$/;"	f
midori_extension_init	midori/midori-extension.c	/^midori_extension_init (MidoriExtension* extension)$/;"	f	file:
midori_extension_install_boolean	midori/midori-extension.c	/^midori_extension_install_boolean (MidoriExtension* extension,$/;"	f
midori_extension_install_integer	midori/midori-extension.c	/^midori_extension_install_integer (MidoriExtension* extension,$/;"	f
midori_extension_install_string	midori/midori-extension.c	/^midori_extension_install_string (MidoriExtension* extension,$/;"	f
midori_extension_install_string_list	midori/midori-extension.c	/^midori_extension_install_string_list (MidoriExtension* extension,$/;"	f
midori_extension_is_active	midori/midori-extension.c	/^midori_extension_is_active (MidoriExtension* extension)$/;"	f
midori_extension_is_deactivating	midori/midori-extension.c	/^midori_extension_is_deactivating (MidoriExtension* extension)$/;"	f
midori_extension_is_prepared	midori/midori-extension.c	/^midori_extension_is_prepared (MidoriExtension* extension)$/;"	f
midori_extension_key_release_event_cb	extensions/tab-panel.c	/^midori_extension_key_release_event_cb (GtkWidget*       widget,$/;"	f	file:
midori_extension_popup_menu_cb	extensions/tab-panel.c	/^midori_extension_popup_menu_cb (GtkWidget*       widget,$/;"	f	file:
midori_extension_row_activated_cb	extensions/tab-panel.c	/^midori_extension_row_activated_cb (GtkTreeView*       treeview,$/;"	f	file:
midori_extension_set_boolean	midori/midori-extension.c	/^midori_extension_set_boolean (MidoriExtension* extension,$/;"	f
midori_extension_set_integer	midori/midori-extension.c	/^midori_extension_set_integer (MidoriExtension* extension,$/;"	f
midori_extension_set_property	midori/midori-extension.c	/^midori_extension_set_property (GObject*      object,$/;"	f	file:
midori_extension_set_string	midori/midori-extension.c	/^midori_extension_set_string (MidoriExtension* extension,$/;"	f
midori_extension_set_string_list	midori/midori-extension.c	/^midori_extension_set_string_list (MidoriExtension* extension,$/;"	f
midori_extensions_add_item_cb	panels/midori-extensions.c	/^midori_extensions_add_item_cb (KatzeArray*       array,$/;"	f	file:
midori_extensions_cell_renderer_toggled_cb	panels/midori-extensions.c	/^midori_extensions_cell_renderer_toggled_cb (GtkCellRendererToggle* renderer,$/;"	f	file:
midori_extensions_class_init	panels/midori-extensions.c	/^midori_extensions_class_init (MidoriExtensionsClass* class)$/;"	f	file:
midori_extensions_column_class_init	_build_/default/midori/midori-extensions-column.c	/^static void midori_extensions_column_class_init (MidoriExtensionsColumnClass * klass) {$/;"	f	file:
midori_extensions_column_construct	_build_/default/midori/midori-extensions-column.c	/^MidoriExtensionsColumn* midori_extensions_column_construct (GType object_type) {$/;"	f
midori_extensions_column_get_type	_build_/default/midori/midori-extensions-column.c	/^GType midori_extensions_column_get_type (void) {$/;"	f
midori_extensions_column_instance_init	_build_/default/midori/midori-extensions-column.c	/^static void midori_extensions_column_instance_init (MidoriExtensionsColumn * self) {$/;"	f	file:
midori_extensions_column_new	_build_/default/midori/midori-extensions-column.c	/^MidoriExtensionsColumn* midori_extensions_column_new (void) {$/;"	f
midori_extensions_column_parent_class	_build_/default/midori/midori-extensions-column.c	/^static gpointer midori_extensions_column_parent_class = NULL;$/;"	v	file:
midori_extensions_extension_activate_cb	panels/midori-extensions.c	/^midori_extensions_extension_activate_cb (MidoriExtension*  extension,$/;"	f	file:
midori_extensions_extension_deactivate_cb	panels/midori-extensions.c	/^midori_extensions_extension_deactivate_cb (MidoriExtension*  extension,$/;"	f	file:
midori_extensions_finalize	panels/midori-extensions.c	/^midori_extensions_finalize (GObject* object)$/;"	f	file:
midori_extensions_get_label	panels/midori-extensions.c	/^midori_extensions_get_label (MidoriViewable* viewable)$/;"	f	file:
midori_extensions_get_property	panels/midori-extensions.c	/^midori_extensions_get_property (GObject*    object,$/;"	f	file:
midori_extensions_get_stock_id	panels/midori-extensions.c	/^midori_extensions_get_stock_id (MidoriViewable* viewable)$/;"	f	file:
midori_extensions_get_toolbar	panels/midori-extensions.c	/^midori_extensions_get_toolbar (MidoriViewable* extensions)$/;"	f	file:
midori_extensions_init	panels/midori-extensions.c	/^midori_extensions_init (MidoriExtensions* extensions)$/;"	f	file:
midori_extensions_set_property	panels/midori-extensions.c	/^midori_extensions_set_property (GObject*      object,$/;"	f	file:
midori_extensions_tree_sort_func	panels/midori-extensions.c	/^midori_extensions_tree_sort_func (GtkTreeModel* model,$/;"	f	file:
midori_extensions_treeview_button_pressed_cb	panels/midori-extensions.c	/^midori_extensions_treeview_button_pressed_cb (GtkWidget*      view,$/;"	f	file:
midori_extensions_treeview_column_preference_clicked_cb	panels/midori-extensions.c	/^midori_extensions_treeview_column_preference_clicked_cb (GtkWidget*   widget,$/;"	f	file:
midori_extensions_treeview_render_icon_cb	panels/midori-extensions.c	/^midori_extensions_treeview_render_icon_cb (GtkTreeViewColumn* column,$/;"	f	file:
midori_extensions_treeview_render_preferences_cb	panels/midori-extensions.c	/^midori_extensions_treeview_render_preferences_cb (GtkTreeViewColumn* column,$/;"	f	file:
midori_extensions_treeview_render_text_cb	panels/midori-extensions.c	/^midori_extensions_treeview_render_text_cb (GtkTreeViewColumn* column,$/;"	f	file:
midori_extensions_treeview_render_tick_cb	panels/midori-extensions.c	/^midori_extensions_treeview_render_tick_cb (GtkTreeViewColumn* column,$/;"	f	file:
midori_extensions_treeview_row_activated_cb	panels/midori-extensions.c	/^midori_extensions_treeview_row_activated_cb (GtkTreeView*       treeview,$/;"	f	file:
midori_extensions_viewable_iface_init	panels/midori-extensions.c	/^midori_extensions_viewable_iface_init (MidoriViewableIface* iface)$/;"	f	file:
midori_findbar_button_close_clicked_cb	toolbars/midori-findbar.c	/^midori_findbar_button_close_clicked_cb (GtkWidget*     widget,$/;"	f	file:
midori_findbar_case_sensitive	toolbars/midori-findbar.c	/^midori_findbar_case_sensitive (MidoriFindbar* findbar)$/;"	f	file:
midori_findbar_class_init	toolbars/midori-findbar.c	/^midori_findbar_class_init (MidoriFindbarClass* class)$/;"	f	file:
midori_findbar_done	toolbars/midori-findbar.c	/^midori_findbar_done (MidoriFindbar* findbar)$/;"	f	file:
midori_findbar_entry_clear_icon_released_cb	toolbars/midori-findbar.c	/^midori_findbar_entry_clear_icon_released_cb (GtkIconEntry* entry,$/;"	f	file:
midori_findbar_find	toolbars/midori-findbar.c	/^midori_findbar_find (MidoriFindbar* findbar,$/;"	f
midori_findbar_find_key_press_event_cb	toolbars/midori-findbar.c	/^midori_findbar_find_key_press_event_cb (MidoriFindbar* findbar,$/;"	f	file:
midori_findbar_find_text	toolbars/midori-findbar.c	/^midori_findbar_find_text (MidoriFindbar* findbar,$/;"	f
midori_findbar_highlight_toggled_cb	toolbars/midori-findbar.c	/^midori_findbar_highlight_toggled_cb (GtkToggleToolButton* toolitem,$/;"	f	file:
midori_findbar_init	toolbars/midori-findbar.c	/^midori_findbar_init (MidoriFindbar* findbar)$/;"	f	file:
midori_findbar_invoke	toolbars/midori-findbar.c	/^midori_findbar_invoke (MidoriFindbar* findbar)$/;"	f
midori_findbar_next_activate_cb	toolbars/midori-findbar.c	/^midori_findbar_next_activate_cb (GtkWidget*     entry,$/;"	f	file:
midori_findbar_preedit_changed_cb	toolbars/midori-findbar.c	/^midori_findbar_preedit_changed_cb (GtkWidget*     entry,$/;"	f	file:
midori_findbar_previous_clicked_cb	toolbars/midori-findbar.c	/^midori_findbar_previous_clicked_cb (GtkWidget*     entry,$/;"	f	file:
midori_findbar_search_text	toolbars/midori-findbar.c	/^midori_findbar_search_text (MidoriFindbar* findbar,$/;"	f
midori_findbar_set_can_find	toolbars/midori-findbar.c	/^midori_findbar_set_can_find (MidoriFindbar* findbar,$/;"	f
midori_findbar_set_close_button_left	toolbars/midori-findbar.c	/^midori_findbar_set_close_button_left (MidoriFindbar* findbar,$/;"	f
midori_findbar_set_icon	toolbars/midori-findbar.c	/^midori_findbar_set_icon (MidoriFindbar*       findbar,$/;"	f	file:
midori_findbar_text_changed_cb	toolbars/midori-findbar.c	/^midori_findbar_text_changed_cb (GtkWidget*     entry,$/;"	f	file:
midori_findbar_text_focus_out_event_cb	toolbars/midori-findbar.c	/^midori_findbar_text_focus_out_event_cb (GtkWidget*     entry,$/;"	f	file:
midori_get_download_dir	midori/midori-websettings.c	/^midori_get_download_dir (void)$/;"	f	file:
midori_history_add_item_cb	panels/midori-history.c	/^midori_history_add_item_cb (KatzeArray*    array,$/;"	f	file:
midori_history_bookmark_add_cb	panels/midori-history.c	/^midori_history_bookmark_add_cb (GtkWidget*     menuitem,$/;"	f	file:
midori_history_button_release_event_cb	panels/midori-history.c	/^midori_history_button_release_event_cb (GtkWidget*      widget,$/;"	f	file:
midori_history_class_init	panels/midori-history.c	/^midori_history_class_init (MidoriHistoryClass* class)$/;"	f	file:
midori_history_clear_cb	midori/main.c	/^midori_history_clear_cb (KatzeArray* array,$/;"	f	file:
midori_history_clear_cb	panels/midori-history.c	/^midori_history_clear_cb (KatzeArray*    array,$/;"	f	file:
midori_history_clear_clicked_cb	panels/midori-history.c	/^midori_history_clear_clicked_cb (GtkWidget*     toolitem,$/;"	f	file:
midori_history_delete_clicked_cb	panels/midori-history.c	/^midori_history_delete_clicked_cb (GtkWidget*     toolitem,$/;"	f	file:
midori_history_filter_entry_changed_cb	panels/midori-history.c	/^midori_history_filter_entry_changed_cb (GtkEntry*      entry,$/;"	f	file:
midori_history_filter_entry_clear_cb	panels/midori-history.c	/^midori_history_filter_entry_clear_cb (GtkEntry*      entry,$/;"	f	file:
midori_history_filter_timeout_cb	panels/midori-history.c	/^midori_history_filter_timeout_cb (gpointer data)$/;"	f	file:
midori_history_finalize	panels/midori-history.c	/^midori_history_finalize (GObject* object)$/;"	f	file:
midori_history_format_date	panels/midori-history.c	/^midori_history_format_date (KatzeItem *item)$/;"	f	file:
midori_history_get_label	panels/midori-history.c	/^midori_history_get_label (MidoriViewable* viewable)$/;"	f	file:
midori_history_get_property	panels/midori-history.c	/^midori_history_get_property (GObject*    object,$/;"	f	file:
midori_history_get_stock_id	panels/midori-history.c	/^midori_history_get_stock_id (MidoriViewable* viewable)$/;"	f	file:
midori_history_get_toolbar	panels/midori-history.c	/^midori_history_get_toolbar (MidoriViewable* viewable)$/;"	f	file:
midori_history_init	panels/midori-history.c	/^midori_history_init (MidoriHistory* history)$/;"	f	file:
midori_history_initialize	midori/main.c	/^midori_history_initialize (KatzeArray*  array,$/;"	f	file:
midori_history_key_release_event_cb	panels/midori-history.c	/^midori_history_key_release_event_cb (GtkWidget*     widget,$/;"	f	file:
midori_history_open_activate_cb	panels/midori-history.c	/^midori_history_open_activate_cb (GtkWidget*     menuitem,$/;"	f	file:
midori_history_open_in_tab_activate_cb	panels/midori-history.c	/^midori_history_open_in_tab_activate_cb (GtkWidget*     menuitem,$/;"	f	file:
midori_history_open_in_window_activate_cb	panels/midori-history.c	/^midori_history_open_in_window_activate_cb (GtkWidget*     menuitem,$/;"	f	file:
midori_history_popup	panels/midori-history.c	/^midori_history_popup (GtkWidget*      widget,$/;"	f	file:
midori_history_popup_item	panels/midori-history.c	/^midori_history_popup_item (GtkWidget*     menu,$/;"	f	file:
midori_history_popup_menu_cb	panels/midori-history.c	/^midori_history_popup_menu_cb (GtkWidget*     widget,$/;"	f	file:
midori_history_read_from_db	panels/midori-history.c	/^midori_history_read_from_db (MidoriHistory* history,$/;"	f	file:
midori_history_read_from_db_to_model	panels/midori-history.c	/^midori_history_read_from_db_to_model (MidoriHistory* history,$/;"	f	file:
midori_history_remove_item_from_db	panels/midori-history.c	/^midori_history_remove_item_from_db (MidoriHistory* history,$/;"	f	file:
midori_history_row_activated_cb	panels/midori-history.c	/^midori_history_row_activated_cb (GtkTreeView*       treeview,$/;"	f	file:
midori_history_row_collapsed_cb	panels/midori-history.c	/^midori_history_row_collapsed_cb (GtkTreeView *treeview,$/;"	f	file:
midori_history_row_expanded_cb	panels/midori-history.c	/^midori_history_row_expanded_cb (GtkTreeView*   treeview,$/;"	f	file:
midori_history_selection_changed_cb	panels/midori-history.c	/^midori_history_selection_changed_cb (GtkTreeView*   treeview,$/;"	f	file:
midori_history_set_app	panels/midori-history.c	/^midori_history_set_app (MidoriHistory* history,$/;"	f	file:
midori_history_set_property	panels/midori-history.c	/^midori_history_set_property (GObject*      object,$/;"	f	file:
midori_history_terminate	midori/main.c	/^midori_history_terminate (KatzeArray* array,$/;"	f	file:
midori_history_toolbar_update	panels/midori-history.c	/^midori_history_toolbar_update (MidoriHistory *history)$/;"	f	file:
midori_history_treeview_render_icon_cb	panels/midori-history.c	/^midori_history_treeview_render_icon_cb (GtkTreeViewColumn* column,$/;"	f	file:
midori_history_treeview_render_text_cb	panels/midori-history.c	/^midori_history_treeview_render_text_cb (GtkTreeViewColumn* column,$/;"	f	file:
midori_history_viewable_iface_init	panels/midori-history.c	/^midori_history_viewable_iface_init (MidoriViewableIface* iface)$/;"	f	file:
midori_identity_get_type	midori/midori-websettings.c	/^midori_identity_get_type (void)$/;"	f
midori_inactivity_timeout	midori/main.c	/^midori_inactivity_timeout (gpointer data)$/;"	f	file:
midori_load_extensions	midori/main.c	/^midori_load_extensions (gpointer data)$/;"	f	file:
midori_load_session	midori/main.c	/^midori_load_session (gpointer data)$/;"	f	file:
midori_load_soup_session	midori/main.c	/^midori_load_soup_session (gpointer settings)$/;"	f	file:
midori_load_soup_session_full	midori/main.c	/^midori_load_soup_session_full (gpointer settings)$/;"	f	file:
midori_location_action_activate	midori/midori-locationaction.c	/^midori_location_action_activate (GtkAction* action)$/;"	f	file:
midori_location_action_add_item	midori/midori-locationaction.c	/^midori_location_action_add_item (MidoriLocationAction* location_action,$/;"	f
midori_location_action_add_uri	midori/midori-locationaction.c	/^midori_location_action_add_uri (MidoriLocationAction* location_action,$/;"	f
midori_location_action_backspace_cb	midori/midori-locationaction.c	/^midori_location_action_backspace_cb (GtkWidget*            entry,$/;"	f	file:
midori_location_action_button_press_event_cb	midori/midori-locationaction.c	/^midori_location_action_button_press_event_cb (GtkEntry*             entry,$/;"	f	file:
midori_location_action_changed_cb	midori/midori-locationaction.c	/^midori_location_action_changed_cb (GtkEntry*             entry,$/;"	f	file:
midori_location_action_class_init	midori/midori-locationaction.c	/^midori_location_action_class_init (MidoriLocationActionClass* class)$/;"	f	file:
midori_location_action_connect_proxy	midori/midori-locationaction.c	/^midori_location_action_connect_proxy (GtkAction* action,$/;"	f	file:
midori_location_action_create_model	midori/midori-locationaction.c	/^midori_location_action_create_model (void)$/;"	f	file:
midori_location_action_create_tool_item	midori/midori-locationaction.c	/^midori_location_action_create_tool_item (GtkAction* action)$/;"	f	file:
midori_location_action_disconnect_proxy	midori/midori-locationaction.c	/^midori_location_action_disconnect_proxy (GtkAction* action,$/;"	f	file:
midori_location_action_entry_for_proxy	midori/midori-locationaction.c	/^midori_location_action_entry_for_proxy (GtkWidget* proxy)$/;"	f
midori_location_action_finalize	midori/midori-locationaction.c	/^midori_location_action_finalize (GObject* object)$/;"	f	file:
midori_location_action_focus_in_event_cb	midori/midori-locationaction.c	/^midori_location_action_focus_in_event_cb (GtkWidget*   widget,$/;"	f	file:
midori_location_action_focus_out_event_cb	midori/midori-locationaction.c	/^midori_location_action_focus_out_event_cb (GtkWidget*   widget,$/;"	f	file:
midori_location_action_get_progress	midori/midori-locationaction.c	/^midori_location_action_get_progress (MidoriLocationAction* location_action)$/;"	f
midori_location_action_get_property	midori/midori-locationaction.c	/^midori_location_action_get_property (GObject*    object,$/;"	f	file:
midori_location_action_get_text	midori/midori-locationaction.c	/^midori_location_action_get_text (MidoriLocationAction* location_action)$/;"	f
midori_location_action_get_uri	midori/midori-locationaction.c	/^midori_location_action_get_uri (MidoriLocationAction* location_action)$/;"	f
midori_location_action_icon_released_cb	midori/midori-locationaction.c	/^midori_location_action_icon_released_cb (GtkWidget*           widget,$/;"	f	file:
midori_location_action_init	midori/midori-locationaction.c	/^midori_location_action_init (MidoriLocationAction* location_action)$/;"	f	file:
midori_location_action_key_press_event_cb	midori/midori-locationaction.c	/^midori_location_action_key_press_event_cb (GtkEntry*    entry,$/;"	f	file:
midori_location_action_move_cursor_cb	midori/midori-locationaction.c	/^midori_location_action_move_cursor_cb (GtkEntry*             entry,$/;"	f	file:
midori_location_action_paste_clipboard_cb	midori/midori-locationaction.c	/^midori_location_action_paste_clipboard_cb (GtkWidget*            entry,$/;"	f	file:
midori_location_action_paste_proceed_cb	midori/midori-locationaction.c	/^midori_location_action_paste_proceed_cb (GtkWidget* menuitem,$/;"	f	file:
midori_location_action_popdown_completion	midori/midori-locationaction.c	/^midori_location_action_popdown_completion (MidoriLocationAction* location_action)$/;"	f	file:
midori_location_action_populate_popup_cb	midori/midori-locationaction.c	/^midori_location_action_populate_popup_cb (GtkWidget*            entry,$/;"	f	file:
midori_location_action_popup_completion	midori/midori-locationaction.c	/^midori_location_action_popup_completion (MidoriLocationAction* action,$/;"	f	file:
midori_location_action_popup_position	midori/midori-locationaction.c	/^midori_location_action_popup_position (GtkWidget* popup,$/;"	f	file:
midori_location_action_popup_timeout_cb	midori/midori-locationaction.c	/^midori_location_action_popup_timeout_cb (gpointer data)$/;"	f	file:
midori_location_action_preedit_changed_cb	midori/midori-locationaction.c	/^midori_location_action_preedit_changed_cb (GtkWidget*   entry,$/;"	f	file:
midori_location_action_set_icon	midori/midori-locationaction.c	/^midori_location_action_set_icon (MidoriLocationAction* location_action,$/;"	f
midori_location_action_set_icon_for_uri	midori/midori-locationaction.c	/^midori_location_action_set_icon_for_uri (MidoriLocationAction* location_action,$/;"	f
midori_location_action_set_progress	midori/midori-locationaction.c	/^midori_location_action_set_progress (MidoriLocationAction* location_action,$/;"	f
midori_location_action_set_property	midori/midori-locationaction.c	/^midori_location_action_set_property (GObject*      object,$/;"	f	file:
midori_location_action_set_search_engines	midori/midori-locationaction.c	/^midori_location_action_set_search_engines (MidoriLocationAction* location_action,$/;"	f
midori_location_action_set_secondary_icon	midori/midori-locationaction.c	/^midori_location_action_set_secondary_icon (MidoriLocationAction* location_action,$/;"	f
midori_location_action_set_security_hint	midori/midori-locationaction.c	/^midori_location_action_set_security_hint (MidoriLocationAction* location_action,$/;"	f
midori_location_action_set_text	midori/midori-locationaction.c	/^midori_location_action_set_text (MidoriLocationAction* location_action,$/;"	f
midori_location_action_treeview_button_press_cb	midori/midori-locationaction.c	/^midori_location_action_treeview_button_press_cb (GtkWidget*            treeview,$/;"	f	file:
midori_location_entry_render_text_cb	midori/midori-locationaction.c	/^midori_location_entry_render_text_cb (GtkCellLayout*   layout,$/;"	f	file:
midori_log_to_file	midori/main.c	/^midori_log_to_file (const gchar*   log_domain,$/;"	f	file:
midori_new_page_get_type	midori/midori-websettings.c	/^midori_new_page_get_type (void)$/;"	f
midori_new_view_get_type	midori/midori-view.c	/^midori_new_view_get_type (void)$/;"	f
midori_paned_action_class_init	midori/midori-panedaction.c	/^midori_paned_action_class_init (MidoriPanedActionClass* class)$/;"	f	file:
midori_paned_action_create_tool_item	midori/midori-panedaction.c	/^midori_paned_action_create_tool_item (GtkAction* action)$/;"	f	file:
midori_paned_action_finalize	midori/midori-panedaction.c	/^midori_paned_action_finalize (GObject* object)$/;"	f	file:
midori_paned_action_get_child1	midori/midori-panedaction.c	/^midori_paned_action_get_child1 (MidoriPanedAction* paned_action)$/;"	f
midori_paned_action_get_child1_name	midori/midori-panedaction.c	/^midori_paned_action_get_child1_name (MidoriPanedAction* paned_action)$/;"	f
midori_paned_action_get_child2	midori/midori-panedaction.c	/^midori_paned_action_get_child2 (MidoriPanedAction* paned_action)$/;"	f
midori_paned_action_get_child2_name	midori/midori-panedaction.c	/^midori_paned_action_get_child2_name (MidoriPanedAction* paned_action)$/;"	f
midori_paned_action_get_child_by_name	midori/midori-panedaction.c	/^midori_paned_action_get_child_by_name (MidoriPanedAction* paned_action,$/;"	f
midori_paned_action_init	midori/midori-panedaction.c	/^midori_paned_action_init (MidoriPanedAction* paned_action)$/;"	f	file:
midori_paned_action_set_child1	midori/midori-panedaction.c	/^midori_paned_action_set_child1 (MidoriPanedAction* paned_action,$/;"	f
midori_paned_action_set_child2	midori/midori-panedaction.c	/^midori_paned_action_set_child2 (MidoriPanedAction* paned_action,$/;"	f
midori_panel_action_activate_cb	midori/midori-panel.c	/^midori_panel_action_activate_cb (GtkRadioAction* action,$/;"	f	file:
midori_panel_append_page	midori/midori-panel.c	/^midori_panel_append_page (MidoriPanel*    panel,$/;"	f
midori_panel_append_widget	midori/midori-panel.c	/^midori_panel_append_widget (MidoriPanel* panel,$/;"	f
midori_panel_button_align_clicked_cb	midori/midori-panel.c	/^midori_panel_button_align_clicked_cb (GtkWidget*   toolitem,$/;"	f	file:
midori_panel_button_close_clicked_cb	midori/midori-panel.c	/^midori_panel_button_close_clicked_cb (GtkWidget*   toolitem,$/;"	f	file:
midori_panel_class_init	midori/midori-panel.c	/^midori_panel_class_init (MidoriPanelClass* class)$/;"	f	file:
midori_panel_close	midori/midori-panel.c	/^midori_panel_close (MidoriPanel* panel)$/;"	f	file:
midori_panel_close_cb	midori/midori-browser.c	/^midori_panel_close_cb (MidoriPanel*   panel,$/;"	f	file:
midori_panel_construct_menu_item	midori/midori-panel.c	/^midori_panel_construct_menu_item (MidoriPanel*    panel,$/;"	f
midori_panel_construct_tool_item	midori/midori-panel.c	/^midori_panel_construct_tool_item (MidoriPanel*    panel,$/;"	f	file:
midori_panel_cycle_child_focus_cb	midori/midori-browser.c	/^midori_panel_cycle_child_focus_cb (GtkWidget*     hpaned,$/;"	f	file:
midori_panel_destroy_cb	midori/midori-panel.c	/^midori_panel_destroy_cb (MidoriPanel* panel)$/;"	f	file:
midori_panel_detach_page	midori/midori-panel.c	/^midori_panel_detach_page (MidoriPanel* panel,$/;"	f	file:
midori_panel_detached_window_delete_event_cb	midori/midori-panel.c	/^midori_panel_detached_window_delete_event_cb (GtkWidget*   window,$/;"	f	file:
midori_panel_finalize	midori/midori-panel.c	/^midori_panel_finalize (GObject* object)$/;"	f	file:
midori_panel_get_current_page	midori/midori-panel.c	/^midori_panel_get_current_page (MidoriPanel* panel)$/;"	f
midori_panel_get_n_pages	midori/midori-panel.c	/^midori_panel_get_n_pages (MidoriPanel* panel)$/;"	f
midori_panel_get_nth_page	midori/midori-panel.c	/^midori_panel_get_nth_page (MidoriPanel* panel,$/;"	f
midori_panel_get_property	midori/midori-panel.c	/^midori_panel_get_property (GObject*    object,$/;"	f	file:
midori_panel_init	midori/midori-panel.c	/^midori_panel_init (MidoriPanel* panel)$/;"	f	file:
midori_panel_new	midori/midori-panel.c	/^midori_panel_new (void)$/;"	f
midori_panel_notify_page_cb	midori/midori-browser.c	/^midori_panel_notify_page_cb (MidoriPanel*   panel,$/;"	f	file:
midori_panel_notify_position_cb	midori/midori-browser.c	/^midori_panel_notify_position_cb (GObject*       hpaned,$/;"	f	file:
midori_panel_notify_right_aligned_cb	midori/midori-browser.c	/^midori_panel_notify_right_aligned_cb (MidoriPanel*   panel,$/;"	f	file:
midori_panel_notify_show_titles_cb	midori/midori-browser.c	/^midori_panel_notify_show_titles_cb (MidoriPanel*   panel,$/;"	f	file:
midori_panel_page_num	midori/midori-panel.c	/^midori_panel_page_num (MidoriPanel* panel,$/;"	f
midori_panel_set_current_page	midori/midori-panel.c	/^midori_panel_set_current_page (MidoriPanel* panel,$/;"	f
midori_panel_set_property	midori/midori-panel.c	/^midori_panel_set_property (GObject*      object,$/;"	f	file:
midori_panel_set_right_aligned	midori/midori-panel.c	/^midori_panel_set_right_aligned (MidoriPanel* panel,$/;"	f
midori_panel_set_toolbar_style	midori/midori-panel.c	/^midori_panel_set_toolbar_style (MidoriPanel*    panel,$/;"	f
midori_panel_viewable_destroy_cb	midori/midori-panel.c	/^midori_panel_viewable_destroy_cb (GtkWidget*   viewable,$/;"	f	file:
midori_panel_widget_destroy_cb	midori/midori-panel.c	/^midori_panel_widget_destroy_cb (GtkWidget* viewable,$/;"	f	file:
midori_preferences_add_toolbutton	midori/midori-preferences.c	/^midori_preferences_add_toolbutton (GtkWidget*   toolbar,$/;"	f	file:
midori_preferences_class_init	midori/midori-preferences.c	/^midori_preferences_class_init (MidoriPreferencesClass* class)$/;"	f	file:
midori_preferences_finalize	midori/midori-preferences.c	/^midori_preferences_finalize (GObject* object)$/;"	f	file:
midori_preferences_get_property	midori/midori-preferences.c	/^midori_preferences_get_property (GObject*    object,$/;"	f	file:
midori_preferences_homepage_current_clicked_cb	midori/midori-preferences.c	/^midori_preferences_homepage_current_clicked_cb (GtkWidget*         button,$/;"	f	file:
midori_preferences_init	midori/midori-preferences.c	/^midori_preferences_init (MidoriPreferences* preferences)$/;"	f	file:
midori_preferences_new	midori/midori-preferences.c	/^midori_preferences_new (GtkWindow*         parent,$/;"	f
midori_preferences_notify_proxy_type_cb	midori/midori-preferences.c	/^midori_preferences_notify_proxy_type_cb (MidoriWebSettings* settings,$/;"	f	file:
midori_preferences_response_help_cb	midori/midori-browser.c	/^midori_preferences_response_help_cb (GtkWidget*     preferences,$/;"	f	file:
midori_preferences_set_property	midori/midori-preferences.c	/^midori_preferences_set_property (GObject*      object,$/;"	f	file:
midori_preferences_set_settings	midori/midori-preferences.c	/^midori_preferences_set_settings (MidoriPreferences* preferences,$/;"	f
midori_preferences_toolbutton_clicked_cb	midori/midori-preferences.c	/^midori_preferences_toolbutton_clicked_cb (GtkWidget* toolbutton,$/;"	f	file:
midori_preferred_encoding_get_type	midori/midori-websettings.c	/^midori_preferred_encoding_get_type (void)$/;"	f
midori_prepare_uri	midori/main.c	/^midori_prepare_uri (const gchar *uri)$/;"	f	file:
midori_proxy_get_type	midori/midori-websettings.c	/^midori_proxy_get_type (void)$/;"	f
midori_remove_config_file	midori/main.c	/^midori_remove_config_file (gint         clear_prefs,$/;"	f	file:
midori_search_action_activate	midori/midori-searchaction.c	/^midori_search_action_activate (GtkAction* action)$/;"	f	file:
midori_search_action_activate_edit_cb	midori/midori-searchaction.c	/^midori_search_action_activate_edit_cb (GtkTreeView *treeview,$/;"	f	file:
midori_search_action_class_init	midori/midori-searchaction.c	/^midori_search_action_class_init (MidoriSearchActionClass* class)$/;"	f	file:
midori_search_action_connect_proxy	midori/midori-searchaction.c	/^midori_search_action_connect_proxy (GtkAction* action,$/;"	f	file:
midori_search_action_create_tool_item	midori/midori-searchaction.c	/^midori_search_action_create_tool_item (GtkAction* action)$/;"	f	file:
midori_search_action_dialog_add_cb	midori/midori-searchaction.c	/^midori_search_action_dialog_add_cb (GtkWidget*          widget,$/;"	f	file:
midori_search_action_dialog_default_cb	midori/midori-searchaction.c	/^midori_search_action_dialog_default_cb (GtkWidget*          widget,$/;"	f	file:
midori_search_action_dialog_edit_cb	midori/midori-searchaction.c	/^midori_search_action_dialog_edit_cb (GtkWidget*  widget,$/;"	f	file:
midori_search_action_dialog_engines_add_item_cb	midori/midori-searchaction.c	/^midori_search_action_dialog_engines_add_item_cb (KatzeArray* list,$/;"	f	file:
midori_search_action_dialog_engines_remove_item_cb	midori/midori-searchaction.c	/^midori_search_action_dialog_engines_remove_item_cb (KatzeArray* list,$/;"	f	file:
midori_search_action_dialog_move_down_cb	midori/midori-searchaction.c	/^midori_search_action_dialog_move_down_cb (GtkWidget*          widget,$/;"	f	file:
midori_search_action_dialog_move_up_cb	midori/midori-searchaction.c	/^midori_search_action_dialog_move_up_cb (GtkWidget*          widget,$/;"	f	file:
midori_search_action_dialog_remove_cb	midori/midori-searchaction.c	/^midori_search_action_dialog_remove_cb (GtkWidget*          widget,$/;"	f	file:
midori_search_action_dialog_render_icon_cb	midori/midori-searchaction.c	/^midori_search_action_dialog_render_icon_cb (GtkTreeViewColumn* column,$/;"	f	file:
midori_search_action_dialog_render_text	midori/midori-searchaction.c	/^midori_search_action_dialog_render_text (GtkTreeViewColumn* column,$/;"	f	file:
midori_search_action_dialog_render_tick_cb	midori/midori-searchaction.c	/^midori_search_action_dialog_render_tick_cb (GtkTreeViewColumn* column,$/;"	f	file:
midori_search_action_dialog_render_token	midori/midori-searchaction.c	/^midori_search_action_dialog_render_token (GtkTreeViewColumn* column,$/;"	f	file:
midori_search_action_dialog_respnse_cb	midori/midori-searchaction.c	/^midori_search_action_dialog_respnse_cb (GtkWidget* dialog,$/;"	f	file:
midori_search_action_disconnect_proxy	midori/midori-searchaction.c	/^midori_search_action_disconnect_proxy (GtkAction* action,$/;"	f	file:
midori_search_action_editor_name_changed_cb	midori/midori-searchaction.c	/^midori_search_action_editor_name_changed_cb (GtkWidget* entry,$/;"	f	file:
midori_search_action_engine_activate_cb	midori/midori-searchaction.c	/^midori_search_action_engine_activate_cb (GtkWidget*          menuitem,$/;"	f	file:
midori_search_action_engines_add_item_cb	midori/midori-searchaction.c	/^midori_search_action_engines_add_item_cb (KatzeArray*         list,$/;"	f	file:
midori_search_action_engines_remove_item_cb	midori/midori-searchaction.c	/^midori_search_action_engines_remove_item_cb (KatzeArray*         list,$/;"	f	file:
midori_search_action_finalize	midori/midori-searchaction.c	/^midori_search_action_finalize (GObject* object)$/;"	f	file:
midori_search_action_focus_out_event_cb	midori/midori-searchaction.c	/^midori_search_action_focus_out_event_cb (GtkWidget*   widget,$/;"	f	file:
midori_search_action_get_current_item	midori/midori-searchaction.c	/^midori_search_action_get_current_item (MidoriSearchAction* search_action)$/;"	f
midori_search_action_get_default_item	midori/midori-searchaction.c	/^midori_search_action_get_default_item (MidoriSearchAction* search_action)$/;"	f
midori_search_action_get_dialog	midori/midori-searchaction.c	/^midori_search_action_get_dialog (MidoriSearchAction* search_action)$/;"	f
midori_search_action_get_editor	midori/midori-searchaction.c	/^midori_search_action_get_editor (MidoriSearchAction* search_action,$/;"	f	file:
midori_search_action_get_icon	midori/midori-searchaction.c	/^midori_search_action_get_icon (KatzeItem*    item,$/;"	f
midori_search_action_get_property	midori/midori-searchaction.c	/^midori_search_action_get_property (GObject*    object,$/;"	f	file:
midori_search_action_get_search_engines	midori/midori-searchaction.c	/^midori_search_action_get_search_engines (MidoriSearchAction* search_action)$/;"	f
midori_search_action_get_text	midori/midori-searchaction.c	/^midori_search_action_get_text (MidoriSearchAction* search_action)$/;"	f
midori_search_action_icon_released_cb	midori/midori-searchaction.c	/^midori_search_action_icon_released_cb (GtkWidget*           entry,$/;"	f	file:
midori_search_action_init	midori/midori-searchaction.c	/^midori_search_action_init (MidoriSearchAction* search_action)$/;"	f	file:
midori_search_action_key_press_event_cb	midori/midori-searchaction.c	/^midori_search_action_key_press_event_cb (GtkWidget*          entry,$/;"	f	file:
midori_search_action_manage_activate_cb	midori/midori-searchaction.c	/^midori_search_action_manage_activate_cb (GtkWidget*          menuitem,$/;"	f	file:
midori_search_action_scroll_event_cb	midori/midori-searchaction.c	/^midori_search_action_scroll_event_cb (GtkWidget*          entry,$/;"	f	file:
midori_search_action_set_current_item	midori/midori-searchaction.c	/^midori_search_action_set_current_item (MidoriSearchAction* search_action,$/;"	f
midori_search_action_set_default_item	midori/midori-searchaction.c	/^midori_search_action_set_default_item (MidoriSearchAction* search_action,$/;"	f
midori_search_action_set_entry_icon	midori/midori-searchaction.c	/^midori_search_action_set_entry_icon (MidoriSearchAction* search_action,$/;"	f	file:
midori_search_action_set_property	midori/midori-searchaction.c	/^midori_search_action_set_property (GObject*      object,$/;"	f	file:
midori_search_action_set_search_engines	midori/midori-searchaction.c	/^midori_search_action_set_search_engines (MidoriSearchAction* search_action,$/;"	f
midori_search_action_set_text	midori/midori-searchaction.c	/^midori_search_action_set_text (MidoriSearchAction* search_action,$/;"	f
midori_search_action_treeview_destroy_cb	midori/midori-searchaction.c	/^midori_search_action_treeview_destroy_cb (GtkWidget*          treeview,$/;"	f	file:
midori_search_action_treeview_selection_cb	midori/midori-searchaction.c	/^midori_search_action_treeview_selection_cb (GtkTreeSelection*   selection,$/;"	f	file:
midori_search_engines_modify_cb	midori/main.c	/^midori_search_engines_modify_cb (KatzeArray* array,$/;"	f	file:
midori_search_engines_move_item_cb	midori/main.c	/^midori_search_engines_move_item_cb (KatzeArray* array,$/;"	f	file:
midori_security_get_type	midori/midori-view.c	/^midori_security_get_type (void)$/;"	f
midori_session_save_timeout_cb	midori/main.c	/^midori_session_save_timeout_cb (KatzeArray* session)$/;"	f	file:
midori_setup_inactivity_reset	midori/main.c	/^midori_setup_inactivity_reset (MidoriBrowser* browser,$/;"	f	file:
midori_show_diagnostic_dialog	midori/main.c	/^midori_show_diagnostic_dialog (MidoriWebSettings* settings,$/;"	f	file:
midori_soup_session_block_uris_cb	midori/main.c	/^midori_soup_session_block_uris_cb (SoupSession* session,$/;"	f	file:
midori_soup_session_debug	midori/main.c	/^midori_soup_session_debug (SoupSession* session)$/;"	f	file:
midori_soup_session_set_proxy_uri	midori/main.c	/^midori_soup_session_set_proxy_uri (SoupSession* session,$/;"	f	file:
midori_soup_session_settings_accept_language_cb	midori/main.c	/^midori_soup_session_settings_accept_language_cb (SoupSession*       session,$/;"	f	file:
midori_startup_get_type	midori/midori-websettings.c	/^midori_startup_get_type (void)$/;"	f
midori_startup_timer	midori/main.c	1948;"	d	file:
midori_toolbar_style_get_type	midori/midori-websettings.c	/^midori_toolbar_style_get_type (void)$/;"	f
midori_transferbar_add_download_item	toolbars/midori-transferbar.c	/^midori_transferbar_add_download_item (MidoriTransferbar* transferbar,$/;"	f
midori_transferbar_button_destroy_cb	toolbars/midori-transferbar.c	/^midori_transferbar_button_destroy_cb (GtkWidget*    button,$/;"	f	file:
midori_transferbar_check_size	toolbars/midori-transferbar.c	/^midori_transferbar_check_size (GtkWidget* statusbar,$/;"	f
midori_transferbar_class_init	toolbars/midori-transferbar.c	/^midori_transferbar_class_init (MidoriTransferbarClass* class)$/;"	f	file:
midori_transferbar_clear_clicked_cb	toolbars/midori-transferbar.c	/^midori_transferbar_clear_clicked_cb (GtkWidget*         button,$/;"	f	file:
midori_transferbar_confirm_delete	toolbars/midori-transferbar.c	/^midori_transferbar_confirm_delete (MidoriTransferbar* transferbar)$/;"	f
midori_transferbar_download_button_clicked_cb	toolbars/midori-transferbar.c	/^midori_transferbar_download_button_clicked_cb (GtkWidget*    button,$/;"	f	file:
midori_transferbar_download_notify_progress_cb	toolbars/midori-transferbar.c	/^midori_transferbar_download_notify_progress_cb (WebKitDownload* download,$/;"	f	file:
midori_transferbar_download_notify_status_cb	toolbars/midori-transferbar.c	/^midori_transferbar_download_notify_status_cb (WebKitDownload* download,$/;"	f	file:
midori_transferbar_info_free	toolbars/midori-transferbar.c	/^midori_transferbar_info_free (gpointer data)$/;"	f	file:
midori_transferbar_init	toolbars/midori-transferbar.c	/^midori_transferbar_init (MidoriTransferbar* transferbar)$/;"	f	file:
midori_transfers_browser_add_download_cb	panels/midori-transfers.c	/^midori_transfers_browser_add_download_cb (MidoriBrowser*   browser,$/;"	f	file:
midori_transfers_button_clear_clicked_cb	panels/midori-transfers.c	/^midori_transfers_button_clear_clicked_cb (GtkToolItem*    toolitem,$/;"	f	file:
midori_transfers_button_release_event_cb	panels/midori-transfers.c	/^midori_transfers_button_release_event_cb (GtkWidget*      widget,$/;"	f	file:
midori_transfers_class_init	panels/midori-transfers.c	/^midori_transfers_class_init (MidoriTransfersClass* class)$/;"	f	file:
midori_transfers_copy_address_activate_cb	panels/midori-transfers.c	/^midori_transfers_copy_address_activate_cb (GtkWidget*       menuitem,$/;"	f	file:
midori_transfers_download_notify_progress_cb	panels/midori-transfers.c	/^midori_transfers_download_notify_progress_cb (WebKitDownload*  download,$/;"	f	file:
midori_transfers_download_notify_status_cb	panels/midori-transfers.c	/^midori_transfers_download_notify_status_cb (WebKitDownload*  download,$/;"	f	file:
midori_transfers_get_label	panels/midori-transfers.c	/^midori_transfers_get_label (MidoriViewable* viewable)$/;"	f	file:
midori_transfers_get_property	panels/midori-transfers.c	/^midori_transfers_get_property (GObject*    object,$/;"	f	file:
midori_transfers_get_stock_id	panels/midori-transfers.c	/^midori_transfers_get_stock_id (MidoriViewable* viewable)$/;"	f	file:
midori_transfers_get_toolbar	panels/midori-transfers.c	/^midori_transfers_get_toolbar (MidoriViewable* transfers)$/;"	f	file:
midori_transfers_hierarchy_changed_cb	panels/midori-transfers.c	/^midori_transfers_hierarchy_changed_cb (MidoriTransfers* transfers,$/;"	f	file:
midori_transfers_init	panels/midori-transfers.c	/^midori_transfers_init (MidoriTransfers* transfers)$/;"	f	file:
midori_transfers_open_activate_cb	panels/midori-transfers.c	/^midori_transfers_open_activate_cb (GtkWidget*       menuitem,$/;"	f	file:
midori_transfers_open_folder_activate_cb	panels/midori-transfers.c	/^midori_transfers_open_folder_activate_cb (GtkWidget*       menuitem,$/;"	f	file:
midori_transfers_popup	panels/midori-transfers.c	/^midori_transfers_popup (GtkWidget*       widget,$/;"	f	file:
midori_transfers_popup_menu_cb	panels/midori-transfers.c	/^midori_transfers_popup_menu_cb (GtkWidget*       widget,$/;"	f	file:
midori_transfers_popup_menu_item	panels/midori-transfers.c	/^midori_transfers_popup_menu_item (GtkMenu*         menu,$/;"	f	file:
midori_transfers_set_property	panels/midori-transfers.c	/^midori_transfers_set_property (GObject*      object,$/;"	f	file:
midori_transfers_treeview_render_button_cb	panels/midori-transfers.c	/^midori_transfers_treeview_render_button_cb (GtkTreeViewColumn* column,$/;"	f	file:
midori_transfers_treeview_render_icon_cb	panels/midori-transfers.c	/^midori_transfers_treeview_render_icon_cb (GtkTreeViewColumn* column,$/;"	f	file:
midori_transfers_treeview_render_text_cb	panels/midori-transfers.c	/^midori_transfers_treeview_render_text_cb (GtkTreeViewColumn* column,$/;"	f	file:
midori_transfers_treeview_row_activated_cb	panels/midori-transfers.c	/^midori_transfers_treeview_row_activated_cb (GtkTreeView*       treeview,$/;"	f	file:
midori_transfers_viewable_iface_init	panels/midori-transfers.c	/^midori_transfers_viewable_iface_init (MidoriViewableIface* iface)$/;"	f	file:
midori_trash_add_item_cb	midori/main.c	/^midori_trash_add_item_cb (KatzeArray* trash,$/;"	f	file:
midori_trash_add_item_no_save_cb	midori/main.c	/^midori_trash_add_item_no_save_cb (KatzeArray* trash,$/;"	f	file:
midori_trash_remove_item_cb	midori/main.c	/^midori_trash_remove_item_cb (KatzeArray* trash,$/;"	f	file:
midori_uri_class_init	_build_/default/katze/midori-uri.c	/^static void midori_uri_class_init (MidoriURIClass * klass) {$/;"	f	file:
midori_uri_construct	_build_/default/katze/midori-uri.c	/^MidoriURI* midori_uri_construct (GType object_type) {$/;"	f
midori_uri_for_search	_build_/default/katze/midori-uri.c	/^gchar* midori_uri_for_search (const gchar* uri, const gchar* keywords) {$/;"	f
midori_uri_format_for_display	_build_/default/katze/midori-uri.c	/^gchar* midori_uri_format_for_display (const gchar* uri) {$/;"	f
midori_uri_get_fingerprint	_build_/default/katze/midori-uri.c	/^GChecksumType midori_uri_get_fingerprint (const gchar* uri, gchar** checksum, gchar** label) {$/;"	f
midori_uri_get_type	_build_/default/katze/midori-uri.c	/^GType midori_uri_get_type (void) {$/;"	f
midori_uri_instance_init	_build_/default/katze/midori-uri.c	/^static void midori_uri_instance_init (MidoriURI * self) {$/;"	f	file:
midori_uri_is_blank	_build_/default/katze/midori-uri.c	/^gboolean midori_uri_is_blank (const gchar* uri) {$/;"	f
midori_uri_is_email	_build_/default/katze/midori-uri.c	/^gboolean midori_uri_is_email (const gchar* uri) {$/;"	f
midori_uri_is_http	_build_/default/katze/midori-uri.c	/^gboolean midori_uri_is_http (const gchar* uri) {$/;"	f
midori_uri_is_ip_address	_build_/default/katze/midori-uri.c	/^gboolean midori_uri_is_ip_address (const gchar* uri) {$/;"	f
midori_uri_is_location	_build_/default/katze/midori-uri.c	/^gboolean midori_uri_is_location (const gchar* uri) {$/;"	f
midori_uri_is_resource	_build_/default/katze/midori-uri.c	/^gboolean midori_uri_is_resource (const gchar* uri) {$/;"	f
midori_uri_is_valid	_build_/default/katze/midori-uri.c	/^gboolean midori_uri_is_valid (const gchar* uri) {$/;"	f
midori_uri_new	_build_/default/katze/midori-uri.c	/^MidoriURI* midori_uri_new (void) {$/;"	f
midori_uri_parent_class	_build_/default/katze/midori-uri.c	/^static gpointer midori_uri_parent_class = NULL;$/;"	v	file:
midori_uri_parse	_build_/default/katze/midori-uri.c	/^gchar* midori_uri_parse (const gchar* uri, gchar** path) {$/;"	f
midori_uri_parse_hostname	_build_/default/katze/midori-uri.c	/^gchar* midori_uri_parse_hostname (const gchar* uri, gchar** path) {$/;"	f
midori_uri_to_ascii	_build_/default/katze/midori-uri.c	/^gchar* midori_uri_to_ascii (const gchar* uri) {$/;"	f
midori_uri_unescape	_build_/default/katze/midori-uri.c	/^gchar* midori_uri_unescape (const gchar* uri) {$/;"	f
midori_view_activate_action_cb	midori/midori-browser.c	/^midori_view_activate_action_cb (GtkWidget*     view,$/;"	f	file:
midori_view_add_info_bar	midori/midori-view.c	/^midori_view_add_info_bar (MidoriView*    view,$/;"	f
midori_view_add_speed_dial_cb	midori/midori-browser.c	/^midori_view_add_speed_dial_cb (GtkWidget*   menuitem,$/;"	f	file:
midori_view_apply_icon	midori/midori-view.c	/^midori_view_apply_icon (MidoriView*  view,$/;"	f	file:
midori_view_apply_scroll_position	midori/midori-view.c	/^midori_view_apply_scroll_position (MidoriView* view)$/;"	f	file:
midori_view_attach_inspector_cb	midori/midori-browser.c	/^midori_view_attach_inspector_cb (GtkWidget*     view,$/;"	f	file:
midori_view_browser_close_tabs_cb	midori/midori-view.c	/^midori_view_browser_close_tabs_cb (GtkWidget* view,$/;"	f	file:
midori_view_can_copy_clipboard	midori/midori-view.c	/^midori_view_can_copy_clipboard (MidoriView* view)$/;"	f
midori_view_can_cut_clipboard	midori/midori-view.c	/^midori_view_can_cut_clipboard (MidoriView* view)$/;"	f
midori_view_can_go_back	midori/midori-view.c	/^midori_view_can_go_back (MidoriView* view)$/;"	f
midori_view_can_go_forward	midori/midori-view.c	/^midori_view_can_go_forward (MidoriView* view)$/;"	f
midori_view_can_paste_clipboard	midori/midori-view.c	/^midori_view_can_paste_clipboard (MidoriView* view)$/;"	f
midori_view_can_save	midori/midori-view.c	/^midori_view_can_save (MidoriView* view)$/;"	f
midori_view_can_view_source	midori/midori-view.c	/^midori_view_can_view_source (MidoriView* view)$/;"	f
midori_view_can_zoom_in	midori/midori-view.c	/^midori_view_can_zoom_in (MidoriView* view)$/;"	f
midori_view_can_zoom_out	midori/midori-view.c	/^midori_view_can_zoom_out (MidoriView* view)$/;"	f
midori_view_class_init	midori/midori-view.c	/^midori_view_class_init (MidoriViewClass* class)$/;"	f	file:
midori_view_construct_web_view	midori/midori-view.c	/^midori_view_construct_web_view (MidoriView* view)$/;"	f	file:
midori_view_database_response_cb	midori/midori-view.c	/^midori_view_database_response_cb (GtkWidget*         infobar,$/;"	f	file:
midori_view_detach_inspector_cb	midori/midori-browser.c	/^midori_view_detach_inspector_cb (GtkWidget*     view,$/;"	f	file:
midori_view_display_error	midori/midori-view.c	/^midori_view_display_error (MidoriView*     view,$/;"	f	file:
midori_view_download_requested_cb	midori/midori-browser.c	/^midori_view_download_requested_cb (GtkWidget*      view,$/;"	f	file:
midori_view_download_save_as_response_cb	midori/midori-browser.c	/^midori_view_download_save_as_response_cb (GtkWidget*      dialog,$/;"	f	file:
midori_view_ensure_link_uri	midori/midori-view.c	/^midori_view_ensure_link_uri (MidoriView* view,$/;"	f	file:
midori_view_execute_script	midori/midori-view.c	/^midori_view_execute_script (MidoriView*  view,$/;"	f
midori_view_finalize	midori/midori-view.c	/^midori_view_finalize (GObject* object)$/;"	f	file:
midori_view_focus_in_event	midori/midori-view.c	/^midori_view_focus_in_event (GtkWidget*     widget,$/;"	f	file:
midori_view_get_display_title	midori/midori-view.c	/^midori_view_get_display_title (MidoriView* view)$/;"	f
midori_view_get_display_uri	midori/midori-view.c	/^midori_view_get_display_uri (MidoriView* view)$/;"	f
midori_view_get_icon	midori/midori-view.c	/^midori_view_get_icon (MidoriView* view)$/;"	f
midori_view_get_icon_uri	midori/midori-view.c	/^midori_view_get_icon_uri (MidoriView* view)$/;"	f
midori_view_get_label_ellipsize	midori/midori-view.c	/^midori_view_get_label_ellipsize (MidoriView* view)$/;"	f
midori_view_get_link_uri	midori/midori-view.c	/^midori_view_get_link_uri (MidoriView* view)$/;"	f
midori_view_get_load_status	midori/midori-view.c	/^midori_view_get_load_status (MidoriView* view)$/;"	f
midori_view_get_memory	midori/midori-view.c	/^static GHashTable* midori_view_get_memory (void)$/;"	f	file:
midori_view_get_next_page	midori/midori-view.c	/^midori_view_get_next_page (MidoriView* view)$/;"	f
midori_view_get_previous_page	midori/midori-view.c	/^midori_view_get_previous_page (MidoriView* view)$/;"	f
midori_view_get_progress	midori/midori-view.c	/^midori_view_get_progress (MidoriView* view)$/;"	f
midori_view_get_property	midori/midori-view.c	/^midori_view_get_property (GObject*    object,$/;"	f	file:
midori_view_get_proxy_item	midori/midori-view.c	/^midori_view_get_proxy_item (MidoriView* view)$/;"	f
midori_view_get_proxy_menu_item	midori/midori-view.c	/^midori_view_get_proxy_menu_item (MidoriView* view)$/;"	f
midori_view_get_proxy_tab_label	midori/midori-view.c	/^midori_view_get_proxy_tab_label (MidoriView* view)$/;"	f
midori_view_get_related_page	midori/midori-view.c	/^midori_view_get_related_page (MidoriView*  view,$/;"	f	file:
midori_view_get_security	midori/midori-view.c	/^midori_view_get_security (MidoriView* view)$/;"	f
midori_view_get_selected_text	midori/midori-view.c	/^midori_view_get_selected_text (MidoriView* view)$/;"	f
midori_view_get_snapshot	midori/midori-view.c	/^midori_view_get_snapshot (MidoriView* view,$/;"	f
midori_view_get_tab_menu	midori/midori-view.c	/^midori_view_get_tab_menu (MidoriView* view)$/;"	f
midori_view_get_web_view	midori/midori-view.c	/^midori_view_get_web_view        (MidoriView*        view)$/;"	f
midori_view_get_zoom_level	midori/midori-view.c	/^midori_view_get_zoom_level (MidoriView* view)$/;"	f
midori_view_go_back	midori/midori-view.c	/^midori_view_go_back (MidoriView* view)$/;"	f
midori_view_go_forward	midori/midori-view.c	/^midori_view_go_forward (MidoriView* view)$/;"	f
midori_view_hadjustment_notify_value_cb	midori/midori-view.c	/^midori_view_hadjustment_notify_value_cb (GtkAdjustment* hadjustment,$/;"	f	file:
midori_view_has_selection	midori/midori-view.c	/^midori_view_has_selection (MidoriView* view)$/;"	f
midori_view_info_bar_button_cb	midori/midori-view.c	/^midori_view_info_bar_button_cb (GtkWidget* button,$/;"	f	file:
midori_view_infobar_response_cb	midori/midori-view.c	/^midori_view_infobar_response_cb (GtkWidget* infobar,$/;"	f	file:
midori_view_init	midori/midori-view.c	/^midori_view_init (MidoriView* view)$/;"	f	file:
midori_view_insert_menu_item	midori/midori-view.c	/^midori_view_insert_menu_item (GtkMenuShell* menu,$/;"	f	file:
midori_view_inspector_window_key_press_event_cb	midori/midori-view.c	/^midori_view_inspector_window_key_press_event_cb (GtkWidget*   window,$/;"	f	file:
midori_view_is_blank	midori/midori-view.c	/^midori_view_is_blank (MidoriView*  view)$/;"	f
midori_view_item_meta_data_changed	midori/midori-view.c	/^midori_view_item_meta_data_changed (KatzeItem*   item,$/;"	f	file:
midori_view_load_alternate_string	midori/midori-view.c	/^midori_view_load_alternate_string (MidoriView*     view,$/;"	f	file:
midori_view_location_response_cb	midori/midori-view.c	/^midori_view_location_response_cb (GtkWidget*                       infobar,$/;"	f	file:
midori_view_mark_text_matches	midori/midori-view.c	/^midori_view_mark_text_matches (MidoriView*  view,$/;"	f
midori_view_mime_icon	midori/midori-view.c	/^midori_view_mime_icon (MidoriView*   view,$/;"	f	file:
midori_view_new	midori/midori-view.c	/^midori_view_new (KatzeNet* net)$/;"	f
midori_view_new_tab_cb	midori/midori-browser.c	/^midori_view_new_tab_cb (GtkWidget*     view,$/;"	f	file:
midori_view_new_view_cb	midori/midori-browser.c	/^midori_view_new_view_cb (GtkWidget*     view,$/;"	f	file:
midori_view_new_window_cb	midori/midori-browser.c	/^midori_view_new_window_cb (GtkWidget*     view,$/;"	f	file:
midori_view_new_with_item	midori/midori-view.c	/^midori_view_new_with_item (KatzeItem*         item,$/;"	f
midori_view_new_with_title	midori/midori-view.c	/^midori_view_new_with_title (const gchar*       title,$/;"	f
midori_view_notify_hadjustment_cb	midori/midori-view.c	/^midori_view_notify_hadjustment_cb (MidoriView* view,$/;"	f	file:
midori_view_notify_icon_cb	midori/midori-browser.c	/^midori_view_notify_icon_cb (MidoriView*    view,$/;"	f	file:
midori_view_notify_load_status_cb	midori/midori-browser.c	/^midori_view_notify_load_status_cb (GtkWidget*      widget,$/;"	f	file:
midori_view_notify_minimized_cb	midori/midori-browser.c	/^midori_view_notify_minimized_cb (GtkWidget*     widget,$/;"	f	file:
midori_view_notify_progress_cb	midori/midori-browser.c	/^midori_view_notify_progress_cb (GtkWidget*     view,$/;"	f	file:
midori_view_notify_statusbar_text_cb	midori/midori-browser.c	/^midori_view_notify_statusbar_text_cb (GtkWidget*     view,$/;"	f	file:
midori_view_notify_title_cb	midori/midori-browser.c	/^midori_view_notify_title_cb (GtkWidget*     widget,$/;"	f	file:
midori_view_notify_uri_cb	midori/midori-browser.c	/^midori_view_notify_uri_cb (GtkWidget*     widget,$/;"	f	file:
midori_view_notify_vadjustment_cb	midori/midori-view.c	/^midori_view_notify_vadjustment_cb (MidoriView* view,$/;"	f	file:
midori_view_notify_zoom_level_cb	midori/midori-browser.c	/^midori_view_notify_zoom_level_cb (GtkWidget*     view,$/;"	f	file:
midori_view_populate_popup	midori/midori-view.c	/^midori_view_populate_popup (MidoriView* view,$/;"	f
midori_view_print	midori/midori-view.c	/^midori_view_print (MidoriView* view)$/;"	f
midori_view_print_create_custom_widget_cb	midori/midori-view.c	/^midori_view_print_create_custom_widget_cb (GtkPrintOperation* operation,$/;"	f	file:
midori_view_print_response_cb	midori/midori-view.c	/^midori_view_print_response_cb (GtkWidget* dialog,$/;"	f	file:
midori_view_save_as_cb	midori/midori-browser.c	/^midori_view_save_as_cb (GtkWidget*   menuitem,$/;"	f	file:
midori_view_save_speed_dial_config	midori/midori-view.c	/^midori_view_save_speed_dial_config (MidoriView* view,$/;"	f
midori_view_script_response_cb	midori/midori-view.c	/^midori_view_script_response_cb (GtkWidget*  infobar,$/;"	f	file:
midori_view_search_text	midori/midori-view.c	/^midori_view_search_text (MidoriView*  view,$/;"	f
midori_view_search_text_cb	midori/midori-browser.c	/^midori_view_search_text_cb (GtkWidget*     view,$/;"	f	file:
midori_view_set_highlight_text_matches	midori/midori-view.c	/^midori_view_set_highlight_text_matches (MidoriView* view,$/;"	f
midori_view_set_property	midori/midori-view.c	/^midori_view_set_property (GObject*      object,$/;"	f	file:
midori_view_set_settings	midori/midori-view.c	/^midori_view_set_settings (MidoriView*        view,$/;"	f
midori_view_set_title	midori/midori-view.c	/^midori_view_set_title (MidoriView* view, const gchar* title)$/;"	f	file:
midori_view_set_uri	midori/midori-view.c	/^midori_view_set_uri (MidoriView*  view,$/;"	f
midori_view_set_zoom_level	midori/midori-view.c	/^midori_view_set_zoom_level (MidoriView* view,$/;"	f
midori_view_settings_notify_cb	midori/midori-view.c	/^midori_view_settings_notify_cb (MidoriWebSettings* settings,$/;"	f	file:
midori_view_speed_dial_get_thumb	midori/midori-view.c	/^midori_view_speed_dial_get_thumb (MidoriView* view,$/;"	f	file:
midori_view_speed_dial_save	midori/midori-view.c	/^midori_view_speed_dial_save (MidoriView*  view,$/;"	f	file:
midori_view_stop_loading	midori/midori-view.c	/^midori_view_stop_loading (MidoriView* view)$/;"	f
midori_view_tab_close_clicked	midori/midori-view.c	/^midori_view_tab_close_clicked (GtkWidget* tab_close,$/;"	f	file:
midori_view_tab_icon_style_set_cb	midori/midori-view.c	/^midori_view_tab_icon_style_set_cb (GtkWidget* tab_close,$/;"	f	file:
midori_view_tab_label_button_press_event	midori/midori-view.c	/^midori_view_tab_label_button_press_event (GtkWidget*      tab_label,$/;"	f	file:
midori_view_tab_label_data_received	midori/midori-view.c	/^static void midori_view_tab_label_data_received (GtkWidget* widget,$/;"	f	file:
midori_view_tab_label_menu_close_cb	midori/midori-view.c	/^midori_view_tab_label_menu_close_cb (GtkWidget* menuitem,$/;"	f	file:
midori_view_tab_label_menu_close_other_tabs_cb	midori/midori-view.c	/^midori_view_tab_label_menu_close_other_tabs_cb (GtkWidget* menuitem,$/;"	f	file:
midori_view_tab_label_menu_duplicate_tab_cb	midori/midori-view.c	/^midori_view_tab_label_menu_duplicate_tab_cb (GtkWidget*  menuitem,$/;"	f	file:
midori_view_tab_label_menu_minimize_tab_cb	midori/midori-view.c	/^midori_view_tab_label_menu_minimize_tab_cb (GtkWidget*  menuitem,$/;"	f	file:
midori_view_tab_label_menu_window_new_cb	midori/midori-view.c	/^midori_view_tab_label_menu_window_new_cb (GtkWidget* menuitem,$/;"	f	file:
midori_view_tab_label_parent_set	midori/midori-view.c	/^midori_view_tab_label_parent_set (GtkWidget*  tab_label,$/;"	f	file:
midori_view_unmark_text_matches	midori/midori-view.c	/^midori_view_unmark_text_matches (MidoriView* view)$/;"	f
midori_view_update_icon	midori/midori-view.c	/^midori_view_update_icon (MidoriView* view,$/;"	f	file:
midori_view_update_load_status	midori/midori-view.c	/^midori_view_update_load_status (MidoriView*      view,$/;"	f	file:
midori_view_update_tab_title	midori/midori-view.c	/^midori_view_update_tab_title (GtkWidget* label,$/;"	f	file:
midori_view_vadjustment_notify_value_cb	midori/midori-view.c	/^midori_view_vadjustment_notify_value_cb (GtkAdjustment* vadjustment,$/;"	f	file:
midori_view_web_inspector_attach_window_cb	midori/midori-view.c	/^midori_view_web_inspector_attach_window_cb (gpointer    inspector,$/;"	f	file:
midori_view_web_inspector_close_window_cb	midori/midori-view.c	/^midori_view_web_inspector_close_window_cb (gpointer    inspector,$/;"	f	file:
midori_view_web_inspector_construct_window	midori/midori-view.c	/^midori_view_web_inspector_construct_window (gpointer       inspector,$/;"	f	file:
midori_view_web_inspector_detach_window_cb	midori/midori-view.c	/^midori_view_web_inspector_detach_window_cb (gpointer    inspector,$/;"	f	file:
midori_view_web_inspector_inspect_web_view_cb	midori/midori-view.c	/^midori_view_web_inspector_inspect_web_view_cb (gpointer       inspector,$/;"	f	file:
midori_view_web_inspector_show_window_cb	midori/midori-view.c	/^midori_view_web_inspector_show_window_cb (WebKitWebInspector* inspector,$/;"	f	file:
midori_view_web_view_database_quota_exceeded_cb	midori/midori-view.c	/^midori_view_web_view_database_quota_exceeded_cb (WebKitWebView*     web_view,$/;"	f	file:
midori_view_web_view_geolocation_decision_cb	midori/midori-view.c	/^midori_view_web_view_geolocation_decision_cb (WebKitWebView*                   web_view,$/;"	f	file:
midori_view_web_view_get_snapshot	midori/midori-view.c	/^midori_view_web_view_get_snapshot (GtkWidget* web_view,$/;"	f	file:
midori_view_web_view_leave_notify_event_cb	midori/midori-view.c	/^midori_view_web_view_leave_notify_event_cb (WebKitWebView*    web_view,$/;"	f	file:
midori_view_web_view_navigation_decision_cb	midori/midori-view.c	/^midori_view_web_view_navigation_decision_cb (WebKitWebView*             web_view,$/;"	f	file:
midori_view_web_view_print_requested_cb	midori/midori-view.c	/^midori_view_web_view_print_requested_cb (GtkWidget*      web_view,$/;"	f	file:
midori_view_web_view_resource_request_cb	midori/midori-view.c	/^midori_view_web_view_resource_request_cb (WebKitWebView*         web_view,$/;"	f	file:
midori_view_web_view_script_alert_cb	midori/midori-view.c	/^midori_view_web_view_script_alert_cb (GtkWidget*      web_view,$/;"	f	file:
midori_view_web_view_tap_and_hold_cb	midori/midori-view.c	/^midori_view_web_view_tap_and_hold_cb (GtkWidget*  web_view,$/;"	f	file:
midori_viewable_base_finalize	midori/midori-viewable.c	/^midori_viewable_base_finalize (MidoriViewableIface* iface)$/;"	f	file:
midori_viewable_base_init	midori/midori-viewable.c	/^midori_viewable_base_init (MidoriViewableIface* iface)$/;"	f	file:
midori_viewable_default_get_label	midori/midori-viewable.c	/^midori_viewable_default_get_label (MidoriViewable* viewable)$/;"	f	file:
midori_viewable_default_get_stock_id	midori/midori-viewable.c	/^midori_viewable_default_get_stock_id (MidoriViewable* viewable)$/;"	f	file:
midori_viewable_default_get_toolbar	midori/midori-viewable.c	/^midori_viewable_default_get_toolbar (MidoriViewable* viewable)$/;"	f	file:
midori_viewable_get_label	midori/midori-viewable.c	/^midori_viewable_get_label (MidoriViewable* viewable)$/;"	f
midori_viewable_get_stock_id	midori/midori-viewable.c	/^midori_viewable_get_stock_id (MidoriViewable* viewable)$/;"	f
midori_viewable_get_toolbar	midori/midori-viewable.c	/^midori_viewable_get_toolbar (MidoriViewable* viewable)$/;"	f
midori_viewable_get_type	midori/midori-viewable.c	/^midori_viewable_get_type (void)$/;"	f
midori_web_app_browser_new_window_cb	midori/main.c	/^midori_web_app_browser_new_window_cb (MidoriBrowser* browser,$/;"	f	file:
midori_web_app_browser_notify_load_status_cb	midori/main.c	/^midori_web_app_browser_notify_load_status_cb (MidoriBrowser* browser,$/;"	f	file:
midori_web_settings_add_style	midori/midori-websettings.c	/^midori_web_settings_add_style (MidoriWebSettings* settings,$/;"	f
midori_web_settings_class_init	midori/midori-websettings.c	/^midori_web_settings_class_init (MidoriWebSettingsClass* class)$/;"	f	file:
midori_web_settings_finalize	midori/midori-websettings.c	/^midori_web_settings_finalize (GObject* object)$/;"	f	file:
midori_web_settings_get_property	midori/midori-websettings.c	/^midori_web_settings_get_property (GObject*    object,$/;"	f	file:
midori_web_settings_get_system_name	midori/midori-websettings.c	/^midori_web_settings_get_system_name (gchar** architecture,$/;"	f
midori_web_settings_init	midori/midori-websettings.c	/^midori_web_settings_init (MidoriWebSettings* web_settings)$/;"	f	file:
midori_web_settings_new	midori/midori-websettings.c	/^midori_web_settings_new (void)$/;"	f
midori_web_settings_process_stylesheets	midori/midori-websettings.c	/^midori_web_settings_process_stylesheets (MidoriWebSettings* settings,$/;"	f	file:
midori_web_settings_remove_style	midori/midori-websettings.c	/^midori_web_settings_remove_style (MidoriWebSettings* settings,$/;"	f
midori_web_settings_set_property	midori/midori-websettings.c	/^midori_web_settings_set_property (GObject*      object,$/;"	f	file:
midori_web_view_menu_background_tab_activate_cb	midori/midori-view.c	/^midori_web_view_menu_background_tab_activate_cb (GtkWidget*  widget,$/;"	f	file:
midori_web_view_menu_copy_activate_cb	midori/midori-view.c	/^midori_web_view_menu_copy_activate_cb (GtkWidget*  widget,$/;"	f	file:
midori_web_view_menu_image_copy_activate_cb	midori/midori-view.c	/^midori_web_view_menu_image_copy_activate_cb (GtkWidget*  widget,$/;"	f	file:
midori_web_view_menu_image_new_tab_activate_cb	midori/midori-view.c	/^midori_web_view_menu_image_new_tab_activate_cb (GtkWidget*  widget,$/;"	f	file:
midori_web_view_menu_image_save_activate_cb	midori/midori-view.c	/^midori_web_view_menu_image_save_activate_cb (GtkWidget*  widget,$/;"	f	file:
midori_web_view_menu_inspect_element_activate_cb	midori/midori-view.c	/^midori_web_view_menu_inspect_element_activate_cb (GtkWidget*  widget,$/;"	f	file:
midori_web_view_menu_link_copy_activate_cb	midori/midori-view.c	/^midori_web_view_menu_link_copy_activate_cb (GtkWidget*  widget,$/;"	f	file:
midori_web_view_menu_new_tab_activate_cb	midori/midori-view.c	/^midori_web_view_menu_new_tab_activate_cb (GtkWidget*  widget,$/;"	f	file:
midori_web_view_menu_new_window_activate_cb	midori/midori-view.c	/^midori_web_view_menu_new_window_activate_cb (GtkWidget*  widget,$/;"	f	file:
midori_web_view_menu_save_activate_cb	midori/midori-view.c	/^midori_web_view_menu_save_activate_cb (GtkWidget*  widget,$/;"	f	file:
midori_web_view_menu_search_web_activate_cb	midori/midori-view.c	/^midori_web_view_menu_search_web_activate_cb (GtkWidget*  widget,$/;"	f	file:
midori_web_view_menu_video_copy_activate_cb	midori/midori-view.c	/^midori_web_view_menu_video_copy_activate_cb (GtkWidget*  widget,$/;"	f	file:
midori_web_view_menu_video_save_activate_cb	midori/midori-view.c	/^midori_web_view_menu_video_save_activate_cb (GtkWidget*  widget,$/;"	f	file:
midori_web_view_menu_web_app_activate_cb	midori/midori-view.c	/^midori_web_view_menu_web_app_activate_cb (GtkWidget*  widget,$/;"	f	file:
midori_web_view_notify_icon_uri_cb	midori/midori-view.c	/^midori_web_view_notify_icon_uri_cb (WebKitWebView* web_view,$/;"	f	file:
midori_window_state_get_type	midori/midori-websettings.c	/^midori_window_state_get_type (void)$/;"	f
mime_type	katze/katze-net.h	/^    gchar* mime_type;$/;"	m	struct:__anon34
mime_type	midori/midori-view.c	/^    gchar* mime_type;$/;"	m	struct:_MidoriView	file:
minimized	midori/midori-view.c	/^    gboolean minimized;$/;"	m	struct:_MidoriView	file:
ml_hook	waf-modules/wafadmin/Tools/ocaml.py	/^def ml_hook(self,node):$/;"	f
mlc_hook	waf-modules/wafadmin/Tools/ocaml.py	/^def mlc_hook(self,node):$/;"	f
mli_hook	waf-modules/wafadmin/Tools/ocaml.py	/^def mli_hook(self,node):$/;"	f
mll_hook	waf-modules/wafadmin/Tools/ocaml.py	/^def mll_hook(self,node):$/;"	f
mly_hook	waf-modules/wafadmin/Tools/ocaml.py	/^def mly_hook(self,node):$/;"	f
mode	tools/check-style	/^                mode = 'diff'$/;"	v
mode	tools/check-style	/^        mode = ''$/;"	v
modif	waf-modules/wafadmin/py3kfixes.py	/^def modif(dir,name,fun):$/;"	f
modifier_count	_build_/default/extensions/history-list.c	/^	guint modifier_count;$/;"	m	struct:_HistoryListManager	file:
motion_notify_event	katze/katze-scrolled.c	/^motion_notify_event (GtkWidget*      widget,$/;"	f	file:
mouse_gesture_clear	extensions/mouse-gestures.c	/^void mouse_gesture_clear (MouseGesture *g)$/;"	f
mouse_gesture_new	extensions/mouse-gestures.c	/^MouseGesture* mouse_gesture_new (void)$/;"	f
mouse_gestures	data/faq.html	/^<h2 class="sectionedit15"><a name="mouse_gestures" id="mouse_gestures">Mouse Gestures<\/a><\/h2>$/;"	a
mouse_gestures	debian/midori/usr/share/doc/midori/faq.html	/^<h2 class="sectionedit15"><a name="mouse_gestures" id="mouse_gestures">Mouse Gestures<\/a><\/h2>$/;"	a
mouse_gestures	debian/tmp/usr/share/doc/midori/faq.html	/^<h2 class="sectionedit15"><a name="mouse_gestures" id="mouse_gestures">Mouse Gestures<\/a><\/h2>$/;"	a
mouse_gestures_activate_action	extensions/mouse-gestures.c	/^mouse_gestures_activate_action (MidoriView*  view,$/;"	f	file:
mouse_gestures_activate_cb	extensions/mouse-gestures.c	/^mouse_gestures_activate_cb (MidoriExtension* extension,$/;"	f	file:
mouse_gestures_add_tab_cb	extensions/mouse-gestures.c	/^mouse_gestures_add_tab_cb (MidoriBrowser*   browser,$/;"	f	file:
mouse_gestures_add_tab_foreach_cb	extensions/mouse-gestures.c	/^mouse_gestures_add_tab_foreach_cb (MidoriView*      view,$/;"	f	file:
mouse_gestures_app_add_browser_cb	extensions/mouse-gestures.c	/^mouse_gestures_app_add_browser_cb (MidoriApp*       app,$/;"	f	file:
mouse_gestures_button_press_event_cb	extensions/mouse-gestures.c	/^mouse_gestures_button_press_event_cb (GtkWidget*     web_view,$/;"	f	file:
mouse_gestures_button_release_event_cb	extensions/mouse-gestures.c	/^mouse_gestures_button_release_event_cb (GtkWidget*      web_view,$/;"	f	file:
mouse_gestures_deactivate_cb	extensions/mouse-gestures.c	/^mouse_gestures_deactivate_cb (MidoriExtension* extension,$/;"	f	file:
mouse_gestures_deactivate_tabs	extensions/mouse-gestures.c	/^mouse_gestures_deactivate_tabs (MidoriView*    view,$/;"	f	file:
mouse_gestures_motion_notify_event_cb	extensions/mouse-gestures.c	/^mouse_gestures_motion_notify_event_cb (GtkWidget*     web_view,$/;"	f	file:
mousehole	data/faq.html	/^<h4><a name="mousehole" id="mousehole">Mousehole<\/a><\/h4>$/;"	a
mousehole	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="mousehole" id="mousehole">Mousehole<\/a><\/h4>$/;"	a
mousehole	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="mousehole" id="mousehole">Mousehole<\/a><\/h4>$/;"	a
move_cursor	waf-modules/wafadmin/ansiterm.py	/^		def move_cursor(self,x_offset=0,y_offset=0):$/;"	m	class:AnsiTerm
move_down	waf-modules/wafadmin/ansiterm.py	/^		def move_down(self,param):$/;"	m	class:AnsiTerm
move_item	katze/katze-array.c	/^    (*move_item)              (KatzeArray* array,$/;"	m	struct:_KatzeArrayClass	file:
move_left	waf-modules/wafadmin/ansiterm.py	/^		def move_left(self,param):$/;"	m	class:AnsiTerm
move_right	waf-modules/wafadmin/ansiterm.py	/^		def move_right(self,param):$/;"	m	class:AnsiTerm
move_up	waf-modules/wafadmin/ansiterm.py	/^		def move_up(self,param):$/;"	m	class:AnsiTerm
msg	waf-modules/wafadmin/Configure.py	/^	def msg(self,msg,result,color=None):$/;"	m	class:ConfigurationContext
msgfmt_taskgen	waf-modules/wafadmin/Tools/kde4.py	/^class msgfmt_taskgen(TaskGen.task_gen):$/;"	c
msvc_common_flags	waf-modules/wafadmin/Tools/msvc.py	/^def msvc_common_flags(conf):$/;"	f
mswindows	waf-modules/wafadmin/pproc.py	/^mswindows=(sys.platform=="win32")$/;"	v
my_gethostbyname	midori/socket.c	/^struct hostent *my_gethostbyname(const gchar *hostname)$/;"	f
my_inet_aton	midori/socket.c	/^static gint my_inet_aton(const gchar *hostname, struct in_addr *inp)$/;"	f	file:
myfun	waf-modules/wafadmin/Utils.py	/^		def myfun():$/;"	f	function:get_term_cols
n1_regexp	waf-modules/wafadmin/Tools/gnome.py	/^n1_regexp=re.compile('<refentrytitle>(.*)<\/refentrytitle>',re.M)$/;"	v
n2_regexp	waf-modules/wafadmin/Tools/gnome.py	/^n2_regexp=re.compile('<manvolnum>(.*)<\/manvolnum>',re.M)$/;"	v
nada	waf-modules/wafadmin/Utils.py	/^def nada(*k,**kw):$/;"	f
name	katze/katze-item.h	/^    gchar* name;$/;"	m	struct:_KatzeItem
name	midori/midori-app.c	/^    gchar* name;$/;"	m	struct:_MidoriApp	file:
name	midori/midori-extension.c	/^    gchar* name;$/;"	m	struct:_MidoriExtensionPrivate	file:
name	midori/midori-extension.c	/^    gchar* name;$/;"	m	struct:__anon69	file:
name	midori/midori-extension.c	/^    gchar* name;$/;"	m	struct:__anon70	file:
name	midori/midori-extension.c	/^    gchar* name;$/;"	m	struct:__anon71	file:
name	midori/midori-extension.c	/^    gchar* name;$/;"	m	struct:__anon72	file:
name	midori/midori-panedaction.c	/^    gchar* name;$/;"	m	struct:_MidoriPanedActionChild	file:
name	midori/sokoke.h	/^    gchar* name;$/;"	m	struct:__anon53
name	tools/check-style	/^    name = os.path.basename (sys.argv[0])$/;"	v
name	waf-modules/wafadmin/Tools/python.py	/^		name='python'+env['PYTHON_VERSION'].replace('.','')$/;"	v
name	waf-modules/wafadmin/Tools/python.py	/^	name='python'+env['PYTHON_VERSION']$/;"	v
name_to_obj	waf-modules/wafadmin/Build.py	/^	def name_to_obj(self,name,env):$/;"	m	class:BuildContext
name_to_obj	waf-modules/wafadmin/TaskGen.py	/^	def name_to_obj(self,name):$/;"	m	class:task_gen
nasm_file	waf-modules/wafadmin/Tools/nasm.py	/^def nasm_file(self,node):$/;"	f
nasm_str	waf-modules/wafadmin/Tools/nasm.py	/^nasm_str='${NASM} ${NASM_FLAGS} ${NASM_INCLUDES} ${SRC} -o ${TGT}'$/;"	v
native_lst	waf-modules/wafadmin/Tools/ocaml.py	/^native_lst=['native','all','c_object']$/;"	v
navigationbar	midori/midori-browser.c	/^    GtkWidget* navigationbar;$/;"	m	struct:_MidoriBrowser	file:
new_task_gen	waf-modules/wafadmin/Build.py	/^	def new_task_gen(self,*k,**kw):$/;"	m	class:BuildContext
new_window	midori/midori-browser.h	/^    (*new_window)              (MidoriBrowser*       browser,$/;"	m	struct:_MidoriBrowserClass
news_aggregator	midori/midori-browser.c	/^    gchar* news_aggregator;$/;"	m	struct:_MidoriBrowser	file:
news_aggregator	midori/midori-websettings.c	/^    gchar* news_aggregator;$/;"	m	struct:_MidoriWebSettings	file:
news_feeds	midori/midori-view.c	/^    KatzeArray* news_feeds;$/;"	m	struct:_MidoriView	file:
next	toolbars/midori-findbar.c	/^    GtkToolItem* next;$/;"	m	struct:_MidoriFindbar	file:
next_line	waf-modules/wafadmin/ansiterm.py	/^		def next_line(self,param):$/;"	m	class:AnsiTerm
nice_path	waf-modules/wafadmin/Node.py	/^	def nice_path(self,env=None):$/;"	m	class:Node
no_autodetect	waf-modules/wafadmin/Tools/msvc.py	/^def no_autodetect(conf):$/;"	f
node	extensions/feed-panel/feed-parse.h	/^    xmlNodePtr  node;  \/* The XML node at a specific point *\/$/;"	m	struct:_FeedParser
node	waf-modules/wafadmin/Tools/misc.py	/^		node=self.path.find_or_declare(hidden_output)$/;"	v
node	waf-modules/wafadmin/Tools/misc.py	/^		node=self.path.find_resource(hidden_input)$/;"	v
node_class	waf-modules/wafadmin/Build.py	/^		class node_class(Node.Node):$/;"	c	function:BuildContext.__init__
nonblock	midori/socket.h	/^	gboolean nonblock;$/;"	m	struct:_SockInfo
notebook	midori/midori-browser.c	/^    GtkWidget* notebook;$/;"	m	struct:_MidoriBrowser	file:
notebook	midori/midori-panel.c	/^    GtkWidget* notebook;$/;"	m	struct:_MidoriPanel	file:
notify_default_encoding_cb	midori/midori-websettings.c	/^notify_default_encoding_cb (GObject*    object,$/;"	f	file:
notify_default_font_family_cb	midori/midori-websettings.c	/^notify_default_font_family_cb (GObject*    object,$/;"	f	file:
ocaml_taskgen	waf-modules/wafadmin/Tools/ocaml.py	/^class ocaml_taskgen(TaskGen.task_gen):$/;"	c
old	waf-modules/wafadmin/Tools/ar.py	/^old=cls.run$/;"	v
old	waf-modules/wafadmin/Tools/unittestw.py	/^old=cls.runnable_status$/;"	v
old	waf-modules/wafadmin/Utils.py	/^	old=shutil.copy2$/;"	v	class:Context
old_tabs	_build_/default/extensions/history-list.c	/^	gboolean old_tabs;$/;"	m	struct:_HistoryListNewTabWindow	file:
omissions	tools/check-style	/^omissions = [$/;"	v
on_which_platforms_does_midori_run_currently	data/faq.html	/^<h4><a name="on_which_platforms_does_midori_run_currently" id="on_which_platforms_does_midori_run_currently">On which platforms does Midori run currently?<\/a><\/h4>$/;"	a
on_which_platforms_does_midori_run_currently	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="on_which_platforms_does_midori_run_currently" id="on_which_platforms_does_midori_run_currently">On which platforms does Midori run currently?<\/a><\/h4>$/;"	a
on_which_platforms_does_midori_run_currently	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="on_which_platforms_does_midori_run_currently" id="on_which_platforms_does_midori_run_currently">On which platforms does Midori run currently?<\/a><\/h4>$/;"	a
open_magnetircaptand_friends_with_an_application	data/faq.html	/^<h4><a name="open_magnetircaptand_friends_with_an_application" id="open_magnetircaptand_friends_with_an_application">Open magnet:, irc:, apt: and friends with an application<\/a><\/h4>$/;"	a
open_magnetircaptand_friends_with_an_application	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="open_magnetircaptand_friends_with_an_application" id="open_magnetircaptand_friends_with_an_application">Open magnet:, irc:, apt: and friends with an application<\/a><\/h4>$/;"	a
open_magnetircaptand_friends_with_an_application	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="open_magnetircaptand_friends_with_an_application" id="open_magnetircaptand_friends_with_an_application">Open magnet:, irc:, apt: and friends with an application<\/a><\/h4>$/;"	a
open_new_pages_in	midori/midori-view.c	/^    MidoriNewPage open_new_pages_in;$/;"	m	struct:_MidoriView	file:
open_new_pages_in	midori/midori-websettings.c	/^    MidoriNewPage open_new_pages_in : 2;$/;"	m	struct:_MidoriWebSettings	file:
open_panels_in_windows	midori/midori-panel.c	/^    gboolean open_panels_in_windows;$/;"	m	struct:_MidoriPanel	file:
open_panels_in_windows	midori/midori-websettings.c	/^    gboolean open_panels_in_windows : 1;$/;"	m	struct:_MidoriWebSettings	file:
open_popups_in_tabs	midori/midori-websettings.c	/^    gboolean open_popups_in_tabs : 1;$/;"	m	struct:_MidoriWebSettings	file:
open_re	waf-modules/wafadmin/Tools/ocaml.py	/^open_re=re.compile('^\\s*open\\s+([a-zA-Z]+)(;;){0,1}$',re.M)$/;"	v
open_tabs_in_the_background	midori/midori-view.c	/^    gboolean open_tabs_in_the_background;$/;"	m	struct:_MidoriView	file:
open_tabs_in_the_background	midori/midori-websettings.c	/^    gboolean open_tabs_in_the_background : 1;$/;"	m	struct:_MidoriWebSettings	file:
open_tabs_next_to_current	midori/midori-websettings.c	/^    gboolean open_tabs_next_to_current : 1;$/;"	m	struct:_MidoriWebSettings	file:
opening_html_email_with_mutt	data/faq.html	/^<h4><a name="opening_html_email_with_mutt" id="opening_html_email_with_mutt">Opening html email with Mutt<\/a><\/h4>$/;"	a
opening_html_email_with_mutt	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="opening_html_email_with_mutt" id="opening_html_email_with_mutt">Opening html email with Mutt<\/a><\/h4>$/;"	a
opening_html_email_with_mutt	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="opening_html_email_with_mutt" id="opening_html_email_with_mutt">Opening html email with Mutt<\/a><\/h4>$/;"	a
options	waf-modules/wafadmin/Options.py	/^options={}$/;"	v
optslist	extensions/adblock.c	/^static GHashTable* optslist;$/;"	v	file:
ordered_dict	waf-modules/wafadmin/Utils.py	/^class ordered_dict(UserDict):$/;"	c
output_dir	waf-modules/wafadmin/Tools/misc.py	/^class output_dir(cmd_dir_arg):$/;"	c
output_file	waf-modules/wafadmin/Tools/misc.py	/^class output_file(cmd_arg):$/;"	c
output_path	waf-modules/wafadmin/Tools/misc.py	/^		def output_path(node,template):$/;"	f	function:command_output.run
outputs	waf-modules/wafadmin/Tools/misc.py	/^	outputs=[]$/;"	v
override_exec	waf-modules/wafadmin/Tools/d.py	/^def override_exec(cls):$/;"	f
overview	data/faq.html	/^<h4><a name="overview" id="overview">Overview<\/a><\/h4>$/;"	a
overview	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="overview" id="overview">Overview<\/a><\/h4>$/;"	a
overview	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="overview" id="overview">Overview<\/a><\/h4>$/;"	a
overview1	data/faq.html	/^<h4><a name="overview1" id="overview1">Overview<\/a><\/h4>$/;"	a
overview1	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="overview1" id="overview1">Overview<\/a><\/h4>$/;"	a
overview1	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="overview1" id="overview1">Overview<\/a><\/h4>$/;"	a
p	waf-modules/wafadmin/Tools/libtool.py	/^	def p(x):$/;"	f	function:useCmdLine
p	waf-modules/wafadmin/Tools/msvc.py	/^		p=pproc.Popen([cxx,'\/help'],env=env,stdout=pproc.PIPE,stderr=pproc.PIPE)$/;"	v
panel	extensions/feed-panel/main.c	/^    GtkWidget* panel;$/;"	m	struct:__anon11	file:
panel	midori/midori-browser.c	/^    GtkWidget* panel;$/;"	m	struct:_MidoriBrowser	file:
panel_add_feed_cb	extensions/feed-panel/main.c	/^panel_add_feed_cb (FeedPanel*   panel,$/;"	f	file:
panel_pages	extensions/cookie-manager/cookie-manager.c	/^	GSList *panel_pages;$/;"	m	struct:_CookieManagerPrivate	file:
panel_remove_feed_cb	extensions/feed-panel/main.c	/^panel_remove_feed_cb (FeedPanel*   panel,$/;"	f	file:
panel_timeout	midori/midori-browser.c	/^    guint panel_timeout;$/;"	m	struct:_MidoriBrowser	file:
parent	extensions/cookie-manager/cookie-manager-page.c	/^	CookieManager *parent;$/;"	m	struct:_CookieManagerPagePrivate	file:
parent	extensions/cookie-manager/cookie-manager-page.h	/^	GtkVBox parent;$/;"	m	struct:_CookieManagerPage
parent	extensions/cookie-manager/cookie-manager.c	/^	GObject parent;$/;"	m	struct:_CookieManager	file:
parent	katze/katze-item.h	/^    KatzeItem* parent;$/;"	m	struct:_KatzeItem
parent	katze/katze-scrolled.h	/^    GtkScrolledWindow parent;$/;"	m	struct:_KatzeScrolled
parent	katze/katze-scrolled.h	/^    GtkScrolledWindowClass parent;$/;"	m	struct:_KatzeScrolledClass
parent	midori/socket.c	/^	GSource parent;$/;"	m	struct:_SockSource	file:
parent_class	_build_/default/extensions/history-list.c	/^	GtkDialogClass parent_class;$/;"	m	struct:_HistoryListPreferencesDialogClass	file:
parent_class	_build_/default/extensions/history-list.c	/^	GtkWindowClass parent_class;$/;"	m	struct:_HistoryListHistoryWindowClass	file:
parent_class	_build_/default/extensions/history-list.c	/^	HistoryListHistoryWindowClass parent_class;$/;"	m	struct:_HistoryListTabWindowClass	file:
parent_class	_build_/default/extensions/history-list.c	/^	HistoryListTabWindowClass parent_class;$/;"	m	struct:_HistoryListNewTabWindowClass	file:
parent_class	_build_/default/extensions/history-list.c	/^	MidoriExtensionClass parent_class;$/;"	m	struct:_HistoryListManagerClass	file:
parent_class	_build_/default/katze/midori-uri.c	/^	GObjectClass parent_class;$/;"	m	struct:_MidoriURIClass	file:
parent_class	_build_/default/midori/midori-core.h	/^	GObjectClass parent_class;$/;"	m	struct:_MidoriURIClass
parent_class	_build_/default/midori/midori-core.h	/^	GtkTreeViewColumnClass parent_class;$/;"	m	struct:_MidoriExtensionsColumnClass
parent_class	_build_/default/midori/midori-extensions-column.c	/^	GtkTreeViewColumnClass parent_class;$/;"	m	struct:_MidoriExtensionsColumnClass	file:
parent_class	extensions/addons.c	/^    GtkVBoxClass parent_class;$/;"	m	struct:_AddonsClass	file:
parent_class	extensions/cookie-manager/cookie-manager-page.h	/^	GtkVBoxClass parent_class;$/;"	m	struct:_CookieManagerPageClass
parent_class	extensions/cookie-manager/cookie-manager.c	/^	GObjectClass parent_class;$/;"	m	struct:_CookieManagerClass	file:
parent_class	extensions/feed-panel/feed-panel.c	/^    GtkVBoxClass parent_class;$/;"	m	struct:_FeedPanelClass	file:
parent_class	katze/katze-array.c	/^    KatzeItemClass parent_class;$/;"	m	struct:_KatzeArrayClass	file:
parent_class	katze/katze-arrayaction.c	/^    GtkActionClass parent_class;$/;"	m	struct:_KatzeArrayActionClass	file:
parent_class	katze/katze-http-auth.c	/^    GObjectClass parent_class;$/;"	m	struct:_KatzeHttpAuthClass	file:
parent_class	katze/katze-http-cookies-sqlite.c	/^    GObjectClass parent_class;$/;"	m	struct:_KatzeHttpCookiesSqliteClass	file:
parent_class	katze/katze-http-cookies.c	/^    GObjectClass parent_class;$/;"	m	struct:_KatzeHttpCookiesClass	file:
parent_class	katze/katze-item.h	/^    GObjectClass parent_class;$/;"	m	struct:_KatzeItemClass
parent_class	katze/katze-net.c	/^    GObjectClass parent_class;$/;"	m	struct:_KatzeNetClass	file:
parent_class	katze/katze-preferences.h	/^    GtkDialogClass parent_class;$/;"	m	struct:_KatzePreferencesClass
parent_class	katze/katze-separatoraction.c	/^    GtkActionClass parent_class;$/;"	m	struct:_KatzeSeparatorActionClass	file:
parent_class	katze/katze-throbber.c	/^    GtkSpinnerClass parent_class;$/;"	m	struct:_KatzeThrobberClass	file:
parent_class	midori/gtkiconentry.c	/^static GtkEntryClass *parent_class = NULL;$/;"	v	file:
parent_class	midori/midori-app.c	/^    GObjectClass parent_class;$/;"	m	struct:_MidoriAppClass	file:
parent_class	midori/midori-browser.h	/^    HildonWindowClass parent_class;$/;"	m	struct:_MidoriBrowserClass
parent_class	midori/midori-extension.h	/^    GObjectClass parent_class;$/;"	m	struct:_MidoriExtensionClass
parent_class	midori/midori-locationaction.c	/^    GtkActionClass parent_class;$/;"	m	struct:_MidoriLocationActionClass	file:
parent_class	midori/midori-panedaction.c	/^    GtkActionClass parent_class;$/;"	m	struct:_MidoriPanedActionClass	file:
parent_class	midori/midori-panel.c	/^    GtkAlignmentClass parent_class;$/;"	m	struct:__anon68	file:
parent_class	midori/midori-panel.c	/^    GtkHBoxClass parent_class;$/;"	m	struct:_MidoriPanelClass	file:
parent_class	midori/midori-preferences.h	/^    KatzePreferencesClass parent_class;$/;"	m	struct:_MidoriPreferencesClass
parent_class	midori/midori-searchaction.c	/^    GtkActionClass parent_class;$/;"	m	struct:_MidoriSearchActionClass	file:
parent_class	midori/midori-view.c	/^    GtkVBoxClass parent_class;$/;"	m	struct:_MidoriViewClass	file:
parent_class	midori/midori-websettings.c	/^    WebKitWebSettingsClass parent_class;$/;"	m	struct:_MidoriWebSettingsClass	file:
parent_class	panels/midori-bookmarks.c	/^    GtkVBoxClass parent_class;$/;"	m	struct:_MidoriBookmarksClass	file:
parent_class	panels/midori-extensions.c	/^    GtkVBoxClass parent_class;$/;"	m	struct:_MidoriExtensionsClass	file:
parent_class	panels/midori-history.c	/^    GtkVBoxClass parent_class;$/;"	m	struct:_MidoriHistoryClass	file:
parent_class	panels/midori-transfers.c	/^    GtkVBoxClass parent_class;$/;"	m	struct:_MidoriTransfersClass	file:
parent_class	toolbars/midori-findbar.c	/^    GtkToolbarClass parent_class;$/;"	m	struct:_MidoriFindbarClass	file:
parent_class	toolbars/midori-transferbar.c	/^    GtkToolbarClass parent_class;$/;"	m	struct:_MidoriTransferbarClass	file:
parent_instance	_build_/default/extensions/history-list.c	/^	GtkDialog parent_instance;$/;"	m	struct:_HistoryListPreferencesDialog	file:
parent_instance	_build_/default/extensions/history-list.c	/^	GtkWindow parent_instance;$/;"	m	struct:_HistoryListHistoryWindow	file:
parent_instance	_build_/default/extensions/history-list.c	/^	HistoryListHistoryWindow parent_instance;$/;"	m	struct:_HistoryListTabWindow	file:
parent_instance	_build_/default/extensions/history-list.c	/^	HistoryListTabWindow parent_instance;$/;"	m	struct:_HistoryListNewTabWindow	file:
parent_instance	_build_/default/extensions/history-list.c	/^	MidoriExtension parent_instance;$/;"	m	struct:_HistoryListManager	file:
parent_instance	_build_/default/katze/midori-uri.c	/^	GObject parent_instance;$/;"	m	struct:_MidoriURI	file:
parent_instance	_build_/default/midori/midori-core.h	/^	GObject parent_instance;$/;"	m	struct:_MidoriURI
parent_instance	_build_/default/midori/midori-core.h	/^	GtkTreeViewColumn parent_instance;$/;"	m	struct:_MidoriExtensionsColumn
parent_instance	_build_/default/midori/midori-extensions-column.c	/^	GtkTreeViewColumn parent_instance;$/;"	m	struct:_MidoriExtensionsColumn	file:
parent_instance	extensions/addons.c	/^    GtkVBox parent_instance;$/;"	m	struct:_Addons	file:
parent_instance	extensions/feed-panel/feed-panel.c	/^    GtkVBox parent_instance;$/;"	m	struct:_FeedPanel	file:
parent_instance	katze/katze-array.c	/^    KatzeItem parent_instance;$/;"	m	struct:_KatzeArray	file:
parent_instance	katze/katze-arrayaction.c	/^    GtkAction parent_instance;$/;"	m	struct:_KatzeArrayAction	file:
parent_instance	katze/katze-http-auth.c	/^    GObject parent_instance;$/;"	m	struct:_KatzeHttpAuth	file:
parent_instance	katze/katze-http-cookies-sqlite.c	/^    GObject parent_instance;$/;"	m	struct:_KatzeHttpCookiesSqlite	file:
parent_instance	katze/katze-http-cookies.c	/^    GObject parent_instance;$/;"	m	struct:_KatzeHttpCookies	file:
parent_instance	katze/katze-item.h	/^    GObject parent_instance;$/;"	m	struct:_KatzeItem
parent_instance	katze/katze-net.c	/^    GObject parent_instance;$/;"	m	struct:_KatzeNet	file:
parent_instance	katze/katze-preferences.h	/^    GtkDialog parent_instance;$/;"	m	struct:_KatzePreferences
parent_instance	katze/katze-separatoraction.c	/^    GtkAction parent_instance;$/;"	m	struct:_KatzeSeparatorAction	file:
parent_instance	katze/katze-throbber.c	/^    GtkSpinner parent_instance;$/;"	m	struct:_KatzeThrobber	file:
parent_instance	midori/midori-app.c	/^    GObject parent_instance;$/;"	m	struct:_MidoriApp	file:
parent_instance	midori/midori-browser.c	/^    HildonWindow parent_instance;$/;"	m	struct:_MidoriBrowser	file:
parent_instance	midori/midori-extension.h	/^    GObject parent_instance;$/;"	m	struct:_MidoriExtension
parent_instance	midori/midori-locationaction.c	/^    GtkAction parent_instance;$/;"	m	struct:_MidoriLocationAction	file:
parent_instance	midori/midori-panedaction.c	/^    GtkAction parent_instance;$/;"	m	struct:_MidoriPanedAction	file:
parent_instance	midori/midori-panel.c	/^    GtkAlignment parent_instance;$/;"	m	struct:__anon67	file:
parent_instance	midori/midori-panel.c	/^    GtkHBox parent_instance;$/;"	m	struct:_MidoriPanel	file:
parent_instance	midori/midori-preferences.c	/^    KatzePreferences parent_instance;$/;"	m	struct:_MidoriPreferences	file:
parent_instance	midori/midori-searchaction.c	/^    GtkAction parent_instance;$/;"	m	struct:_MidoriSearchAction	file:
parent_instance	midori/midori-view.c	/^    GtkVBox parent_instance;$/;"	m	struct:_MidoriView	file:
parent_instance	midori/midori-websettings.c	/^    WebKitWebSettings parent_instance;$/;"	m	struct:_MidoriWebSettings	file:
parent_instance	panels/midori-bookmarks.c	/^    GtkVBox parent_instance;$/;"	m	struct:_MidoriBookmarks	file:
parent_instance	panels/midori-extensions.c	/^    GtkVBox parent_instance;$/;"	m	struct:_MidoriExtensions	file:
parent_instance	panels/midori-history.c	/^    GtkVBox parent_instance;$/;"	m	struct:_MidoriHistory	file:
parent_instance	panels/midori-transfers.c	/^    GtkVBox parent_instance;$/;"	m	struct:_MidoriTransfers	file:
parent_instance	toolbars/midori-findbar.c	/^    GtkToolbar parent_instance;$/;"	m	struct:_MidoriFindbar	file:
parent_instance	toolbars/midori-transferbar.c	/^    GtkToolbar parent_instance;$/;"	m	struct:_MidoriTransferbar	file:
parse	extensions/feed-panel/feed-parse.h	/^    void     (*parse)     (struct _FeedParser* fparser);$/;"	m	struct:_FeedParser
parse_args	waf-modules/wafadmin/Options.py	/^	def parse_args(self,args=None):$/;"	m	class:Handler
parse_args_impl	waf-modules/wafadmin/Options.py	/^def parse_args_impl(parser,_args=None):$/;"	f
parse_char	waf-modules/wafadmin/Tools/preproc.py	/^def parse_char(txt):$/;"	f
parse_cookie	katze/katze-http-cookies.c	/^parse_cookie (gchar* line,$/;"	f	file:
parse_feed	extensions/feed-panel/feed-parse.c	/^parse_feed (gchar*      data,$/;"	f
parse_flags	waf-modules/wafadmin/Tools/config_c.py	/^def parse_flags(line,uselib,env):$/;"	f
parse_line	katze/katze-http-cookies.c	/^parse_line (SoupCookieJar* jar,$/;"	f	file:
parser	waf-modules/wafadmin/Options.py	/^	parser=None$/;"	v	class:Handler
parsers	extensions/feed-panel/main.c	/^    GSList* parsers;$/;"	m	struct:__anon11	file:
parsers	extensions/feed-panel/main.c	/^    GSList* parsers;$/;"	m	struct:__anon12	file:
password	katze/katze-http-auth.c	/^    gchar* password;$/;"	m	struct:__anon29	file:
password	katze/katze-http-auth.c	/^    gchar* password;$/;"	m	struct:__anon30	file:
paste_tokens	waf-modules/wafadmin/Tools/preproc.py	/^def paste_tokens(t1,t2):$/;"	f
path	waf-modules/wafadmin/Tools/msvc.py	/^			path=line[5:]$/;"	v
path	waf-modules/wafadmin/Tools/python.py	/^		path=[os.path.join(python_prefix,"libs")]$/;"	v
path	waf-modules/wafadmin/Tools/python.py	/^		path=[python_LIBDIR]$/;"	v
path	waf-modules/wafadmin/Tools/python.py	/^		path=[python_LIBPL]$/;"	v
path_to_parent	waf-modules/wafadmin/Node.py	/^	def path_to_parent(self,parent):$/;"	m	class:Node
pattern	extensions/adblock.c	/^static GHashTable* pattern;$/;"	v	file:
pdflatex_build	waf-modules/wafadmin/Tools/tex.py	/^def pdflatex_build(task):$/;"	f
pdflatex_vardeps	waf-modules/wafadmin/Tools/tex.py	/^pdflatex_vardeps=['PDFLATEX','PDFLATEXFLAGS']$/;"	v
pixbuf	extensions/feed-panel/feed-panel.c	/^    GdkPixbuf* pixbuf;$/;"	m	struct:_FeedPanel	file:
pixbuf	katze/katze-throbber.c	/^    GdkPixbuf* pixbuf;$/;"	m	struct:_KatzeThrobber	file:
pixbuf	midori/gtkiconentry.c	/^  GdkPixbuf *pixbuf;$/;"	m	struct:__anon54	file:
pixbuf_assign_icon	katze/katze-throbber.c	/^pixbuf_assign_icon (GdkPixbuf**    pixbuf,$/;"	f	file:
pkg	debian/rules	/^pkg = $(shell dpkg-parsechangelog | sed -ne 's\/^Source: \/\/p')$/;"	m
place_windows	midori/gtkiconentry.c	/^place_windows (GtkIconEntry *icon_entry, GtkAllocation *widget_alloc)$/;"	f	file:
platform	waf-modules/wafadmin/Options.py	/^platform=Utils.unversioned_sys_platform()$/;"	v
plist_build	waf-modules/wafadmin/Tools/osx.py	/^def plist_build(task):$/;"	f
polipo	data/faq.html	/^<h4><a name="polipo" id="polipo">Polipo<\/a><\/h4>$/;"	a
polipo	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="polipo" id="polipo">Polipo<\/a><\/h4>$/;"	a
polipo	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="polipo" id="polipo">Polipo<\/a><\/h4>$/;"	a
poll	waf-modules/wafadmin/pproc.py	/^		def poll(self,_deadstate=None):$/;"	f	function:Popen.communicate
pop	waf-modules/wafadmin/Environment.py	/^	def pop(self,key,*args):$/;"	m	class:Environment
pop_cursor	waf-modules/wafadmin/ansiterm.py	/^		def pop_cursor(self,param):$/;"	m	class:AnsiTerm
popleft	waf-modules/wafadmin/Utils.py	/^		def popleft(self):$/;"	m	class:deque
popup	midori/midori-locationaction.c	/^    GtkWidget* popup;$/;"	m	struct:_MidoriLocationAction	file:
popup_menu	extensions/cookie-manager/cookie-manager-page.c	/^	GtkWidget *popup_menu;$/;"	m	struct:_CookieManagerPagePrivate	file:
port	midori/socket.c	/^	gushort port;$/;"	m	struct:_SockConnectData	file:
port	midori/socket.h	/^	gushort port;$/;"	m	struct:_SockInfo
position	katze/katze-utils.c	/^     KatzeMenuPos position;$/;"	m	struct:__anon35	file:
post	waf-modules/wafadmin/TaskGen.py	/^	def post(self):$/;"	m	class:task_gen
post_build	waf-modules/wafadmin/Build.py	/^	def post_build(self):$/;"	m	class:BuildContext
post_check	waf-modules/wafadmin/Tools/config_c.py	/^def post_check(self,*k,**kw):$/;"	f
post_init	waf-modules/wafadmin/Configure.py	/^	def post_init(self):$/;"	m	class:ConfigurationContext
post_recurse	waf-modules/wafadmin/Build.py	/^	def post_recurse(self,name_or_mod,path,nexdir):$/;"	m	class:BuildContext
post_recurse	waf-modules/wafadmin/Configure.py	/^	def post_recurse(self,name_or_mod,path,nexdir):$/;"	m	class:ConfigurationContext
post_run	waf-modules/wafadmin/Task.py	/^	def post_run(self):$/;"	f	function:update_outputs
post_run	waf-modules/wafadmin/Task.py	/^	def post_run(self):$/;"	m	class:Task
post_run	waf-modules/wafadmin/Task.py	/^	def post_run(self):$/;"	m	class:TaskBase
post_run	waf-modules/wafadmin/Tools/misc.py	/^def post_run(self):$/;"	f
post_run_javac	waf-modules/wafadmin/Tools/javaw.py	/^def post_run_javac(self):$/;"	f
postinstall	waf-modules/wafadmin/Tools/gnome.py	/^def postinstall(prog_name='myapp',schemas=1,icons=1,scrollkeeper=1):$/;"	f
postinstall_icons	waf-modules/wafadmin/Tools/gnome.py	/^def postinstall_icons():$/;"	f
postinstall_schemas	waf-modules/wafadmin/Tools/gnome.py	/^def postinstall_schemas(prog_name):$/;"	f
postinstall_scrollkeeper	waf-modules/wafadmin/Tools/gnome.py	/^def postinstall_scrollkeeper(prog_name):$/;"	f
postparse	extensions/feed-panel/feed-parse.h	/^    void     (*postparse) (struct _FeedParser* fparser);$/;"	m	struct:_FeedParser
postpone	waf-modules/wafadmin/Runner.py	/^	def postpone(self,tsk):$/;"	m	class:Parallel
pprint	waf-modules/wafadmin/Utils.py	/^def pprint(col,str,label='',sep='\\n'):$/;"	f
pproc	waf-modules/wafadmin/Tools/msvc.py	/^pproc=Utils.pproc$/;"	v
pre_build	waf-modules/wafadmin/Build.py	/^	def pre_build(self):$/;"	m	class:BuildContext
pre_recurse	waf-modules/wafadmin/Build.py	/^	def pre_recurse(self,name_or_mod,path,nexdir):$/;"	m	class:BuildContext
pre_recurse	waf-modules/wafadmin/Configure.py	/^	def pre_recurse(self,name_or_mod,path,nexdir):$/;"	m	class:ConfigurationContext
prec	waf-modules/wafadmin/TaskGen.py	/^	prec=Utils.DefaultDict(list)$/;"	v	class:task_gen
prec	waf-modules/wafadmin/Tools/preproc.py	/^prec={}$/;"	v
preferred_encoding	midori/midori-websettings.c	/^    MidoriPreferredEncoding preferred_encoding : 3;$/;"	m	struct:_MidoriWebSettings	file:
prepare	waf-modules/wafadmin/Scripting.py	/^def prepare(t,cwd,ver,wafdir):$/;"	f
prepare	waf-modules/wafadmin/Task.py	/^	def prepare(self):$/;"	m	class:TaskGroup
prepare_impl	waf-modules/wafadmin/Scripting.py	/^def prepare_impl(t,cwd,ver,wafdir):$/;"	f
prepare_speed_dial_html	midori/midori-view.c	/^prepare_speed_dial_html (MidoriView* view,$/;"	f	file:
preparse	extensions/feed-panel/feed-parse.h	/^    void     (*preparse)  (struct _FeedParser* fparser);$/;"	m	struct:_FeedParser
prepend_value	waf-modules/wafadmin/Environment.py	/^	def prepend_value(self,var,value):$/;"	m	class:Environment
press_received	katze/katze-scrolled.c	/^    gboolean press_received;$/;"	m	struct:_KatzeScrolledPrivate	file:
prev_line	waf-modules/wafadmin/ansiterm.py	/^		def prev_line(self,param):$/;"	m	class:AnsiTerm
previous	toolbars/midori-findbar.c	/^    GtkToolItem* previous;$/;"	m	struct:_MidoriFindbar	file:
previous	tools/check-style	/^                previous = line$/;"	v
previous	tools/check-style	/^            previous = line$/;"	v
previous	tools/check-style	/^        previous = ''$/;"	v
previous_time	katze/katze-scrolled.c	/^    guint32 previous_time;$/;"	m	struct:_KatzeScrolledPrivate	file:
previous_x	katze/katze-scrolled.c	/^    gint previous_x;$/;"	m	struct:_KatzeScrolledPrivate	file:
previous_y	katze/katze-scrolled.c	/^    gint previous_y;$/;"	m	struct:_KatzeScrolledPrivate	file:
print_all_msvc_detected	waf-modules/wafadmin/Tools/msvc.py	/^def print_all_msvc_detected(conf):$/;"	f
print_results	waf-modules/wafadmin/Tools/unittestw.py	/^	def print_results(self):$/;"	m	class:unit_test
printout	waf-modules/wafadmin/Build.py	/^	def printout(self,s):$/;"	m	class:BuildContext
priv	_build_/default/extensions/history-list.c	/^	HistoryListHistoryWindowPrivate * priv;$/;"	m	struct:_HistoryListHistoryWindow	file:
priv	_build_/default/extensions/history-list.c	/^	HistoryListManagerPrivate * priv;$/;"	m	struct:_HistoryListManager	file:
priv	_build_/default/extensions/history-list.c	/^	HistoryListNewTabWindowPrivate * priv;$/;"	m	struct:_HistoryListNewTabWindow	file:
priv	_build_/default/extensions/history-list.c	/^	HistoryListPreferencesDialogPrivate * priv;$/;"	m	struct:_HistoryListPreferencesDialog	file:
priv	_build_/default/extensions/history-list.c	/^	HistoryListTabWindowPrivate * priv;$/;"	m	struct:_HistoryListTabWindow	file:
priv	_build_/default/katze/midori-uri.c	/^	MidoriURIPrivate * priv;$/;"	m	struct:_MidoriURI	file:
priv	_build_/default/midori/midori-core.h	/^	MidoriExtensionsColumnPrivate * priv;$/;"	m	struct:_MidoriExtensionsColumn
priv	_build_/default/midori/midori-core.h	/^	MidoriURIPrivate * priv;$/;"	m	struct:_MidoriURI
priv	_build_/default/midori/midori-extensions-column.c	/^	MidoriExtensionsColumnPrivate * priv;$/;"	m	struct:_MidoriExtensionsColumn	file:
priv	extensions/cookie-manager/cookie-manager-page.h	/^	CookieManagerPagePrivate* priv;$/;"	m	struct:_CookieManagerPage
priv	extensions/cookie-manager/cookie-manager.c	/^	CookieManagerPrivate* priv;$/;"	m	struct:_CookieManager	file:
priv	katze/katze-preferences.h	/^    KatzePreferencesPrivate* priv;$/;"	m	struct:_KatzePreferences
priv	katze/katze-scrolled.h	/^    KatzeScrolledPrivate* priv;$/;"	m	struct:_KatzeScrolled
priv	midori/midori-extension.h	/^    MidoriExtensionPrivate* priv;$/;"	m	struct:_MidoriExtension
private_browsing	data/faq.html	/^<h2 class="sectionedit7"><a name="private_browsing" id="private_browsing">Private Browsing<\/a><\/h2>$/;"	a
private_browsing	debian/midori/usr/share/doc/midori/faq.html	/^<h2 class="sectionedit7"><a name="private_browsing" id="private_browsing">Private Browsing<\/a><\/h2>$/;"	a
private_browsing	debian/tmp/usr/share/doc/midori/faq.html	/^<h2 class="sectionedit7"><a name="private_browsing" id="private_browsing">Private Browsing<\/a><\/h2>$/;"	a
privoxy	data/faq.html	/^<h4><a name="privoxy" id="privoxy">Privoxy<\/a><\/h4>$/;"	a
privoxy	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="privoxy" id="privoxy">Privoxy<\/a><\/h4>$/;"	a
privoxy	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="privoxy" id="privoxy">Privoxy<\/a><\/h4>$/;"	a
process_dbus	waf-modules/wafadmin/Tools/dbus.py	/^def process_dbus(self):$/;"	f
process_enums	waf-modules/wafadmin/Tools/glib2.py	/^def process_enums(self):$/;"	f
process_header	waf-modules/wafadmin/Tools/d.py	/^def process_header(self):$/;"	f
process_install	waf-modules/wafadmin/Task.py	/^	def process_install(self):$/;"	m	class:TaskGroup
process_lib	waf-modules/wafadmin/Tools/qt4.py	/^	def process_lib(vars_,coreval):$/;"	f	function:detect_qt4
process_line	waf-modules/wafadmin/Tools/preproc.py	/^	def process_line(self,token,line):$/;"	m	class:c_parser
process_marshal	waf-modules/wafadmin/Tools/glib2.py	/^def process_marshal(self):$/;"	f
process_obj_files	waf-modules/wafadmin/Tools/ccroot.py	/^def process_obj_files(self):$/;"	f
process_py	waf-modules/wafadmin/Tools/python.py	/^def process_py(self,node):$/;"	f
process_qm2rcc	waf-modules/wafadmin/Tools/qt4.py	/^def process_qm2rcc(task):$/;"	f
process_rpath	waf-modules/wafadmin/Tools/qt4.py	/^		def process_rpath(vars_,coreval):$/;"	f	function:detect_qt4.process_lib
process_task	waf-modules/wafadmin/Runner.py	/^def process_task(tsk):$/;"	f
program_PATTERN	_build_/c4che/default.cache.py	/^program_PATTERN = '%s'$/;"	v
program_notify_send	midori/midori-app.c	/^    gchar* program_notify_send;$/;"	m	struct:_MidoriApp	file:
progress	midori/midori-locationaction.c	/^    gdouble progress;$/;"	m	struct:_MidoriLocationAction	file:
progress	midori/midori-view.c	/^    gdouble progress;$/;"	m	struct:_MidoriView	file:
progress_line	waf-modules/wafadmin/Build.py	/^	def progress_line(self,state,total,col1,col2):$/;"	m	class:BuildContext
properties_object_get_set	tests/properties.c	/^properties_object_get_set (GObject* object)$/;"	f	file:
properties_object_skip	tests/properties.c	/^static ObjectProperty properties_object_skip[] =$/;"	v	file:
properties_object_test	tests/properties.c	/^properties_object_test (gconstpointer object)$/;"	f	file:
properties_should_skip	tests/properties.c	/^properties_should_skip (const gchar* type,$/;"	f	file:
properties_type_test	tests/properties.c	/^properties_type_test (gconstpointer type)$/;"	f	file:
property	tests/properties.c	/^    const gchar* property;$/;"	m	struct:__anon80	file:
protocol	midori/socket.c	/^	gint protocol;$/;"	m	struct:_SockAddrData	file:
proxy_array	midori/midori-browser.c	/^    KatzeArray* proxy_array;$/;"	m	struct:_MidoriBrowser	file:
proxy_combo_box_apps_changed_cb	katze/katze-utils.c	/^proxy_combo_box_apps_changed_cb (GtkComboBox* button,$/;"	f	file:
proxy_combo_box_changed_cb	katze/katze-utils.c	/^proxy_combo_box_changed_cb (GtkComboBox* button,$/;"	f	file:
proxy_combo_box_text_changed_cb	katze/katze-utils.c	/^proxy_combo_box_text_changed_cb (GtkComboBoxText* button,$/;"	f	file:
proxy_days_changed_cb	katze/katze-utils.c	/^proxy_days_changed_cb (GtkComboBox* combo,$/;"	f	file:
proxy_entry_activate_cb	katze/katze-utils.c	/^proxy_entry_activate_cb (GtkEntry* entry,$/;"	f	file:
proxy_entry_focus_out_event_cb	katze/katze-utils.c	/^proxy_entry_focus_out_event_cb (GtkEntry*      entry,$/;"	f	file:
proxy_file_file_set_cb	katze/katze-utils.c	/^proxy_file_file_set_cb (GtkFileChooser* button,$/;"	f	file:
proxy_folder_file_set_cb	katze/katze-utils.c	/^proxy_folder_file_set_cb (GtkFileChooser* button,$/;"	f	file:
proxy_object_notify_boolean_cb	katze/katze-utils.c	/^proxy_object_notify_boolean_cb (GObject*    object,$/;"	f	file:
proxy_object_notify_string_cb	katze/katze-utils.c	/^proxy_object_notify_string_cb (GObject*    object,$/;"	f	file:
proxy_picker_button_changed_cb	katze/katze-utils.c	/^proxy_picker_button_changed_cb (HildonPickerButton* button,$/;"	f	file:
proxy_servers	data/faq.html	/^<h2 class="sectionedit8"><a name="proxy_servers" id="proxy_servers">Proxy servers<\/a><\/h2>$/;"	a
proxy_servers	debian/midori/usr/share/doc/midori/faq.html	/^<h2 class="sectionedit8"><a name="proxy_servers" id="proxy_servers">Proxy servers<\/a><\/h2>$/;"	a
proxy_servers	debian/tmp/usr/share/doc/midori/faq.html	/^<h2 class="sectionedit8"><a name="proxy_servers" id="proxy_servers">Proxy servers<\/a><\/h2>$/;"	a
proxy_spin_button_changed_cb	katze/katze-utils.c	/^proxy_spin_button_changed_cb (GtkSpinButton* button,$/;"	f	file:
proxy_toggle_button_toggled_cb	katze/katze-utils.c	/^proxy_toggle_button_toggled_cb (GtkToggleButton* button,$/;"	f	file:
proxy_type	midori/midori-websettings.c	/^    MidoriProxy proxy_type : 2;$/;"	m	struct:_MidoriWebSettings	file:
proxy_uri_file_set_cb	katze/katze-utils.c	/^proxy_uri_file_set_cb (GtkFileChooser* button,$/;"	f	file:
proxy_widget_boolean_destroy_cb	katze/katze-utils.c	/^proxy_widget_boolean_destroy_cb (GtkWidget* proxy,$/;"	f	file:
proxy_widget_string_destroy_cb	katze/katze-utils.c	/^proxy_widget_string_destroy_cb (GtkWidget* proxy,$/;"	f	file:
prune_pats	waf-modules/wafadmin/Node.py	/^prune_pats='.git .bzr .hg .svn _MTN _darcs CVS SCCS'.split()$/;"	v
pspec_is_writable	tests/properties.c	38;"	d	file:
push_cursor	waf-modules/wafadmin/ansiterm.py	/^		def push_cursor(self,param):$/;"	m	class:AnsiTerm
py_taskgen	waf-modules/wafadmin/Tools/python.py	/^class py_taskgen(TaskGen.task_gen):$/;"	c
pyext_shlib_ext	waf-modules/wafadmin/Tools/python.py	/^def pyext_shlib_ext(self):$/;"	f
python_24_guard	waf-modules/wafadmin/Utils.py	/^def python_24_guard():$/;"	f
python_config	waf-modules/wafadmin/Tools/python.py	/^		python_config=conf.find_program('python-config-%s'%('.'.join(env['PYTHON_VERSION'].split('.')[:2])),var='PYTHON_CONFIG')$/;"	v
python_config	waf-modules/wafadmin/Tools/python.py	/^	python_config=conf.find_program('python%s-config'%('.'.join(env['PYTHON_VERSION'].split('.')[:2])),var='PYTHON_CONFIG')$/;"	v
pywintypes	waf-modules/wafadmin/pproc.py	/^		class pywintypes:$/;"	c	function:.__str__
qt4_taskgen	waf-modules/wafadmin/Tools/qt4.py	/^class qt4_taskgen(cxx.cxx_taskgen):$/;"	c
quit	midori/midori-app.c	/^    (*quit)                   (MidoriApp*     app);$/;"	m	struct:_MidoriAppClass	file:
quit	midori/midori-browser.h	/^    (*quit)                    (MidoriBrowser*       browser);$/;"	m	struct:_MidoriBrowserClass
quote_define_name	waf-modules/wafadmin/Utils.py	/^def quote_define_name(path):$/;"	f
quote_whitespace	waf-modules/wafadmin/Utils.py	/^def quote_whitespace(path):$/;"	f
qxx_task	waf-modules/wafadmin/Tools/qt4.py	/^class qxx_task(Task.Task):$/;"	c
r1	waf-modules/wafadmin/py3kfixes.py	/^def r1(code):$/;"	f
r10	waf-modules/wafadmin/py3kfixes.py	/^def r10(code):$/;"	f
r11	waf-modules/wafadmin/py3kfixes.py	/^def r11(code):$/;"	f
r2	waf-modules/wafadmin/py3kfixes.py	/^def r2(code):$/;"	f
r3	waf-modules/wafadmin/py3kfixes.py	/^def r3(code):$/;"	f
r33	waf-modules/wafadmin/py3kfixes.py	/^def r33(code):$/;"	f
r4	waf-modules/wafadmin/py3kfixes.py	/^def r4(code):$/;"	f
r5	waf-modules/wafadmin/py3kfixes.py	/^def r5(code):$/;"	f
r6	waf-modules/wafadmin/py3kfixes.py	/^def r6(code):$/;"	f
r7	waf-modules/wafadmin/py3kfixes.py	/^def r7(code):$/;"	f
r8	waf-modules/wafadmin/py3kfixes.py	/^def r8(code):$/;"	f
r9	waf-modules/wafadmin/py3kfixes.py	/^def r9(code):$/;"	f
rc_file	waf-modules/wafadmin/Tools/winres.py	/^def rc_file(self,node):$/;"	f
re_clexer	waf-modules/wafadmin/Tools/preproc.py	/^re_clexer=re.compile('|'.join(["(?P<%s>%s)"%(name,part)for name,part in zip(tok_types,exp_types)]),re.M)$/;"	v
re_fun	waf-modules/wafadmin/Tools/preproc.py	/^re_fun=re.compile('^[a-zA-Z_][a-zA-Z0-9_]*[(]')$/;"	v
re_imp	waf-modules/wafadmin/Environment.py	/^re_imp=re.compile('^(#)*?([^#=]*?)\\ =\\ (.*?)$',re.M)$/;"	v
re_inc	waf-modules/wafadmin/Tools/preproc.py	/^re_inc=re.compile('^[ \\t]*(#|%:)[ \\t]*(include)[ \\t]*(.*)\\r*$',re.IGNORECASE|re.MULTILINE)$/;"	v
re_include	waf-modules/wafadmin/Tools/preproc.py	/^re_include=re.compile('^\\s*(<(?P<a>.*)>|"(?P<b>.*)")')$/;"	v
re_lines	waf-modules/wafadmin/Tools/preproc.py	/^re_lines=re.compile('^[ \\t]*(#|%:)[ \\t]*(ifdef|ifndef|if|else|elif|endif|include|import|define|undef|pragma)[ \\t]*(.*)\\r*$',re.IGNORECASE|re.MULTILINE)$/;"	v
re_log	waf-modules/wafadmin/Logs.py	/^re_log=re.compile(r'(\\w+): (.*)',re.M)$/;"	v
re_mac	waf-modules/wafadmin/Tools/preproc.py	/^re_mac=re.compile("^[a-zA-Z_]\\w*")$/;"	v
re_nl	waf-modules/wafadmin/Tools/preproc.py	/^re_nl=re.compile('\\\\\\\\\\r*\\n',re.MULTILINE)$/;"	v
re_pragma_once	waf-modules/wafadmin/Tools/preproc.py	/^re_pragma_once=re.compile('^\\s*once\\s*',re.IGNORECASE)$/;"	v
re_sp	waf-modules/wafadmin/Utils.py	/^re_sp=re.compile('[\/\\\\\\\\]')$/;"	v
re_tex	waf-modules/wafadmin/Tools/tex.py	/^re_tex=re.compile(r'\\\\(?P<type>include|input|import|bringin|lstinputlisting){(?P<file>[^{}]*)}',re.M)$/;"	v
read	waf-modules/wafadmin/Node.py	/^	def read(self,env):$/;"	m	class:Node
read_config	waf-modules/wafadmin/Tools/ruby.py	/^	def read_config(key):$/;"	f	function:check_ruby_ext_devel
read_la_file	waf-modules/wafadmin/Tools/libtool.py	/^def read_la_file(path):$/;"	f
read_out	waf-modules/wafadmin/Tools/perl.py	/^	def read_out(cmd):$/;"	f	function:check_perl_ext_devel
read_out	waf-modules/wafadmin/Tools/ruby.py	/^	def read_out(cmd):$/;"	f	function:check_ruby_ext_devel
readf	waf-modules/wafadmin/Utils.py	/^def readf(fname,m='r'):$/;"	f
ready	waf-modules/wafadmin/Runner.py	/^	ready=Queue(0)$/;"	v	class:TaskConsumer
reconf	waf-modules/wafadmin/Scripting.py	/^	def reconf(proj):$/;"	f	function:check_configured
recurse	waf-modules/wafadmin/Utils.py	/^	def recurse(self,dirs,name=''):$/;"	m	class:Context
recursion_limit	waf-modules/wafadmin/Tools/preproc.py	/^recursion_limit=5000$/;"	v
red	waf-modules/wafadmin/Build.py	/^	red=re.compile(r"^([A-Za-z]:)?[\/\\\\\\\\]*")$/;"	v	class:BuildContext
reduce_eval	waf-modules/wafadmin/Tools/preproc.py	/^def reduce_eval(lst):$/;"	f
reduce_nums	waf-modules/wafadmin/Tools/preproc.py	/^def reduce_nums(val_1,val_2,val_op):$/;"	f
reduce_tokens	waf-modules/wafadmin/Tools/preproc.py	/^def reduce_tokens(lst,defs,ban=[]):$/;"	f
refill_task_list	waf-modules/wafadmin/Runner.py	/^	def refill_task_list(self):$/;"	m	class:Parallel
reg_act	waf-modules/wafadmin/Task.py	/^reg_act=re.compile(r"(?P<backslash>\\\\)|(?P<dollar>\\$\\$)|(?P<subst>\\$\\{(?P<var>\\w+)(?P<code>.*?)\\})",re.M)$/;"	v
reg_subst	waf-modules/wafadmin/Utils.py	/^reg_subst=re.compile(r"(\\\\\\\\)|(\\$\\$)|\\$\\{([^}]+)\\}")$/;"	v
register_obj	waf-modules/wafadmin/TaskGen.py	/^class register_obj(type):$/;"	c
relpath_gen	waf-modules/wafadmin/Node.py	/^	def relpath_gen(self,from_node):$/;"	m	class:Node
remember_last_visited_pages	midori/midori-websettings.c	/^    gboolean remember_last_visited_pages : 1;$/;"	m	struct:_MidoriWebSettings	file:
remember_last_window_size	midori/midori-websettings.c	/^    gboolean remember_last_window_size : 1;$/;"	m	struct:_MidoriWebSettings	file:
remote_repo	waf-modules/wafadmin/Options.py	/^remote_repo=['http:\/\/waf.googlecode.com\/svn\/']$/;"	v
remove_browser	midori/midori-app.c	/^    (*remove_browser)         (MidoriApp*     app,$/;"	m	struct:_MidoriAppClass	file:
remove_button	midori/midori-searchaction.c	/^    GtkWidget* remove_button;$/;"	m	struct:_MidoriSearchAction	file:
remove_item	katze/katze-array.c	/^    (*remove_item)            (KatzeArray* array,$/;"	m	struct:_KatzeArrayClass	file:
remove_node	waf-modules/wafadmin/Build.py	/^	def remove_node(self,node):$/;"	m	class:BuildContext
remove_socket_link_full	midori/socket.c	/^static void remove_socket_link_full(void)$/;"	f	file:
remove_tab	midori/midori-browser.h	/^    (*remove_tab)              (MidoriBrowser*       browser,$/;"	m	struct:_MidoriBrowserClass
repl	waf-modules/wafadmin/Task.py	/^	def repl(match):$/;"	f	function:compile_fun_noshell
repl	waf-modules/wafadmin/Task.py	/^	def repl(match):$/;"	f	function:compile_fun_shell
repl	waf-modules/wafadmin/Tools/ocaml.py	/^	def repl(m):$/;"	f	function:filter_comments
repl	waf-modules/wafadmin/Tools/preproc.py	/^def repl(m):$/;"	f
repl_var	waf-modules/wafadmin/Utils.py	/^	def repl_var(m):$/;"	f	function:subst_vars
request	katze/katze-net.c	/^    KatzeNetRequest* request;$/;"	m	struct:__anon32	file:
rescan	waf-modules/wafadmin/Build.py	/^	def rescan(self,src_dir_node):$/;"	m	class:BuildContext
reset	waf-modules/wafadmin/Task.py	/^	def reset(self):$/;"	m	class:TaskGroup
resize	midori/midori-panedaction.c	/^    gboolean resize;$/;"	m	struct:_MidoriPanedActionChild	file:
result	waf-modules/wafadmin/Tools/python.py	/^		result=conf.check(lib=name,uselib='PYEMBED',libpath=path)$/;"	v
result	waf-modules/wafadmin/Tools/python.py	/^	result=False$/;"	v
ret	waf-modules/wafadmin/Tools/python.py	/^			ret=Utils.pproc.Popen(argv).wait()$/;"	v
ret_msg	waf-modules/wafadmin/Tools/config_c.py	/^def ret_msg(self,f,kw):$/;"	f
retrieve	waf-modules/wafadmin/Configure.py	/^	def retrieve(self,name,fromenv=None):$/;"	m	class:ConfigurationContext
reversed	katze/katze-arrayaction.c	/^    gboolean reversed;$/;"	m	struct:_KatzeArrayAction	file:
right_align_sidepanel	midori/midori-websettings.c	/^    gboolean right_align_sidepanel : 1;$/;"	m	struct:_MidoriWebSettings	file:
right_aligned	midori/midori-panel.c	/^    gboolean right_aligned;$/;"	m	struct:_MidoriPanel	file:
rot_chr	waf-modules/wafadmin/Utils.py	/^rot_chr=['\\\\','|','\/','-']$/;"	v
rot_idx	waf-modules/wafadmin/Utils.py	/^rot_idx=0$/;"	v
rss_init_parser	extensions/feed-panel/feed-rss.c	/^rss_init_parser (void)$/;"	f
rss_is_valid	extensions/feed-panel/feed-rss.c	/^rss_is_valid (FeedParser* fparser)$/;"	f	file:
rss_parse_channel	extensions/feed-panel/feed-rss.c	/^rss_parse_channel (FeedParser* fparser)$/;"	f	file:
rss_parse_item	extensions/feed-panel/feed-rss.c	/^rss_parse_item (FeedParser* fparser)$/;"	f	file:
rss_postparse_channel	extensions/feed-panel/feed-rss.c	/^rss_postparse_channel (FeedParser* fparser)$/;"	f	file:
rss_postparse_item	extensions/feed-panel/feed-rss.c	/^rss_postparse_item (FeedParser* fparser)$/;"	f	file:
rss_preparse_item	extensions/feed-panel/feed-rss.c	/^rss_preparse_item (FeedParser* fparser)$/;"	f	file:
rss_update	extensions/feed-panel/feed-rss.c	/^rss_update (FeedParser* fparser)$/;"	f	file:
run	waf-modules/wafadmin/Configure.py	/^					def run(*k,**kw):$/;"	f	function:ConfigurationContext.__getattr__
run	waf-modules/wafadmin/Runner.py	/^	def run(self):$/;"	m	class:TaskConsumer
run	waf-modules/wafadmin/Runner.py	/^def run(*args,**kwargs):$/;"	f
run	waf-modules/wafadmin/Task.py	/^	def run(self):$/;"	m	class:TaskBase
run	waf-modules/wafadmin/Tools/misc.py	/^	def run(self):$/;"	m	class:command_output
run	waf-modules/wafadmin/Tools/qt4.py	/^	run=Task.TaskBase.classes['cxx'].__dict__['run']$/;"	v	class:qxx_task
run	waf-modules/wafadmin/Tools/unittestw.py	/^	def run(self):$/;"	m	class:unit_test
run	waf-modules/wafadmin/Tools/vala.py	/^	def run(self):$/;"	m	class:valac_task
run_c_code	waf-modules/wafadmin/Tools/config_c.py	/^def run_c_code(self,*k,**kw):$/;"	f
run_old	waf-modules/wafadmin/Runner.py	/^run_old=threading.Thread.run$/;"	v
run_once	waf-modules/wafadmin/Utils.py	/^def run_once(fun):$/;"	f
runnable_status	waf-modules/wafadmin/Scripting.py	/^		def runnable_status(self):$/;"	f	function:uninstall
runnable_status	waf-modules/wafadmin/Task.py	/^	def runnable_status(self):$/;"	f	function:update_outputs
runnable_status	waf-modules/wafadmin/Task.py	/^	def runnable_status(self):$/;"	m	class:Task
runnable_status	waf-modules/wafadmin/Task.py	/^	def runnable_status(self):$/;"	m	class:TaskBase
runnable_status	waf-modules/wafadmin/Tools/misc.py	/^def runnable_status(self):$/;"	f
runnable_status	waf-modules/wafadmin/Tools/qt4.py	/^	def runnable_status(self):$/;"	m	class:qxx_task
save	waf-modules/wafadmin/Build.py	/^	def save(self):$/;"	m	class:BuildContext
save_timeout	midori/main.c	/^static guint save_timeout = 0;$/;"	v	file:
sbinfo	waf-modules/wafadmin/ansiterm.py	/^	sbinfo=CONSOLE_SCREEN_BUFFER_INFO()$/;"	v
scan	waf-modules/wafadmin/Task.py	/^	scan=None$/;"	v	class:Task
scan	waf-modules/wafadmin/Tools/ccroot.py	/^def scan(self):$/;"	f
scan	waf-modules/wafadmin/Tools/d.py	/^def scan(self):$/;"	f
scan	waf-modules/wafadmin/Tools/ocaml.py	/^def scan(self):$/;"	f
scan	waf-modules/wafadmin/Tools/qt4.py	/^	def scan(self):$/;"	m	class:qxx_task
scan	waf-modules/wafadmin/Tools/qt4.py	/^def scan(self):$/;"	f
scan	waf-modules/wafadmin/Tools/tex.py	/^def scan(self):$/;"	f
scc_common_flags	waf-modules/wafadmin/Tools/suncc.py	/^def scc_common_flags(conf):$/;"	f
screen_buffer_info	waf-modules/wafadmin/ansiterm.py	/^		def screen_buffer_info(self):$/;"	m	class:AnsiTerm
script_content	extensions/addons.c	/^    gchar* script_content;$/;"	m	struct:AddonElement	file:
scroll_with_middle_mouse_button	data/faq.html	/^<h4><a name="scroll_with_middle_mouse_button" id="scroll_with_middle_mouse_button">Scroll with middle mouse button<\/a><\/h4>$/;"	a
scroll_with_middle_mouse_button	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="scroll_with_middle_mouse_button" id="scroll_with_middle_mouse_button">Scroll with middle mouse button<\/a><\/h4>$/;"	a
scroll_with_middle_mouse_button	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="scroll_with_middle_mouse_button" id="scroll_with_middle_mouse_button">Scroll with middle mouse button<\/a><\/h4>$/;"	a
scrolled	katze/katze-preferences.c	/^    GtkWidget* scrolled;$/;"	m	struct:_KatzePreferencesPrivate	file:
scrolled_window	midori/midori-view.c	/^    GtkWidget* scrolled_window;$/;"	m	struct:_MidoriView	file:
scrollh	midori/midori-view.c	/^    gint scrollh, scrollv;$/;"	m	struct:_MidoriView	file:
scrolling_hints	katze/katze-scrolled.c	/^    gboolean scrolling_hints;$/;"	m	struct:_KatzeScrolledPrivate	file:
scrolling_on_website_xyz_is_very_slow	data/faq.html	/^<h4><a name="scrolling_on_website_xyz_is_very_slow" id="scrolling_on_website_xyz_is_very_slow">Scrolling on website xyz is very slow<\/a><\/h4>$/;"	a
scrolling_on_website_xyz_is_very_slow	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="scrolling_on_website_xyz_is_very_slow" id="scrolling_on_website_xyz_is_very_slow">Scrolling on website xyz is very slow<\/a><\/h4>$/;"	a
scrolling_on_website_xyz_is_very_slow	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="scrolling_on_website_xyz_is_very_slow" id="scrolling_on_website_xyz_is_very_slow">Scrolling on website xyz is very slow<\/a><\/h4>$/;"	a
scrolling_timeout_id	katze/katze-scrolled.c	/^    guint scrolling_timeout_id;$/;"	m	struct:_KatzeScrolledPrivate	file:
scrollv	midori/midori-view.c	/^    gint scrollh, scrollv;$/;"	m	struct:_MidoriView	file:
search_engines	midori/midori-app.c	/^    KatzeArray* search_engines;$/;"	m	struct:_MidoriApp	file:
search_engines	midori/midori-browser.c	/^    KatzeArray* search_engines;$/;"	m	struct:_MidoriBrowser	file:
search_engines	midori/midori-locationaction.c	/^    KatzeArray* search_engines;$/;"	m	struct:_MidoriLocationAction	file:
search_engines	midori/midori-searchaction.c	/^    KatzeArray* search_engines;$/;"	m	struct:_MidoriSearchAction	file:
search_engines_new_from_file	midori/main.c	/^search_engines_new_from_file (const gchar* filename,$/;"	f	file:
search_engines_new_from_folder	midori/main.c	/^search_engines_new_from_folder (const gchar* config,$/;"	f	file:
search_engines_save_to_file	midori/main.c	/^search_engines_save_to_file (KatzeArray*  search_engines,$/;"	f	file:
search_width	midori/midori-websettings.c	/^    gint search_width;$/;"	m	struct:_MidoriWebSettings	file:
secondary_icon	midori/midori-locationaction.c	/^    gchar* secondary_icon;$/;"	m	struct:_MidoriLocationAction	file:
secondary_icon_released_cb	extensions/feed-panel/main.c	/^secondary_icon_released_cb (GtkAction*     action,$/;"	f	file:
security	midori/midori-view.c	/^    MidoriSecurity security;$/;"	m	struct:_MidoriView	file:
selected_text	midori/midori-view.c	/^    gchar* selected_text;$/;"	m	struct:_MidoriView	file:
self	_build_/default/extensions/history-list.c	/^	HistoryListManager * self;$/;"	m	struct:_Block1Data	file:
self	_build_/default/extensions/history-list.c	/^	HistoryListManager * self;$/;"	m	struct:_Block2Data	file:
send_open_command	midori/socket.c	/^void send_open_command(gint sock, const gchar* command, gchar **args)$/;"	f
sequence_order	waf-modules/wafadmin/TaskGen.py	/^def sequence_order(self):$/;"	f
set_chmod	waf-modules/wafadmin/TaskGen.py	/^	def set_chmod(self,val):$/;"	m	class:task_gen
set_color	waf-modules/wafadmin/ansiterm.py	/^		def set_color(self,param):$/;"	m	class:AnsiTerm
set_column	waf-modules/wafadmin/ansiterm.py	/^		def set_column(self,param):$/;"	m	class:AnsiTerm
set_curdir	waf-modules/wafadmin/Utils.py	/^	def set_curdir(self,dir):$/;"	m	class:Context
set_cursor	waf-modules/wafadmin/ansiterm.py	/^		def set_cursor(self,param):$/;"	m	class:AnsiTerm
set_def	waf-modules/wafadmin/Scripting.py	/^	def set_def(obj,name=''):$/;"	f	function:prepare_impl
set_default	waf-modules/wafadmin/3rdparty/boost.py	/^def set_default(kw,var,val):$/;"	f
set_env	waf-modules/wafadmin/Build.py	/^	def set_env(self,name,val):$/;"	m	class:BuildContext
set_env_name	waf-modules/wafadmin/Configure.py	/^	def set_env_name(self,name,env):$/;"	m	class:ConfigurationContext
set_group	waf-modules/wafadmin/Build.py	/^	def set_group(self,*k,**kw):$/;"	m	class:BuildContext
set_group	waf-modules/wafadmin/Task.py	/^	def set_group(self,idx):$/;"	m	class:TaskManager
set_inputs	waf-modules/wafadmin/Task.py	/^	def set_inputs(self,inp):$/;"	m	class:Task
set_inst_path	waf-modules/wafadmin/TaskGen.py	/^	def set_inst_path(self,val):$/;"	m	class:task_gen
set_macosx_deployment_target	waf-modules/wafadmin/Tools/osx.py	/^def set_macosx_deployment_target(self):$/;"	f
set_main_module	waf-modules/wafadmin/Utils.py	/^def set_main_module(file_path):$/;"	f
set_nonblocking_mode	midori/socket.c	/^static gint set_nonblocking_mode(gint fd, gboolean nonblock)$/;"	f	file:
set_options	waf-modules/wafadmin/3rdparty/boost.py	/^def set_options(opt):$/;"	f
set_options	waf-modules/wafadmin/Tools/compiler_cc.py	/^def set_options(opt):$/;"	f
set_options	waf-modules/wafadmin/Tools/compiler_cxx.py	/^def set_options(opt):$/;"	f
set_options	waf-modules/wafadmin/Tools/compiler_d.py	/^def set_options(opt):$/;"	f
set_options	waf-modules/wafadmin/Tools/cs.py	/^def set_options(opt):$/;"	f
set_options	waf-modules/wafadmin/Tools/gnome.py	/^def set_options(opt):$/;"	f
set_options	waf-modules/wafadmin/Tools/gnu_dirs.py	/^def set_options(opt):$/;"	f
set_options	waf-modules/wafadmin/Tools/intltool.py	/^def set_options(opt):$/;"	f
set_options	waf-modules/wafadmin/Tools/perl.py	/^def set_options(opt):$/;"	f
set_options	waf-modules/wafadmin/Tools/python.py	/^def set_options(opt):$/;"	f
set_options	waf-modules/wafadmin/Tools/qt4.py	/^def set_options(opt):$/;"	f
set_options	waf-modules/wafadmin/Tools/ruby.py	/^def set_options(opt):$/;"	f
set_options	waf-modules/wafadmin/Tools/unittestw.py	/^def set_options(opt):$/;"	f
set_options	waf-modules/wafadmin/Tools/vala.py	/^def set_options(opt):$/;"	f
set_order	waf-modules/wafadmin/Task.py	/^	def set_order(self,a,b):$/;"	m	class:TaskGroup
set_outputs	waf-modules/wafadmin/Task.py	/^	def set_outputs(self,out):$/;"	m	class:Task
set_run_after	waf-modules/wafadmin/Task.py	/^	def set_run_after(self,task):$/;"	m	class:Task
set_type	waf-modules/wafadmin/Node.py	/^	def set_type(self,t):$/;"	m	class:Node
set_variant	waf-modules/wafadmin/Environment.py	/^	def set_variant(self,name):$/;"	m	class:Environment
setenv	waf-modules/wafadmin/Configure.py	/^	def setenv(self,name):$/;"	m	class:ConfigurationContext
settings	midori/midori-app.c	/^    MidoriWebSettings* settings;$/;"	m	struct:_MidoriApp	file:
settings	midori/midori-browser.c	/^    MidoriWebSettings* settings;$/;"	m	struct:_MidoriBrowser	file:
settings	midori/midori-extension.c	/^    GHashTable* settings;$/;"	m	struct:_MidoriExtensionPrivate	file:
settings	midori/midori-preferences.c	/^    gpointer settings;$/;"	m	struct:_MidoriPreferences	file:
settings	midori/midori-view.c	/^    MidoriWebSettings* settings;$/;"	m	struct:_MidoriView	file:
settings_and_accels_new	midori/main.c	/^settings_and_accels_new (const gchar* config,$/;"	f	file:
settings_notify_cb	midori/main.c	/^settings_notify_cb (MidoriWebSettings* settings,$/;"	f	file:
settings_save_to_file	midori/main.c	/^settings_save_to_file (MidoriWebSettings* settings,$/;"	f	file:
setup	waf-modules/wafadmin/Build.py	/^	def setup(self,tool,tooldir=None,funs=None):$/;"	m	class:BuildContext
setup_msvc	waf-modules/wafadmin/Tools/msvc.py	/^def setup_msvc(conf,versions):$/;"	f
sgml_scan	waf-modules/wafadmin/Tools/gnome.py	/^def sgml_scan(self):$/;"	f
shlib_CCFLAGS	_build_/c4che/default.cache.py	/^shlib_CCFLAGS = ['-fPIC', '-DPIC']$/;"	v
shlib_LINKFLAGS	_build_/c4che/default.cache.py	/^shlib_LINKFLAGS = ['-shared']$/;"	v
shlib_PATTERN	_build_/c4che/default.cache.py	/^shlib_PATTERN = 'lib%s.so'$/;"	v
shortcuts_accel_cleared_cb	extensions/shortcuts.c	/^shortcuts_accel_cleared_cb (GtkCellRenderer* renderer,$/;"	f	file:
shortcuts_accel_edited_cb	extensions/shortcuts.c	/^shortcuts_accel_edited_cb (GtkCellRenderer* renderer,$/;"	f	file:
shortcuts_activate_cb	extensions/shortcuts.c	/^shortcuts_activate_cb (MidoriExtension* extension,$/;"	f	file:
shortcuts_app_add_browser_cb	extensions/shortcuts.c	/^shortcuts_app_add_browser_cb (MidoriApp*       app,$/;"	f	file:
shortcuts_browser_populate_tool_menu_cb	extensions/shortcuts.c	/^shortcuts_browser_populate_tool_menu_cb (MidoriBrowser*   browser,$/;"	f	file:
shortcuts_deactivate_cb	extensions/shortcuts.c	/^shortcuts_deactivate_cb (MidoriExtension* extension,$/;"	f	file:
shortcuts_get_preferences_dialog	extensions/shortcuts.c	/^shortcuts_get_preferences_dialog (MidoriExtension* extension)$/;"	f	file:
shortcuts_hotkey_for_action	extensions/shortcuts.c	/^shortcuts_hotkey_for_action (GtkAction*   action,$/;"	f	file:
shortcuts_label_for_action	extensions/shortcuts.c	/^shortcuts_label_for_action (GtkAction* action)$/;"	f	file:
shortcuts_menu_configure_shortcuts_activate_cb	extensions/shortcuts.c	/^shortcuts_menu_configure_shortcuts_activate_cb (GtkWidget*       menuitem,$/;"	f	file:
shortcuts_preferences_response_cb	extensions/shortcuts.c	/^shortcuts_preferences_response_cb (GtkWidget* dialog,$/;"	f	file:
show_bookmarkbar	midori/midori-websettings.c	/^    gboolean show_bookmarkbar : 1;$/;"	m	struct:_MidoriWebSettings	file:
show_controls	midori/midori-panel.c	/^    gboolean show_controls;$/;"	m	struct:_MidoriPanel	file:
show_crash_dialog	midori/midori-websettings.c	/^    gboolean show_crash_dialog : 1;$/;"	m	struct:_MidoriWebSettings	file:
show_cursor	waf-modules/wafadmin/ansiterm.py	/^		def show_cursor(self,param):$/;"	m	class:AnsiTerm
show_menubar	midori/midori-websettings.c	/^    gboolean show_menubar : 1;$/;"	m	struct:_MidoriWebSettings	file:
show_navigationbar	midori/midori-browser.c	/^    gboolean show_navigationbar;$/;"	m	struct:_MidoriBrowser	file:
show_navigationbar	midori/midori-websettings.c	/^    gboolean show_navigationbar : 1;$/;"	m	struct:_MidoriWebSettings	file:
show_panel	midori/midori-websettings.c	/^    gboolean show_panel : 1;$/;"	m	struct:_MidoriWebSettings	file:
show_statusbar	midori/midori-browser.c	/^    gboolean show_statusbar;$/;"	m	struct:_MidoriBrowser	file:
show_statusbar	midori/midori-websettings.c	/^    gboolean show_statusbar : 1;$/;"	m	struct:_MidoriWebSettings	file:
show_tabs	midori/midori-browser.c	/^    gboolean show_tabs;$/;"	m	struct:_MidoriBrowser	file:
show_titles	midori/midori-panel.c	/^    gboolean show_titles;$/;"	m	struct:_MidoriPanel	file:
shrink	midori/midori-panedaction.c	/^    gboolean shrink;$/;"	m	struct:_MidoriPanedActionChild	file:
sig_explicit_deps	waf-modules/wafadmin/Task.py	/^	def sig_explicit_deps(self):$/;"	m	class:Task
sig_implicit_deps	waf-modules/wafadmin/Task.py	/^	def sig_implicit_deps(self):$/;"	m	class:Task
sig_vars	waf-modules/wafadmin/Task.py	/^	def sig_vars(self):$/;"	m	class:Task
signal_handler	midori/main.c	/^signal_handler (int signal_id)$/;"	f	file:
signals	extensions/cookie-manager/cookie-manager.c	/^static guint signals[LAST_SIGNAL];$/;"	v	file:
signals	extensions/feed-panel/feed-panel.c	/^static guint signals[LAST_SIGNAL];$/;"	v	file:
signals	katze/katze-array.c	/^static guint signals[LAST_SIGNAL];$/;"	v	file:
signals	katze/katze-arrayaction.c	/^static guint signals[LAST_SIGNAL];$/;"	v	file:
signals	katze/katze-item.c	/^static guint signals[LAST_SIGNAL];$/;"	v	file:
signals	midori/gtkiconentry.c	/^static guint signals[LAST_SIGNAL] = {0};$/;"	v	file:
signals	midori/midori-app.c	/^static guint signals[LAST_SIGNAL];$/;"	v	file:
signals	midori/midori-browser.c	/^static guint signals[LAST_SIGNAL];$/;"	v	file:
signals	midori/midori-extension.c	/^static guint signals[LAST_SIGNAL];$/;"	v	file:
signals	midori/midori-locationaction.c	/^static guint signals[LAST_SIGNAL];$/;"	v	file:
signals	midori/midori-panel.c	/^static guint signals[LAST_SIGNAL];$/;"	v	file:
signals	midori/midori-searchaction.c	/^static guint signals[LAST_SIGNAL];$/;"	v	file:
signals	midori/midori-view.c	/^static guint signals[LAST_SIGNAL];$/;"	v	file:
signals	midori/midori-viewable.c	/^static guint signals[LAST_SIGNAL];$/;"	v	file:
signature	waf-modules/wafadmin/Task.py	/^	def signature(self):$/;"	m	class:Task
simple_task_type	waf-modules/wafadmin/Task.py	/^def simple_task_type(name,line,color='GREEN',vars=[],ext_in=[],ext_out=[],before=[],after=[],shell=None):$/;"	f
sizegroup	katze/katze-preferences.c	/^    GtkSizeGroup* sizegroup;$/;"	m	struct:_KatzePreferencesPrivate	file:
sizegroup2	katze/katze-preferences.c	/^    GtkSizeGroup* sizegroup2;$/;"	m	struct:_KatzePreferencesPrivate	file:
skip	debian/waf-unpack	/^		skip = False$/;"	v
skip	debian/waf-unpack	/^		skip = True$/;"	v
skip	debian/waf-unpack	/^skip = False$/;"	v
skipped	waf-modules/wafadmin/Tools/preproc.py	/^skipped='s'$/;"	v
snapshot_load_finished_cb	midori/main.c	/^snapshot_load_finished_cb (GtkWidget*      web_view,$/;"	f	file:
sock	midori/socket.c	/^	SockInfo *sock;$/;"	m	struct:_SockSource	file:
sock	midori/socket.h	/^	gint sock;$/;"	m	struct:_SockInfo
sock_add_watch	midori/socket.c	/^guint sock_add_watch(SockInfo *sock, GIOCondition condition, SockFunc func,$/;"	f
sock_address_list_free	midori/socket.c	/^static void sock_address_list_free(GList *addr_list)$/;"	f	file:
sock_ch	midori/socket.h	/^	GIOChannel *sock_ch;$/;"	m	struct:_SockInfo
sock_check	midori/socket.c	/^static gboolean sock_check(GSource *source)$/;"	f	file:
sock_cleanup	midori/socket.c	/^gint sock_cleanup(void)$/;"	f
sock_close	midori/socket.c	/^gint sock_close(SockInfo *sock)$/;"	f
sock_connect	midori/socket.c	/^SockInfo *sock_connect(const gchar *hostname, gushort port)$/;"	f
sock_connect_address_list_async	midori/socket.c	/^static gint sock_connect_address_list_async(SockConnectData *conn_data)$/;"	f	file:
sock_connect_async	midori/socket.c	/^gint sock_connect_async(const gchar *hostname, gushort port,$/;"	f
sock_connect_async_cancel	midori/socket.c	/^gint sock_connect_async_cancel(gint id)$/;"	f
sock_connect_async_cb	midori/socket.c	/^static gboolean sock_connect_async_cb(GIOChannel *source,$/;"	f	file:
sock_connect_async_get_address_info_cb	midori/socket.c	/^static gint sock_connect_async_get_address_info_cb(GList *addr_list,$/;"	f	file:
sock_connect_by_getaddrinfo	midori/socket.c	/^static SockDesc sock_connect_by_getaddrinfo(const gchar *hostname, gushort port)$/;"	f	file:
sock_connect_by_hostname	midori/socket.c	/^static gint sock_connect_by_hostname(gint sock, const gchar *hostname,$/;"	f	file:
sock_connect_data_list	midori/socket.c	/^static GList *sock_connect_data_list = NULL;$/;"	v	file:
sock_connect_with_timeout	midori/socket.c	/^static gint sock_connect_with_timeout(gint sock,$/;"	f	file:
sock_dispatch	midori/socket.c	/^static gboolean sock_dispatch(GSource *source, GSourceFunc callback,$/;"	f	file:
sock_find_from_fd	midori/socket.c	/^static SockInfo *sock_find_from_fd(gint fd)$/;"	f	file:
sock_get_address_info_async	midori/socket.c	/^static SockLookupData *sock_get_address_info_async(const gchar *hostname,$/;"	f	file:
sock_get_address_info_async_cancel	midori/socket.c	/^static gint sock_get_address_info_async_cancel(SockLookupData *lookup_data)$/;"	f	file:
sock_get_address_info_async_cb	midori/socket.c	/^static gboolean sock_get_address_info_async_cb(GIOChannel *source,$/;"	f	file:
sock_getline	midori/socket.c	/^gint sock_getline(SockInfo *sock, gchar **line)$/;"	f
sock_gets	midori/socket.c	/^gint sock_gets(SockInfo *sock, gchar *buf, gint len)$/;"	f
sock_has_read_data	midori/socket.c	/^gboolean sock_has_read_data(SockInfo *sock)$/;"	f
sock_is_nonblocking_mode	midori/socket.c	/^gboolean sock_is_nonblocking_mode(SockInfo *sock)$/;"	f
sock_kill_process	midori/socket.c	/^static gint sock_kill_process(pid_t pid)$/;"	f	file:
sock_list	midori/socket.c	/^static GList *sock_list = NULL;$/;"	v	file:
sock_peek	midori/socket.c	/^gint sock_peek(SockInfo *sock, gchar *buf, gint len)$/;"	f
sock_prepare	midori/socket.c	/^static gboolean sock_prepare(GSource *source, gint *timeout)$/;"	f	file:
sock_printf	midori/socket.c	/^gint sock_printf(SockInfo *sock, const gchar *format, ...)$/;"	f
sock_puts	midori/socket.c	/^gint sock_puts(SockInfo *sock, const gchar *buf)$/;"	f
sock_read	midori/socket.c	/^gint sock_read(SockInfo *sock, gchar *buf, gint len)$/;"	f
sock_set_errno_from_last_error	midori/socket.c	/^static void sock_set_errno_from_last_error(gint error)$/;"	f	file:
sock_set_io_timeout	midori/socket.c	/^gint sock_set_io_timeout(guint sec)$/;"	f
sock_set_nonblocking_mode	midori/socket.c	/^gint sock_set_nonblocking_mode(SockInfo *sock, gboolean nonblock)$/;"	f
sock_watch_cb	midori/socket.c	/^static gboolean sock_watch_cb(GIOChannel *source, GIOCondition condition,$/;"	f	file:
sock_watch_funcs	midori/socket.c	/^GSourceFuncs sock_watch_funcs = {$/;"	v
sock_write	midori/socket.c	/^gint sock_write(SockInfo *sock, const gchar *buf, gint len)$/;"	f
sock_write_all	midori/socket.c	/^gint sock_write_all(SockInfo *sock, const gchar *buf, gint len)$/;"	f
socket_filename	midori/socket.c	/^static gchar *socket_filename = NULL;$/;"	v	file:
socket_init	midori/socket.c	/^gint socket_init(const gchar *instance_name, const gchar *config_dir, gboolean *exists)$/;"	f
socktype	midori/socket.c	/^	gint socktype;$/;"	m	struct:_SockAddrData	file:
sokoke_accept_languages	midori/sokoke.c	/^sokoke_accept_languages (const gchar* const * lang_names)$/;"	f
sokoke_action_create_popup_menu_item	midori/sokoke.c	/^sokoke_action_create_popup_menu_item (GtkAction* action)$/;"	f
sokoke_add_quality_value	midori/sokoke.c	/^sokoke_add_quality_value (const gchar *str,$/;"	f	file:
sokoke_build_thumbnail_path	midori/sokoke.c	/^sokoke_build_thumbnail_path (const gchar* name)$/;"	f
sokoke_days_between	midori/sokoke.c	/^sokoke_days_between (const time_t* day1,$/;"	f
sokoke_default_for_uri	midori/sokoke.c	/^sokoke_default_for_uri (const gchar* uri,$/;"	f	file:
sokoke_external_uri	midori/sokoke.c	/^sokoke_external_uri (const gchar* uri)$/;"	f
sokoke_file_chooser_dialog_new	midori/sokoke.c	/^sokoke_file_chooser_dialog_new (const gchar*         title,$/;"	f
sokoke_find_config_filename	midori/sokoke.c	/^sokoke_find_config_filename (const gchar* folder,$/;"	f
sokoke_find_data_filename	midori/sokoke.c	/^sokoke_find_data_filename (const gchar* filename,$/;"	f
sokoke_find_lib_path	midori/sokoke.c	/^gchar* sokoke_find_lib_path (const gchar* folder)$/;"	f
sokoke_get_argv	midori/sokoke.c	/^sokoke_get_argv (gchar** argument_vector)$/;"	f
sokoke_get_desktop	midori/sokoke.c	/^sokoke_get_desktop (void)$/;"	f	file:
sokoke_gtk_action_count_modifiers	midori/sokoke.c	/^sokoke_gtk_action_count_modifiers (GtkAction* action)$/;"	f
sokoke_is_app_or_private	midori/sokoke.c	/^sokoke_is_app_or_private (void)$/;"	f
sokoke_js_script_eval	midori/sokoke.c	/^sokoke_js_script_eval (JSContextRef js_context,$/;"	f
sokoke_js_string_utf8	midori/sokoke.c	/^sokoke_js_string_utf8 (JSStringRef js_string)$/;"	f	file:
sokoke_key_file_get_boolean_default	midori/sokoke.c	/^sokoke_key_file_get_boolean_default (GKeyFile*      key_file,$/;"	f
sokoke_key_file_get_double_default	midori/sokoke.c	/^sokoke_key_file_get_double_default (GKeyFile*     key_file,$/;"	f
sokoke_key_file_get_integer_default	midori/sokoke.c	/^sokoke_key_file_get_integer_default (GKeyFile*    key_file,$/;"	f
sokoke_key_file_get_string_default	midori/sokoke.c	/^sokoke_key_file_get_string_default (GKeyFile*    key_file,$/;"	f
sokoke_key_file_get_string_list_default	midori/sokoke.c	/^sokoke_key_file_get_string_list_default (GKeyFile*     key_file,$/;"	f
sokoke_key_file_save_to_file	midori/sokoke.c	/^sokoke_key_file_save_to_file (GKeyFile*    key_file,$/;"	f
sokoke_magic_uri	midori/sokoke.c	/^sokoke_magic_uri (const gchar* uri)$/;"	f
sokoke_message_dialog	midori/sokoke.c	/^sokoke_message_dialog (GtkMessageType message_type,$/;"	f
sokoke_message_dialog_response_cb	midori/sokoke.c	/^sokoke_message_dialog_response_cb (GtkWidget* dialog,$/;"	f	file:
sokoke_on_entry_drag_data_received	katze/gtk3-compat.c	/^sokoke_on_entry_drag_data_received (GtkEntry*       entry,$/;"	f	file:
sokoke_on_entry_focus_in_event	katze/gtk3-compat.c	/^sokoke_on_entry_focus_in_event (GtkEntry*      entry,$/;"	f	file:
sokoke_on_entry_focus_out_event	katze/gtk3-compat.c	/^sokoke_on_entry_focus_out_event (GtkEntry*      entry,$/;"	f	file:
sokoke_open_with_response_cb	midori/sokoke.c	/^sokoke_open_with_response_cb (GtkWidget* dialog,$/;"	f	file:
sokoke_posix_lang_to_rfc2616	midori/sokoke.c	/^sokoke_posix_lang_to_rfc2616 (const gchar *language)$/;"	f	file:
sokoke_prefetch_uri	midori/sokoke.c	/^sokoke_prefetch_uri (MidoriWebSettings*  settings,$/;"	f
sokoke_recursive_fork_protection	midori/sokoke.c	/^sokoke_recursive_fork_protection (const gchar* uri,$/;"	f
sokoke_register_privacy_item	midori/sokoke.c	/^sokoke_register_privacy_item (const gchar* name,$/;"	f
sokoke_remove_path	midori/sokoke.c	/^sokoke_remove_path (const gchar* path,$/;"	f
sokoke_replace_variables	midori/sokoke.c	/^sokoke_replace_variables (const gchar* template,$/;"	f
sokoke_resolve_hostname	midori/sokoke.c	/^sokoke_resolve_hostname (const gchar* hostname)$/;"	f
sokoke_resolve_hostname_cb	midori/sokoke.c	/^sokoke_resolve_hostname_cb (SoupAddress *address,$/;"	f	file:
sokoke_set_config_dir	midori/sokoke.c	/^sokoke_set_config_dir (const gchar* new_config_dir)$/;"	f
sokoke_show_uri	midori/sokoke.c	/^sokoke_show_uri (GdkScreen*   screen,$/;"	f
sokoke_show_uri_with_mime_type	midori/sokoke.c	/^sokoke_show_uri_with_mime_type (GdkScreen*   screen,$/;"	f
sokoke_spawn_app	midori/sokoke.c	/^sokoke_spawn_app (const gchar* uri,$/;"	f
sokoke_spawn_program	midori/sokoke.c	/^sokoke_spawn_program (const gchar* command,$/;"	f
sokoke_time_t_to_julian	midori/sokoke.c	/^sokoke_time_t_to_julian (const time_t* timestamp)$/;"	f
sokoke_widget_copy_clipboard	midori/sokoke.c	/^sokoke_widget_copy_clipboard (GtkWidget*   widget,$/;"	f
sokoke_widget_get_text_size	midori/sokoke.c	/^sokoke_widget_get_text_size (GtkWidget*   widget,$/;"	f
sokoke_widget_set_pango_font_style	katze/gtk3-compat.c	/^sokoke_widget_set_pango_font_style (GtkWidget* widget,$/;"	f	file:
sokoke_widget_set_visible	midori/sokoke.c	/^void sokoke_widget_set_visible (GtkWidget* widget, gboolean visible)$/;"	f
sokoke_window_activate_key	midori/sokoke.c	/^sokoke_window_activate_key (GtkWindow*   window,$/;"	f
sokoke_xfce_header_new	midori/sokoke.c	/^sokoke_xfce_header_new (const gchar* icon,$/;"	f
soup_session_settings_notify_first_party_cb	midori/main.c	/^soup_session_settings_notify_first_party_cb (MidoriWebSettings* settings,$/;"	f	file:
soup_session_settings_notify_http_proxy_cb	midori/main.c	/^soup_session_settings_notify_http_proxy_cb (MidoriWebSettings* settings,$/;"	f	file:
source_id	extensions/feed-panel/main.c	/^    guint source_id;$/;"	m	struct:__anon11	file:
sout	waf-modules/wafadmin/Tools/msvc.py	/^	sout=Utils.cmd_output(['cmd','\/E:on','\/V:on','\/C',batfile])$/;"	v
special	midori/midori-view.c	/^    gboolean special;$/;"	m	struct:_MidoriView	file:
speeddial	midori/midori-app.c	/^    GKeyFile* speeddial;$/;"	m	struct:_MidoriApp	file:
speeddial	midori/midori-browser.c	/^    GKeyFile* speeddial;$/;"	m	struct:_MidoriBrowser	file:
speeddial_markup	midori/midori-view.c	/^static gchar* speeddial_markup = NULL;$/;"	v	file:
speeddial_new_from_file	midori/main.c	/^speeddial_new_from_file (const gchar* config,$/;"	f	file:
spell_check	data/faq.html	/^<h2 class="sectionedit16"><a name="spell_check" id="spell_check">Spell check<\/a><\/h2>$/;"	a
spell_check	debian/midori/usr/share/doc/midori/faq.html	/^<h2 class="sectionedit16"><a name="spell_check" id="spell_check">Spell check<\/a><\/h2>$/;"	a
spell_check	debian/tmp/usr/share/doc/midori/faq.html	/^<h2 class="sectionedit16"><a name="spell_check" id="spell_check">Spell check<\/a><\/h2>$/;"	a
split_path	waf-modules/wafadmin/Utils.py	/^	split_path=split_path_cygwin$/;"	v
split_path	waf-modules/wafadmin/Utils.py	/^	split_path=split_path_win32$/;"	v
split_path	waf-modules/wafadmin/Utils.py	/^def split_path(path):$/;"	f
split_path_cygwin	waf-modules/wafadmin/Utils.py	/^def split_path_cygwin(path):$/;"	f
split_path_win32	waf-modules/wafadmin/Utils.py	/^def split_path_win32(path):$/;"	f
src_dir	waf-modules/wafadmin/Node.py	/^	def src_dir(self,env):$/;"	m	class:Node
srcpath	waf-modules/wafadmin/Node.py	/^	def srcpath(self,env=None):$/;"	m	class:Node
ssl	midori/socket.h	/^	SSL *ssl;$/;"	m	struct:_SockInfo
ssl	midori/socket.h	/^	gpointer ssl;$/;"	m	struct:_SockInfo
ssl_done_socket	midori/socket.c	/^void ssl_done_socket(SockInfo *sockinfo)$/;"	f
ssl_getline	midori/socket.c	/^gint ssl_getline(SSL *ssl, gchar **line)$/;"	f
ssl_gets	midori/socket.c	/^gint ssl_gets(SSL *ssl, gchar *buf, gint len)$/;"	f
ssl_peek	midori/socket.c	/^gint ssl_peek(SSL *ssl, gchar *buf, gint len)$/;"	f
ssl_read	midori/socket.c	/^gint ssl_read(SSL *ssl, gchar *buf, gint len)$/;"	f
ssl_write	midori/socket.c	/^gint ssl_write(SSL *ssl, const gchar *buf, gint len)$/;"	f
ssl_write_all	midori/socket.c	/^gint ssl_write_all(SSL *ssl, const gchar *buf, gint len)$/;"	f
standard_includes	waf-modules/wafadmin/Tools/preproc.py	/^	standard_includes=[]$/;"	v	class:PreprocError
standard_includes	waf-modules/wafadmin/Tools/preproc.py	/^standard_includes=['\/usr\/include']$/;"	v
start	extensions/mouse-gestures.c	/^    struct MouseGestureNode start;$/;"	m	struct:_MouseGesture	typeref:struct:_MouseGesture::MouseGestureNode	file:
start	waf-modules/wafadmin/Runner.py	/^	def start(self):$/;"	m	class:Parallel
start	waf-modules/wafadmin/Tools/d.py	/^	def start(self,node):$/;"	m	class:d_parser
start	waf-modules/wafadmin/Tools/preproc.py	/^	def start(self,node,env):$/;"	m	class:c_parser
startElement	waf-modules/wafadmin/Tools/qt4.py	/^	def startElement(self,name,attrs):$/;"	m	class:XMLHandler
start_msg	waf-modules/wafadmin/Configure.py	/^	def start_msg(self,msg):$/;"	m	class:ConfigurationContext
start_time	katze/katze-scrolled.c	/^    guint32 start_time;$/;"	m	struct:_KatzeScrolledPrivate	file:
start_x	katze/katze-scrolled.c	/^    gint start_x;$/;"	m	struct:_KatzeScrolledPrivate	file:
start_y	katze/katze-scrolled.c	/^    gint start_y;$/;"	m	struct:_KatzeScrolledPrivate	file:
stat	waf-modules/wafadmin/Task.py	/^	stat=None$/;"	v	class:TaskBase
state	midori/socket.h	/^	ConnectionState state;$/;"	m	struct:_SockInfo
static_icon_name	katze/katze-throbber.c	/^    gchar* static_icon_name;$/;"	m	struct:_KatzeThrobber	file:
static_pixbuf	katze/katze-throbber.c	/^    GdkPixbuf* static_pixbuf;$/;"	m	struct:_KatzeThrobber	file:
static_stock_id	katze/katze-throbber.c	/^    gchar* static_stock_id;$/;"	m	struct:_KatzeThrobber	file:
staticlib_LINKFLAGS	_build_/c4che/default.cache.py	/^staticlib_LINKFLAGS = ['-Wl,-Bstatic']$/;"	v
staticlib_PATTERN	_build_/c4che/default.cache.py	/^staticlib_PATTERN = 'lib%s.a'$/;"	v
status	katze/katze-net.h	/^    KatzeNetStatus status;$/;"	m	struct:__anon34
status_cb	katze/katze-net.c	/^    KatzeNetStatusCb status_cb;$/;"	m	struct:__anon32	file:
statusbar	midori/midori-browser.c	/^    GtkWidget* statusbar;$/;"	m	struct:_MidoriBrowser	file:
statusbar_contents	midori/midori-browser.c	/^    GtkWidget* statusbar_contents;$/;"	m	struct:_MidoriBrowser	file:
statusbar_features_activate_cb	extensions/statusbar-features.c	/^statusbar_features_activate_cb (MidoriExtension* extension,$/;"	f	file:
statusbar_features_app_add_browser_cb	extensions/statusbar-features.c	/^statusbar_features_app_add_browser_cb (MidoriApp*       app,$/;"	f	file:
statusbar_features_browser_notify_tab_cb	extensions/statusbar-features.c	/^statusbar_features_browser_notify_tab_cb (MidoriBrowser* browser,$/;"	f	file:
statusbar_features_deactivate_cb	extensions/statusbar-features.c	/^statusbar_features_deactivate_cb (MidoriExtension* extension,$/;"	f	file:
statusbar_features_toolbar_notify_toolbar_style_cb	extensions/statusbar-features.c	/^statusbar_features_toolbar_notify_toolbar_style_cb (GtkWidget*  toolbar,$/;"	f	file:
statusbar_features_zoom_level_changed_cb	extensions/statusbar-features.c	/^statusbar_features_zoom_level_changed_cb (GtkWidget*     combobox,$/;"	f	file:
statusbar_text	midori/midori-browser.c	/^    gchar* statusbar_text;$/;"	m	struct:_MidoriBrowser	file:
statusbar_text	midori/midori-view.c	/^    gchar* statusbar_text;$/;"	m	struct:_MidoriView	file:
statusbar_text_changed	midori/midori-browser.h	/^    (*statusbar_text_changed)  (MidoriBrowser*       browser,$/;"	m	struct:_MidoriBrowserClass
stderr	waf-modules/wafadmin/Tools/misc.py	/^		stderr=None$/;"	v
stderr	waf-modules/wafadmin/Tools/misc.py	/^		stderr=self.path.find_or_declare(self.stderr)$/;"	v
stdin	waf-modules/wafadmin/Tools/misc.py	/^		stdin=None$/;"	v
stdin	waf-modules/wafadmin/Tools/misc.py	/^		stdin=self.path.find_resource(self.stdin)$/;"	v
stdout	waf-modules/wafadmin/Tools/misc.py	/^		stdout=None$/;"	v
stdout	waf-modules/wafadmin/Tools/misc.py	/^		stdout=self.path.find_or_declare(self.stdout)$/;"	v
stock_id	katze/katze-throbber.c	/^    gchar* stock_id;$/;"	m	struct:_KatzeThrobber	file:
stock_id	midori/midori-panel.c	/^    gchar* stock_id;$/;"	m	struct:__anon67	file:
storage_type	midori/gtkiconentry.c	/^  GtkImageType storage_type;$/;"	m	struct:__anon54	file:
store	extensions/cookie-manager/cookie-manager-page.c	/^	GtkTreeStore *store;$/;"	m	struct:_CookieManagerPagePrivate	file:
store	extensions/cookie-manager/cookie-manager.c	/^	GtkTreeStore *store;$/;"	m	struct:_CookieManagerPrivate	file:
store	waf-modules/wafadmin/Configure.py	/^	def store(self,file=''):$/;"	m	class:ConfigurationContext
store	waf-modules/wafadmin/Environment.py	/^	def store(self,filename):$/;"	m	class:Environment
store_available	extensions/toolbar-editor.c	/^	GtkListStore *store_available;$/;"	m	struct:__anon16	file:
store_task_type	waf-modules/wafadmin/Task.py	/^class store_task_type(type):$/;"	c
store_used	extensions/toolbar-editor.c	/^	GtkListStore *store_used;$/;"	m	struct:__anon16	file:
strict_quotes	waf-modules/wafadmin/Tools/preproc.py	/^strict_quotes=0$/;"	v
string_append_escaped	midori/midori-array.c	/^string_append_escaped (GString     *str,$/;"	f	file:
string_append_item	midori/midori-array.c	/^string_append_item (GString*   string,$/;"	f	file:
string_append_netscape_item	midori/midori-array.c	/^string_append_netscape_item (GString*   string,$/;"	f	file:
string_append_xml_element	midori/midori-array.c	/^string_append_xml_element (GString*     string,$/;"	f	file:
string_get	_build_/default/katze/midori-uri.c	/^static gchar string_get (const gchar* self, glong index) {$/;"	f	file:
string_offset	_build_/default/katze/midori-uri.c	/^static const gchar* string_offset (const gchar* self, glong offset) {$/;"	f	file:
string_replace	_build_/default/katze/midori-uri.c	/^static gchar* string_replace (const gchar* self, const gchar* old, const gchar* replacement) {$/;"	f	file:
string_to_version	waf-modules/wafadmin/3rdparty/boost.py	/^def string_to_version(s):$/;"	f
stringize	waf-modules/wafadmin/Tools/preproc.py	/^def stringize(lst):$/;"	f
strip_referer	midori/midori-websettings.c	/^    gboolean strip_referer;$/;"	m	struct:_MidoriWebSettings	file:
sub_config	waf-modules/wafadmin/Configure.py	/^	def sub_config(self,k):$/;"	m	class:ConfigurationContext
sub_options	waf-modules/wafadmin/Options.py	/^	def sub_options(self,*k,**kw):$/;"	m	class:Handler
subst	waf-modules/wafadmin/py3kfixes.py	/^def subst(filename):$/;"	f
subst_func	waf-modules/wafadmin/Tools/misc.py	/^def subst_func(tsk):$/;"	f
subst_taskgen	waf-modules/wafadmin/Tools/misc.py	/^class subst_taskgen(TaskGen.task_gen):$/;"	c
subst_vars	waf-modules/wafadmin/Utils.py	/^def subst_vars(expr,params):$/;"	f
suffix	waf-modules/wafadmin/Node.py	/^	def suffix(self):$/;"	m	class:Node
summary	waf-modules/wafadmin/Tools/unittestw.py	/^def summary(bld):$/;"	f
sxx_common_flags	waf-modules/wafadmin/Tools/suncxx.py	/^def sxx_common_flags(conf):$/;"	f
symlink_as	waf-modules/wafadmin/Build.py	/^	def symlink_as(self,path,src,env=None,cwd=None):$/;"	m	class:BuildContext
symlink_as	waf-modules/wafadmin/Build.py	/^	symlink_as=group_method(symlink_as)$/;"	v	class:BuildContext
syms	waf-modules/wafadmin/Tools/preproc.py	/^	syms=ops[x]$/;"	v
synthetic_crossing_event_window	katze/katze-scrolled.c	/^    GdkWindow* synthetic_crossing_event_window;$/;"	m	struct:_KatzeScrolledPrivate	file:
synthetized_crossing_event	katze/katze-scrolled.c	/^static gboolean synthetized_crossing_event;$/;"	v	file:
t	waf	/^t = join(w, 'Tools')$/;"	v
t	waf-unpacked	/^t = join(w, 'Tools')$/;"	v
tab_close	midori/midori-view.c	/^    GtkWidget* tab_close;$/;"	m	struct:_MidoriView	file:
tab_icon	midori/midori-view.c	/^    GtkWidget* tab_icon;$/;"	m	struct:_MidoriView	file:
tab_label	midori/midori-view.c	/^    GtkWidget* tab_label;$/;"	m	struct:_MidoriView	file:
tab_panel_activate_cb	extensions/tab-panel.c	/^tab_panel_activate_cb (MidoriExtension* extension,$/;"	f	file:
tab_panel_app_add_browser_cb	extensions/tab-panel.c	/^tab_panel_app_add_browser_cb (MidoriApp*       app,$/;"	f	file:
tab_panel_browser_add_tab_cb	extensions/tab-panel.c	/^tab_panel_browser_add_tab_cb (MidoriBrowser*   browser,$/;"	f	file:
tab_panel_browser_foreach_cb	extensions/tab-panel.c	/^tab_panel_browser_foreach_cb (GtkWidget*       view,$/;"	f	file:
tab_panel_browser_move_tab_cb	extensions/tab-panel.c	/^tab_panel_browser_move_tab_cb (MidoriBrowser* browser,$/;"	f	file:
tab_panel_browser_notify_tab_cb	extensions/tab-panel.c	/^tab_panel_browser_notify_tab_cb (MidoriBrowser* browser,$/;"	f	file:
tab_panel_browser_remove_tab_cb	extensions/tab-panel.c	/^tab_panel_browser_remove_tab_cb (MidoriBrowser*   browser,$/;"	f	file:
tab_panel_deactivate_cb	extensions/tab-panel.c	/^tab_panel_deactivate_cb (MidoriExtension* extension,$/;"	f	file:
tab_panel_get_iter_for_view	extensions/tab-panel.c	/^tab_panel_get_iter_for_view (GtkTreeModel* model,$/;"	f	file:
tab_panel_get_model_for_browser	extensions/tab-panel.c	/^tab_panel_get_model_for_browser (MidoriBrowser* browser)$/;"	f	file:
tab_panel_get_toolbar_for_browser	extensions/tab-panel.c	/^tab_panel_get_toolbar_for_browser (MidoriBrowser* browser)$/;"	f	file:
tab_panel_get_toolitem_for_view	extensions/tab-panel.c	/^tab_panel_get_toolitem_for_view (GtkWidget* view)$/;"	f	file:
tab_panel_popup	extensions/tab-panel.c	/^tab_panel_popup (GtkWidget*      widget,$/;"	f	file:
tab_panel_remove_view	extensions/tab-panel.c	/^tab_panel_remove_view (MidoriBrowser* browser,$/;"	f	file:
tab_panel_settings_notify_cb	extensions/tab-panel.c	/^tab_panel_settings_notify_cb (MidoriWebSettings* settings,$/;"	f	file:
tab_panel_toggle_toolbook	extensions/tab-panel.c	/^tab_panel_toggle_toolbook (GtkWidget* toolbar)$/;"	f	file:
tab_panel_toolitem_button_press_event_cb	extensions/tab-panel.c	/^tab_panel_toolitem_button_press_event_cb (GtkToolItem*    toolitem,$/;"	f	file:
tab_panel_toolitem_clicked_cb	extensions/tab-panel.c	/^tab_panel_toolitem_clicked_cb (GtkToolItem* toolitem,$/;"	f	file:
tab_panel_treeview_query_tooltip_cb	extensions/tab-panel.c	/^tab_panel_treeview_query_tooltip_cb (GtkWidget*  treeview,$/;"	f	file:
tab_panel_view_notify_icon_cb	extensions/tab-panel.c	/^tab_panel_view_notify_icon_cb (GtkWidget*       view,$/;"	f	file:
tab_panel_view_notify_minimized_cb	extensions/tab-panel.c	/^tab_panel_view_notify_minimized_cb (GtkWidget*       view,$/;"	f	file:
tab_panel_view_notify_title_cb	extensions/tab-panel.c	/^tab_panel_view_notify_title_cb (GtkWidget*       view,$/;"	f	file:
tab_title	midori/midori-view.c	/^    GtkWidget* tab_title;$/;"	m	struct:_MidoriView	file:
tabs_minimized_activate_cb	extensions/tabs-minimized.c	/^tabs_minimized_activate_cb (MidoriExtension* extension,$/;"	f	file:
tabs_minimized_add_tab_cb	extensions/tabs-minimized.c	/^tabs_minimized_add_tab_cb (MidoriBrowser*   browser,$/;"	f	file:
tabs_minimized_app_add_browser_cb	extensions/tabs-minimized.c	/^tabs_minimized_app_add_browser_cb (MidoriApp*       app,$/;"	f	file:
tabs_minimized_deactivate_cb	extensions/tabs-minimized.c	/^tabs_minimized_deactivate_cb (MidoriExtension* extension,$/;"	f	file:
tags_score	waf-modules/wafadmin/3rdparty/boost.py	/^def tags_score(tags,kw):$/;"	f
targetdir	debian/waf-unpack	/^targetdir = sys.argv[1]$/;"	v
task	waf-modules/wafadmin/Tools/misc.py	/^	task=command_output(self.env,cmd,cmd_node,self.argv,stdin,stdout,cwd,self.os_env,stderr)$/;"	v
task_gen	waf-modules/wafadmin/TaskGen.py	/^class task_gen(object):$/;"	c
task_type_from_func	waf-modules/wafadmin/Task.py	/^def task_type_from_func(name,func,vars=[],color='GREEN',ext_in=[],ext_out=[],before=[],after=[]):$/;"	f
taskgen	waf-modules/wafadmin/TaskGen.py	/^def taskgen(func):$/;"	f
tasks_by_max_jobs	waf-modules/wafadmin/Task.py	/^	def tasks_by_max_jobs(self):$/;"	m	class:TaskGroup
tasks_in_parallel	waf-modules/wafadmin/Task.py	/^	def tasks_in_parallel(self):$/;"	m	class:TaskGroup
tasks_with_inner_constraints	waf-modules/wafadmin/Task.py	/^	def tasks_with_inner_constraints(self):$/;"	m	class:TaskGroup
tb_editor_activate_cb	extensions/toolbar-editor.c	/^static void tb_editor_activate_cb(MidoriExtension *extension, MidoriApp *app)$/;"	f	file:
tb_editor_app_add_browser_cb	extensions/toolbar-editor.c	/^static void tb_editor_app_add_browser_cb(MidoriApp *app, MidoriBrowser *browser, MidoriExtension *ext)$/;"	f	file:
tb_editor_array_to_list	extensions/toolbar-editor.c	/^static GSList *tb_editor_array_to_list(const gchar **items)$/;"	f	file:
tb_editor_available_items_changed_cb	extensions/toolbar-editor.c	/^static void tb_editor_available_items_changed_cb(GtkTreeModel *model, GtkTreePath *arg1,$/;"	f	file:
tb_editor_available_items_deleted_cb	extensions/toolbar-editor.c	/^static void tb_editor_available_items_deleted_cb(GtkTreeModel *model, GtkTreePath *arg1,$/;"	f	file:
tb_editor_browser_populate_tool_menu_cb	extensions/toolbar-editor.c	/^static void tb_editor_browser_populate_tool_menu_cb(MidoriBrowser *browser, GtkWidget *menu, MidoriExtension *ext)$/;"	f	file:
tb_editor_browser_populate_toolbar_menu_cb	extensions/toolbar-editor.c	/^static void tb_editor_browser_populate_toolbar_menu_cb(MidoriBrowser *browser, GtkWidget *menu,$/;"	f	file:
tb_editor_btn_add_clicked_cb	extensions/toolbar-editor.c	/^static void tb_editor_btn_add_clicked_cb(GtkWidget *button, TBEditorWidget *tbw)$/;"	f	file:
tb_editor_btn_remove_clicked_cb	extensions/toolbar-editor.c	/^static void tb_editor_btn_remove_clicked_cb(GtkWidget *button, TBEditorWidget *tbw)$/;"	f	file:
tb_editor_create_dialog	extensions/toolbar-editor.c	/^static TBEditorWidget *tb_editor_create_dialog(MidoriBrowser *parent)$/;"	f	file:
tb_editor_deactivate_cb	extensions/toolbar-editor.c	/^static void tb_editor_deactivate_cb(MidoriExtension *extension, MidoriBrowser *browser)$/;"	f	file:
tb_editor_dnd_targets	extensions/toolbar-editor.c	/^static const GtkTargetEntry tb_editor_dnd_targets[] =$/;"	v	file:
tb_editor_dnd_targets_len	extensions/toolbar-editor.c	/^static const gint tb_editor_dnd_targets_len = G_N_ELEMENTS(tb_editor_dnd_targets);$/;"	v	file:
tb_editor_drag_data_get_cb	extensions/toolbar-editor.c	/^static void tb_editor_drag_data_get_cb(GtkWidget *widget, GdkDragContext *context,$/;"	f	file:
tb_editor_drag_data_rcvd_cb	extensions/toolbar-editor.c	/^static void tb_editor_drag_data_rcvd_cb(GtkWidget *widget, GdkDragContext *context,$/;"	f	file:
tb_editor_drag_motion_cb	extensions/toolbar-editor.c	/^static gboolean tb_editor_drag_motion_cb(GtkWidget *widget, GdkDragContext *drag_context,$/;"	f	file:
tb_editor_foreach_used	extensions/toolbar-editor.c	/^static gboolean tb_editor_foreach_used(GtkTreeModel *model, GtkTreePath *path,$/;"	f	file:
tb_editor_free_path	extensions/toolbar-editor.c	/^static void tb_editor_free_path(TBEditorWidget *tbw)$/;"	f	file:
tb_editor_get_available_actions	extensions/toolbar-editor.c	/^static GSList *tb_editor_get_available_actions(MidoriBrowser *browser)$/;"	f	file:
tb_editor_menu_configure_toolbar_activate_cb	extensions/toolbar-editor.c	/^static void tb_editor_menu_configure_toolbar_activate_cb(GtkWidget *menuitem, MidoriBrowser *browser)$/;"	f	file:
tb_editor_parse_active_items	extensions/toolbar-editor.c	/^static GSList *tb_editor_parse_active_items(MidoriBrowser *browser)$/;"	f	file:
tb_editor_scroll_to_iter	extensions/toolbar-editor.c	/^static void tb_editor_scroll_to_iter(GtkTreeView *treeview, GtkTreeIter *iter)$/;"	f	file:
tb_editor_set_item_values	extensions/toolbar-editor.c	/^static void tb_editor_set_item_values(TBEditorWidget *tbw, const gchar *action_name,$/;"	f	file:
tb_editor_update_toolbar	extensions/toolbar-editor.c	/^static void tb_editor_update_toolbar(TBEditorWidget *tbw)$/;"	f	file:
term	waf-modules/wafadmin/Logs.py	/^term=os.environ.get('TERM','dumb')$/;"	v
test	waf	/^def test(dir):$/;"	f
test	waf-unpacked	/^def test(dir):$/;"	f
test_adblock_parse	extensions/adblock.c	/^test_adblock_parse (void)$/;"	f	file:
test_adblock_pattern	extensions/adblock.c	/^test_adblock_pattern (void)$/;"	f	file:
test_addons_simple_regexp	extensions/addons.c	/^test_addons_simple_regexp (void)$/;"	f	file:
test_input	tests/magic-uri.c	/^test_input (const gchar* input,$/;"	f	file:
test_status	waf-modules/wafadmin/Tools/unittestw.py	/^def test_status(self):$/;"	f
testlock	waf-modules/wafadmin/Tools/unittestw.py	/^testlock=threading.Lock()$/;"	v
tests	_build_/c4che/default.cache.py	/^tests = False$/;"	v
tests	waf-modules/wafadmin/Configure.py	/^	tests={}$/;"	v	class:ConfigurationContext
tex_build	waf-modules/wafadmin/Tools/tex.py	/^def tex_build(task,command='LATEX'):$/;"	f
tex_taskgen	waf-modules/wafadmin/Tools/tex.py	/^class tex_taskgen(TaskGen.task_gen):$/;"	c
text	katze/katze-item.h	/^    gchar* text;$/;"	m	struct:_KatzeItem
text	midori/midori-locationaction.c	/^    gchar* text;$/;"	m	struct:_MidoriLocationAction	file:
text	midori/midori-searchaction.c	/^    gchar* text;$/;"	m	struct:_MidoriSearchAction	file:
text_editor	midori/midori-websettings.c	/^    gchar* text_editor;$/;"	m	struct:_MidoriWebSettings	file:
there_are_missing_iconswarnings	data/faq.html	/^<h4><a name="there_are_missing_iconswarnings" id="there_are_missing_iconswarnings">There are missing icons\/ warnings<\/a><\/h4>$/;"	a
there_are_missing_iconswarnings	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="there_are_missing_iconswarnings" id="there_are_missing_iconswarnings">There are missing icons\/ warnings<\/a><\/h4>$/;"	a
there_are_missing_iconswarnings	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="there_are_missing_iconswarnings" id="there_are_missing_iconswarnings">There are missing icons\/ warnings<\/a><\/h4>$/;"	a
this.textbox	data/autosuggestcontrol.js	/^    this.textbox.onkeydown = function (oEvent) {$/;"	m
this.textbox	debian/midori/usr/share/midori/res/autosuggestcontrol.js	/^    this.textbox.onkeydown = function (oEvent) {$/;"	m
this.textbox	debian/tmp/usr/share/midori/res/autosuggestcontrol.js	/^    this.textbox.onkeydown = function (oEvent) {$/;"	m
thisfile	debian/waf-unpack	/^thisfile = open(path.join(basedir, "debian\/waf-unpack"), "a")$/;"	v
throbber	midori/midori-browser.c	/^    GtkWidget* throbber;$/;"	m	struct:_MidoriBrowser	file:
thumb_queue	midori/midori-view.c	/^static GList* thumb_queue = NULL;$/;"	v	file:
thumb_view	midori/midori-view.c	/^static GtkWidget* thumb_view = NULL;$/;"	v	file:
thumb_view_load_status_cb	midori/midori-view.c	/^thumb_view_load_status_cb (WebKitWebView* thumb_view_,$/;"	f	file:
timeout	katze/katze-http-cookies.c	/^    guint timeout;$/;"	m	struct:_KatzeHttpCookies	file:
timeout	midori/main.c	/^     guint timeout;$/;"	m	struct:__anon40	file:
timeout_handler	midori/socket.c	/^static void G_GNUC_NORETURN timeout_handler(gint sig)$/;"	f	file:
timeout_scroll	katze/katze-scrolled.c	/^timeout_scroll (gpointer data)$/;"	f	file:
timer_id	extensions/cookie-manager/cookie-manager.c	/^	guint timer_id;$/;"	m	struct:_CookieManagerPrivate	file:
timer_id	katze/katze-throbber.c	/^    gint timer_id;$/;"	m	struct:_KatzeThrobber	file:
title	midori/midori-view.c	/^    gchar* title;$/;"	m	struct:_MidoriView	file:
tmp_sig_ids	_build_/default/extensions/history-list.c	/^	gulong* tmp_sig_ids;$/;"	m	struct:_HistoryListManager	file:
tmp_sig_ids_length1	_build_/default/extensions/history-list.c	/^	gint tmp_sig_ids_length1;$/;"	m	struct:_HistoryListManager	file:
to_hashtable	waf-modules/wafadmin/Utils.py	/^def to_hashtable(s):$/;"	f
to_header	waf-modules/wafadmin/Tools/config_c.py	/^	def to_header(dct):$/;"	f	function:validate_c
to_int	waf-modules/wafadmin/ansiterm.py	/^	to_int=lambda number,default:number and int(number)or default$/;"	v
to_list	waf-modules/wafadmin/TaskGen.py	/^	def to_list(self,value):$/;"	m	class:task_gen
to_list	waf-modules/wafadmin/Utils.py	/^def to_list(sth):$/;"	f
to_pat	waf-modules/wafadmin/Node.py	/^		def to_pat(s):$/;"	f	function:Node.ant_glob
toggle_entries	midori/midori-browser.c	/^static const GtkToggleActionEntry toggle_entries[] =$/;"	v	file:
toggle_entries_n	midori/midori-browser.c	/^static const guint toggle_entries_n = G_N_ELEMENTS (toggle_entries);$/;"	v	file:
tok_types	waf-modules/wafadmin/Tools/preproc.py	/^tok_types=[NUM,STR,IDENT,OP]$/;"	v
token	katze/katze-item.h	/^    gchar* token;$/;"	m	struct:_KatzeItem
tokenize	waf-modules/wafadmin/Tools/preproc.py	/^def tokenize(s):$/;"	f
tool_options	waf-modules/wafadmin/Options.py	/^	def tool_options(self,*k,**kw):$/;"	m	class:Handler
toolbar	extensions/addons.c	/^    GtkWidget* toolbar;$/;"	m	struct:_Addons	file:
toolbar	extensions/cookie-manager/cookie-manager-page.c	/^	GtkWidget *toolbar;$/;"	m	struct:_CookieManagerPagePrivate	file:
toolbar	extensions/feed-panel/feed-panel.c	/^    GtkWidget* toolbar;$/;"	m	struct:_FeedPanel	file:
toolbar	midori/midori-panel.c	/^    GtkWidget* toolbar;$/;"	m	struct:_MidoriPanel	file:
toolbar	midori/midori-panel.c	/^    GtkWidget* toolbar;$/;"	m	struct:__anon67	file:
toolbar	panels/midori-bookmarks.c	/^    GtkWidget* toolbar;$/;"	m	struct:_MidoriBookmarks	file:
toolbar	panels/midori-extensions.c	/^    GtkWidget* toolbar;$/;"	m	struct:_MidoriExtensions	file:
toolbar	panels/midori-history.c	/^    GtkWidget* toolbar;$/;"	m	struct:_MidoriHistory	file:
toolbar	panels/midori-transfers.c	/^    GtkWidget* toolbar;$/;"	m	struct:_MidoriTransfers	file:
toolbar_items	midori/midori-websettings.c	/^    gchar* toolbar_items;$/;"	m	struct:_MidoriWebSettings	file:
toolbar_label	midori/midori-panel.c	/^    GtkWidget* toolbar_label;$/;"	m	struct:_MidoriPanel	file:
toolbar_style	midori/midori-websettings.c	/^    MidoriToolbarStyle toolbar_style : 3;$/;"	m	struct:_MidoriWebSettings	file:
toolbook	midori/midori-panel.c	/^    GtkWidget* toolbook;$/;"	m	struct:_MidoriPanel	file:
tooldir	waf-modules/wafadmin/Options.py	/^tooldir=''$/;"	v
toolitem	midori/midori-panedaction.c	/^    GtkWidget* toolitem;$/;"	m	struct:_MidoriPanedAction	file:
toolitem	toolbars/midori-transferbar.c	/^    GtkWidget* toolitem;$/;"	m	struct:__anon81	file:
tools	_build_/c4che/build.config.py	/^tools = [{'tool': 'ar', 'tooldir': None, 'funs': None}, {'tool': 'cc', 'tooldir': None, 'funs': None}, {'tool': 'gcc', 'tooldir': None, 'funs': None}, {'tool': 'compiler_cc', 'tooldir': None, 'funs': None}, {'tool': 'gnu_dirs', 'tooldir': None, 'funs': None}, {'tool': 'vala', 'tooldir': None, 'funs': None}, {'tool': 'glib2', 'tooldir': None, 'funs': None}, {'tool': 'intltool', 'tooldir': None, 'funs': None}]$/;"	v
tooltip_text	midori/gtkiconentry.c	/^  gchar *tooltip_text;$/;"	m	struct:__anon54	file:
total	waf-modules/wafadmin/Task.py	/^	def total(self):$/;"	m	class:TaskManager
traits	waf-modules/wafadmin/TaskGen.py	/^	traits=Utils.DefaultDict(set)$/;"	v	class:task_gen
transfer_cb	katze/katze-net.c	/^    KatzeNetTransferCb transfer_cb;$/;"	m	struct:__anon32	file:
transferbar	midori/midori-browser.c	/^    GtkWidget* transferbar;$/;"	m	struct:_MidoriBrowser	file:
transferbar	toolbars/midori-transferbar.c	/^    MidoriTransferbar* transferbar;$/;"	m	struct:__anon81	file:
translation_update	waf-modules/wafadmin/Tools/qt4.py	/^def translation_update(task):$/;"	f
trash	midori/midori-app.c	/^    KatzeArray* trash;$/;"	m	struct:_MidoriApp	file:
trash	midori/midori-browser.c	/^    KatzeArray* trash;$/;"	m	struct:_MidoriBrowser	file:
tree_available	extensions/toolbar-editor.c	/^	GtkTreeView *tree_available;$/;"	m	struct:__anon16	file:
tree_used	extensions/toolbar-editor.c	/^	GtkTreeView *tree_used;$/;"	m	struct:__anon16	file:
treeview	_build_/default/extensions/history-list.c	/^	GtkTreeView* treeview;$/;"	m	struct:_HistoryListHistoryWindow	file:
treeview	extensions/addons.c	/^    GtkWidget* treeview;$/;"	m	struct:_Addons	file:
treeview	extensions/cookie-manager/cookie-manager-page.c	/^	GtkWidget *treeview;$/;"	m	struct:_CookieManagerPagePrivate	file:
treeview	extensions/feed-panel/feed-panel.c	/^    GtkWidget* treeview;$/;"	m	struct:_FeedPanel	file:
treeview	midori/midori-locationaction.c	/^    GtkWidget* treeview;$/;"	m	struct:_MidoriLocationAction	file:
treeview	midori/midori-searchaction.c	/^    GtkWidget* treeview;$/;"	m	struct:_MidoriSearchAction	file:
treeview	panels/midori-bookmarks.c	/^    GtkWidget* treeview;$/;"	m	struct:_MidoriBookmarks	file:
treeview	panels/midori-extensions.c	/^    GtkWidget* treeview;$/;"	m	struct:_MidoriExtensions	file:
treeview	panels/midori-history.c	/^    GtkWidget* treeview;$/;"	m	struct:_MidoriHistory	file:
treeview	panels/midori-transfers.c	/^    GtkWidget* treeview;$/;"	m	struct:_MidoriTransfers	file:
trig_def	waf-modules/wafadmin/Tools/preproc.py	/^trig_def=[('??'+a,b)for a,b in zip("=-\/!'()<>",r'#~\\|^[]{}')]$/;"	v
trimquotes	waf-modules/wafadmin/Utils.py	/^def trimquotes(s):$/;"	f
try_create_table	katze/katze-http-cookies-sqlite.c	/^try_create_table (sqlite3 *db)$/;"	f	file:
tryfind	waf-modules/wafadmin/Tools/d.py	/^	def tryfind(self,filename):$/;"	m	class:d_parser
tryfind	waf-modules/wafadmin/Tools/preproc.py	/^	def tryfind(self,filename):$/;"	m	class:c_parser
tweaking_midori_on_the_gtk_level	data/faq.html	/^<h4><a name="tweaking_midori_on_the_gtk_level" id="tweaking_midori_on_the_gtk_level">Tweaking Midori on the Gtk level<\/a><\/h4>$/;"	a
tweaking_midori_on_the_gtk_level	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="tweaking_midori_on_the_gtk_level" id="tweaking_midori_on_the_gtk_level">Tweaking Midori on the Gtk level<\/a><\/h4>$/;"	a
tweaking_midori_on_the_gtk_level	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="tweaking_midori_on_the_gtk_level" id="tweaking_midori_on_the_gtk_level">Tweaking Midori on the Gtk level<\/a><\/h4>$/;"	a
type	katze/katze-array.c	/^    GType type;$/;"	m	struct:_KatzeArray	file:
type	midori/midori-extension.c	/^    GType type;$/;"	m	struct:__anon69	file:
type	midori/midori-extension.c	/^    GType type;$/;"	m	struct:__anon70	file:
type	midori/midori-extension.c	/^    GType type;$/;"	m	struct:__anon71	file:
type	midori/midori-extension.c	/^    GType type;$/;"	m	struct:__anon72	file:
type	tests/properties.c	/^    const gchar* type;$/;"	m	struct:__anon80	file:
type_to_string	waf-modules/wafadmin/Node.py	/^type_to_string={UNDEFINED:"unk",DIR:"dir",FILE:"src",BUILD:"bld"}$/;"	v
typos	waf-modules/wafadmin/TaskGen.py	/^typos={'sources':'source','targets':'target','include':'includes','define':'defines','importpath':'importpaths','install_var':'install_path','install_subdir':'install_path','inst_var':'install_path','inst_dir':'install_path','feature':'features',}$/;"	v
ui_markup	midori/midori-browser.c	/^static const gchar* ui_markup =$/;"	v	file:
undefine	waf-modules/wafadmin/Tools/config_c.py	/^def undefine(self,define):$/;"	f
undefined	waf-modules/wafadmin/Tools/preproc.py	/^undefined='u'$/;"	v
under_which_license_is_midori_distributed	data/faq.html	/^<h4><a name="under_which_license_is_midori_distributed" id="under_which_license_is_midori_distributed">Under which license is Midori distributed?<\/a><\/h4>$/;"	a
under_which_license_is_midori_distributed	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="under_which_license_is_midori_distributed" id="under_which_license_is_midori_distributed">Under which license is Midori distributed?<\/a><\/h4>$/;"	a
under_which_license_is_midori_distributed	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="under_which_license_is_midori_distributed" id="under_which_license_is_midori_distributed">Under which license is Midori distributed?<\/a><\/h4>$/;"	a
uninstall	waf-modules/wafadmin/Scripting.py	/^def uninstall(bld):$/;"	f
unique_id	waf-modules/wafadmin/Task.py	/^	def unique_id(self):$/;"	m	class:Task
unit_test	waf-modules/wafadmin/Tools/unittestw.py	/^class unit_test(object):$/;"	c
unp	debian/waf-unpack	/^unp = open(path.join(basedir, "debian\/wafunp.py"), "w")$/;"	v
unpack_wafdir	waf	/^def unpack_wafdir(dir):$/;"	f
unpack_wafdir	waf-unpacked	/^def unpack_wafdir(dir):$/;"	f
unversioned_sys_platform	waf-modules/wafadmin/Utils.py	/^def unversioned_sys_platform():$/;"	f
unversioned_sys_platform_to_binary_format	waf-modules/wafadmin/Utils.py	/^def unversioned_sys_platform_to_binary_format(unversioned_sys_platform):$/;"	f
update	extensions/feed-panel/feed-parse.h	/^    gboolean (*update)    (struct _FeedParser* fparser);$/;"	m	struct:_FeedParser
update	katze/katze-array.c	/^    (*update)                 (KatzeArray* array);$/;"	m	struct:_KatzeArrayClass	file:
update	waf-modules/wafadmin/Environment.py	/^	def update(self,d):$/;"	m	class:Environment
update_build_dir	waf-modules/wafadmin/Node.py	/^	def update_build_dir(self,env=None):$/;"	m	class:Node
update_feed	extensions/feed-panel/main.c	/^update_feed (FeedPrivate* priv,$/;"	f	file:
update_feeds	extensions/feed-panel/main.c	/^update_feeds (FeedPrivate* priv)$/;"	f	file:
update_outputs	waf-modules/wafadmin/Task.py	/^def update_outputs(cls):$/;"	f
upstream_pkg	debian/rules	/^upstream_pkg = "midori"$/;"	m
upstream_version	debian/rules	/^upstream_version ?= $(shell dpkg-parsechangelog | sed -rne 's\/^Version: ([0-9.]+)(\\+dfsg)?.*$$\/\\1\/p')$/;"	m
uri	katze/katze-item.h	/^    gchar* uri;$/;"	m	struct:_KatzeItem
uri	katze/katze-net.h	/^    gchar* uri;$/;"	m	struct:__anon34
uri	midori/main.c	/^     gchar* uri;$/;"	m	struct:__anon40	file:
uri	midori/midori-locationaction.c	/^    gchar* uri;$/;"	m	struct:_MidoriLocationAction	file:
uri	midori/midori-view.c	/^    gchar* uri;$/;"	m	struct:_MidoriView	file:
urlcache	extensions/adblock.c	/^static GHashTable* urlcache;$/;"	v	file:
urlopen	waf-modules/wafadmin/Configure.py	/^	urlopen=request.urlopen$/;"	v
useCmdLine	waf-modules/wafadmin/Tools/libtool.py	/^def useCmdLine():$/;"	f
use_ctrl_shift_tab_to_switch_between_pages	data/faq.html	/^<h3 class="sectionedit12"><a name="use_ctrl_shift_tab_to_switch_between_pages" id="use_ctrl_shift_tab_to_switch_between_pages">Use Ctrl(+Shift)+Tab to switch between pages<\/a><\/h3>$/;"	a
use_ctrl_shift_tab_to_switch_between_pages	debian/midori/usr/share/doc/midori/faq.html	/^<h3 class="sectionedit12"><a name="use_ctrl_shift_tab_to_switch_between_pages" id="use_ctrl_shift_tab_to_switch_between_pages">Use Ctrl(+Shift)+Tab to switch between pages<\/a><\/h3>$/;"	a
use_ctrl_shift_tab_to_switch_between_pages	debian/tmp/usr/share/doc/midori/faq.html	/^<h3 class="sectionedit12"><a name="use_ctrl_shift_tab_to_switch_between_pages" id="use_ctrl_shift_tab_to_switch_between_pages">Use Ctrl(+Shift)+Tab to switch between pages<\/a><\/h3>$/;"	a
use_the_magic	waf-modules/wafadmin/Build.py	/^	def use_the_magic(self):$/;"	m	class:BuildContext
use_trigraphs	waf-modules/wafadmin/Tools/preproc.py	/^use_trigraphs=0$/;"	v
user_data	katze/katze-net.c	/^    gpointer user_data;$/;"	m	struct:__anon32	file:
user_data	katze/katze-scrolled.c	/^    gpointer user_data;$/;"	m	struct:__anon24	file:
user_scripts	data/faq.html	/^<h2 class="sectionedit17"><a name="user_scripts" id="user_scripts">User scripts<\/a><\/h2>$/;"	a
user_scripts	debian/midori/usr/share/doc/midori/faq.html	/^<h2 class="sectionedit17"><a name="user_scripts" id="user_scripts">User scripts<\/a><\/h2>$/;"	a
user_scripts	debian/tmp/usr/share/doc/midori/faq.html	/^<h2 class="sectionedit17"><a name="user_scripts" id="user_scripts">User scripts<\/a><\/h2>$/;"	a
user_styles	data/faq.html	/^<h2 class="sectionedit18"><a name="user_styles" id="user_styles">User styles<\/a><\/h2>$/;"	a
user_styles	debian/midori/usr/share/doc/midori/faq.html	/^<h2 class="sectionedit18"><a name="user_styles" id="user_styles">User styles<\/a><\/h2>$/;"	a
user_styles	debian/tmp/usr/share/doc/midori/faq.html	/^<h2 class="sectionedit18"><a name="user_styles" id="user_styles">User styles<\/a><\/h2>$/;"	a
user_stylesheet_uri	midori/midori-websettings.c	/^    gchar* user_stylesheet_uri;$/;"	m	struct:_MidoriWebSettings	file:
user_stylesheet_uri_cached	midori/midori-websettings.c	/^    gchar* user_stylesheet_uri_cached;$/;"	m	struct:_MidoriWebSettings	file:
user_stylesheets	midori/midori-websettings.c	/^    GHashTable* user_stylesheets;$/;"	m	struct:_MidoriWebSettings	file:
username	katze/katze-http-auth.c	/^    gchar* username;$/;"	m	struct:__anon29	file:
username	katze/katze-http-auth.c	/^    gchar* username;$/;"	m	struct:__anon30	file:
using_find	data/faq.html	/^<h3 class="sectionedit14"><a name="using_find" id="using_find">Using Find<\/a><\/h3>$/;"	a
using_find	debian/midori/usr/share/doc/midori/faq.html	/^<h3 class="sectionedit14"><a name="using_find" id="using_find">Using Find<\/a><\/h3>$/;"	a
using_find	debian/tmp/usr/share/doc/midori/faq.html	/^<h3 class="sectionedit14"><a name="using_find" id="using_find">Using Find<\/a><\/h3>$/;"	a
using_the_keyboard	data/faq.html	/^<h2 class="sectionedit9"><a name="using_the_keyboard" id="using_the_keyboard">Using the Keyboard<\/a><\/h2>$/;"	a
using_the_keyboard	debian/midori/usr/share/doc/midori/faq.html	/^<h2 class="sectionedit9"><a name="using_the_keyboard" id="using_the_keyboard">Using the Keyboard<\/a><\/h2>$/;"	a
using_the_keyboard	debian/tmp/usr/share/doc/midori/faq.html	/^<h2 class="sectionedit9"><a name="using_the_keyboard" id="using_the_keyboard">Using the Keyboard<\/a><\/h2>$/;"	a
v	waf-modules/wafadmin/Task.py	/^		def v(x):$/;"	f	function:Task.debug_why
vala_file	waf-modules/wafadmin/Tools/vala.py	/^def vala_file(self,node):$/;"	f
valac_task	waf-modules/wafadmin/Tools/vala.py	/^class valac_task(Task.Task):$/;"	c
validate_boost	waf-modules/wafadmin/3rdparty/boost.py	/^def validate_boost(self,kw):$/;"	f
validate_c	waf-modules/wafadmin/Tools/config_c.py	/^def validate_c(self,kw):$/;"	f
validate_cfg	waf-modules/wafadmin/Tools/config_c.py	/^def validate_cfg(self,kw):$/;"	f
value	midori/midori-extension.c	/^    gboolean value;$/;"	m	struct:__anon69	file:
value	midori/midori-extension.c	/^    gchar* value;$/;"	m	struct:__anon71	file:
value	midori/midori-extension.c	/^    gchar** value;$/;"	m	struct:__anon72	file:
value	midori/midori-extension.c	/^    gint value;$/;"	m	struct:__anon70	file:
variant	waf-modules/wafadmin/Environment.py	/^	def variant(self):$/;"	m	class:Environment
variant	waf-modules/wafadmin/Node.py	/^	def variant(self,env):$/;"	m	class:Node
vars	waf-modules/wafadmin/Task.py	/^	vars=[]$/;"	v	class:Task
vars	waf-modules/wafadmin/Tools/vala.py	/^	vars=("VALAC","VALAC_VERSION","VALAFLAGS")$/;"	v	class:valac_task
vars_target_cprogram	waf-modules/wafadmin/Tools/ccroot.py	/^def vars_target_cprogram(self):$/;"	f
vars_target_cshlib	waf-modules/wafadmin/Tools/ccroot.py	/^def vars_target_cshlib(self):$/;"	f
vbox	_build_/default/extensions/history-list.c	/^	GtkVBox* vbox;$/;"	m	struct:_HistoryListTabWindow	file:
verbose	waf-modules/wafadmin/Logs.py	/^verbose=0$/;"	v
version	_build_/c4che/build.config.py	/^version = 0x105019$/;"	v
version	midori/midori-extension.c	/^    gchar* version;$/;"	m	struct:_MidoriExtensionPrivate	file:
version_string	waf-modules/wafadmin/3rdparty/boost.py	/^def version_string(version):$/;"	f
vertical_deceleration	katze/katze-scrolled.c	/^    gdouble vertical_deceleration;$/;"	m	struct:_KatzeScrolledPrivate	file:
vertical_speed	katze/katze-scrolled.c	/^    gdouble vertical_speed;$/;"	m	struct:_KatzeScrolledPrivate	file:
view	midori/midori-view.c	/^    MidoriView* view;$/;"	m	struct:__anon45	file:
viewport	katze/katze-scrolled.c	/^    GtkWidget* viewport;$/;"	m	struct:_KatzeScrolledPrivate	file:
violated	tools/check-style	/^                    violated = True$/;"	v
violated	tools/check-style	/^            violated = False$/;"	v
violations	tools/check-style	/^violations = [$/;"	v
w	waf	/^w = join(wafdir, 'wafadmin')$/;"	v
w	waf-unpacked	/^w = join(wafdir, 'wafadmin')$/;"	v
wShowWindow	waf-modules/wafadmin/pproc.py	/^			wShowWindow=0$/;"	v	class:.__str__.STARTUPINFO
waf	debian/waf-unpack	/^waf = open(path.join(targetdir, "waf"), "r")$/;"	v
waf_version	waf-modules/wafadmin/Utils.py	/^def waf_version(mini=0x010000,maxi=0x100000):$/;"	f
wafdir	waf	/^wafdir = find_lib()$/;"	v
wafdir	waf-unpacked	/^wafdir = find_lib()$/;"	v
wait	waf-modules/wafadmin/pproc.py	/^		def wait(self):$/;"	f	function:Popen.communicate
walk	_build_/default/extensions/history-list.c	/^	void (*walk) (HistoryListHistoryWindow* self, gint step);$/;"	m	struct:_HistoryListHistoryWindowClass	file:
warn	waf-modules/wafadmin/Logs.py	/^warn=logging.warn$/;"	v
web_applications	data/faq.html	/^<h2 class="sectionedit6"><a name="web_applications" id="web_applications">Web Applications<\/a><\/h2>$/;"	a
web_applications	debian/midori/usr/share/doc/midori/faq.html	/^<h2 class="sectionedit6"><a name="web_applications" id="web_applications">Web Applications<\/a><\/h2>$/;"	a
web_applications	debian/tmp/usr/share/doc/midori/faq.html	/^<h2 class="sectionedit6"><a name="web_applications" id="web_applications">Web Applications<\/a><\/h2>$/;"	a
web_cache_activate_cb	extensions/web-cache.c	/^web_cache_activate_cb (MidoriExtension* extension,$/;"	f	file:
web_cache_add_download_cb	extensions/web-cache.c	/^web_cache_add_download_cb (MidoriBrowser*   browser,$/;"	f	file:
web_cache_app_add_browser_cb	extensions/web-cache.c	/^web_cache_app_add_browser_cb (MidoriApp*       app,$/;"	f	file:
web_cache_clear_cache_cb	extensions/web-cache.c	/^web_cache_clear_cache_cb (void)$/;"	f	file:
web_cache_deactivate_cb	extensions/web-cache.c	/^web_cache_deactivate_cb (MidoriExtension* extension,$/;"	f	file:
web_cache_get_cache_dir	extensions/web-cache.c	/^web_cache_get_cache_dir (void)$/;"	f	file:
web_cache_get_cached_path	extensions/web-cache.c	/^web_cache_get_cached_path (MidoriExtension* extension,$/;"	f	file:
web_cache_get_headers	extensions/web-cache.c	/^web_cache_get_headers (gchar* filename)$/;"	f	file:
web_cache_mesage_got_headers_cb	extensions/web-cache.c	/^web_cache_mesage_got_headers_cb (SoupMessage* msg,$/;"	f	file:
web_cache_message_finished_cb	extensions/web-cache.c	/^web_cache_message_finished_cb (SoupMessage*   msg,$/;"	f	file:
web_cache_message_got_chunk_cb	extensions/web-cache.c	/^web_cache_message_got_chunk_cb (SoupMessage* msg,$/;"	f	file:
web_cache_message_rewrite	extensions/web-cache.c	/^web_cache_message_rewrite (SoupMessage*  msg,$/;"	f	file:
web_cache_message_rewrite_async_cb	extensions/web-cache.c	/^web_cache_message_rewrite_async_cb (GFile *file,$/;"	f	file:
web_cache_pause_message	extensions/web-cache.c	/^static void web_cache_pause_message (SoupMessage* msg)$/;"	f	file:
web_cache_save_headers	extensions/web-cache.c	/^web_cache_save_headers (SoupMessage* msg,$/;"	f	file:
web_cache_session_request_queued_cb	extensions/web-cache.c	/^web_cache_session_request_queued_cb (SoupSession*     session,$/;"	f	file:
web_cache_set_content_type	extensions/web-cache.c	/^web_cache_set_content_type (SoupMessage* msg,$/;"	f	file:
web_cache_tmp_prepare	extensions/web-cache.c	/^web_cache_tmp_prepare (gchar* filename)$/;"	f	file:
web_cache_unpause_message	extensions/web-cache.c	/^static void web_cache_unpause_message (SoupMessage* msg)$/;"	f	file:
web_view	midori/midori-view.c	/^    GtkWidget* web_view;$/;"	m	struct:_MidoriView	file:
webkit_web_view_console_message_cb	midori/midori-view.c	/^webkit_web_view_console_message_cb (GtkWidget*   web_view,$/;"	f	file:
webkit_web_view_create_web_view_cb	midori/midori-view.c	/^webkit_web_view_create_web_view_cb (GtkWidget*      web_view,$/;"	f	file:
webkit_web_view_download_requested_cb	midori/midori-view.c	/^webkit_web_view_download_requested_cb (GtkWidget*      web_view,$/;"	f	file:
webkit_web_view_hovering_over_link_cb	midori/midori-view.c	/^webkit_web_view_hovering_over_link_cb (WebKitWebView* web_view,$/;"	f	file:
webkit_web_view_load_committed_cb	midori/midori-view.c	/^webkit_web_view_load_committed_cb (WebKitWebView*  web_view,$/;"	f	file:
webkit_web_view_load_error_cb	midori/midori-view.c	/^webkit_web_view_load_error_cb (WebKitWebView*  web_view,$/;"	f	file:
webkit_web_view_load_finished_cb	midori/midori-view.c	/^webkit_web_view_load_finished_cb (WebKitWebView*  web_view,$/;"	f	file:
webkit_web_view_load_started_cb	midori/midori-view.c	/^webkit_web_view_load_started_cb (WebKitWebView*  web_view,$/;"	f	file:
webkit_web_view_mime_type_decision_cb	midori/midori-view.c	/^webkit_web_view_mime_type_decision_cb (GtkWidget*               web_view,$/;"	f	file:
webkit_web_view_notify_title_cb	midori/midori-view.c	/^webkit_web_view_notify_title_cb (WebKitWebView* web_view,$/;"	f	file:
webkit_web_view_notify_uri_cb	midori/midori-view.c	/^webkit_web_view_notify_uri_cb (WebKitWebView* web_view,$/;"	f	file:
webkit_web_view_populate_popup_cb	midori/midori-view.c	/^webkit_web_view_populate_popup_cb (WebKitWebView* web_view,$/;"	f	file:
webkit_web_view_progress_changed_cb	midori/midori-view.c	/^webkit_web_view_progress_changed_cb (WebKitWebView* web_view,$/;"	f	file:
webkit_web_view_statusbar_text_changed_cb	midori/midori-view.c	/^webkit_web_view_statusbar_text_changed_cb (WebKitWebView* web_view,$/;"	f	file:
webkit_web_view_web_view_ready_cb	midori/midori-view.c	/^webkit_web_view_web_view_ready_cb (GtkWidget*  web_view,$/;"	f	file:
webkit_web_view_window_object_cleared_cb	midori/midori-view.c	/^webkit_web_view_window_object_cleared_cb (GtkWidget*      web_view,$/;"	f	file:
website	midori/midori-extension.c	/^    gchar* website;$/;"	m	struct:_MidoriExtensionPrivate	file:
webview	extensions/feed-panel/feed-panel.c	/^    GtkWidget* webview;$/;"	m	struct:_FeedPanel	file:
webview_button_press_event_cb	extensions/feed-panel/feed-panel.c	/^webview_button_press_event_cb (GtkWidget*      widget,$/;"	f	file:
webview_navigation_request_cb	extensions/feed-panel/feed-panel.c	/^webview_navigation_request_cb (WebKitWebView*             web_view,$/;"	f	file:
what_does_the_logo_mean	data/faq.html	/^<h4><a name="what_does_the_logo_mean" id="what_does_the_logo_mean">What does the logo mean?<\/a><\/h4>$/;"	a
what_does_the_logo_mean	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="what_does_the_logo_mean" id="what_does_the_logo_mean">What does the logo mean?<\/a><\/h4>$/;"	a
what_does_the_logo_mean	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="what_does_the_logo_mean" id="what_does_the_logo_mean">What does the logo mean?<\/a><\/h4>$/;"	a
what_is_midori_and_why_should_i_use_it	data/faq.html	/^<h4><a name="what_is_midori_and_why_should_i_use_it" id="what_is_midori_and_why_should_i_use_it">What is &quot;Midori&quot; and why should I use it?<\/a><\/h4>$/;"	a
what_is_midori_and_why_should_i_use_it	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="what_is_midori_and_why_should_i_use_it" id="what_is_midori_and_why_should_i_use_it">What is &quot;Midori&quot; and why should I use it?<\/a><\/h4>$/;"	a
what_is_midori_and_why_should_i_use_it	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="what_is_midori_and_why_should_i_use_it" id="what_is_midori_and_why_should_i_use_it">What is &quot;Midori&quot; and why should I use it?<\/a><\/h4>$/;"	a
why_can_t_i_use_periods_when_searching_from_the_location_bar	data/faq.html	/^<h4><a name="why_can_t_i_use_periods_when_searching_from_the_location_bar" id="why_can_t_i_use_periods_when_searching_from_the_location_bar">Why can&#039;t I use periods when searching from the location bar?<\/a><\/h4>$/;"	a
why_can_t_i_use_periods_when_searching_from_the_location_bar	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="why_can_t_i_use_periods_when_searching_from_the_location_bar" id="why_can_t_i_use_periods_when_searching_from_the_location_bar">Why can&#039;t I use periods when searching from the location bar?<\/a><\/h4>$/;"	a
why_can_t_i_use_periods_when_searching_from_the_location_bar	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="why_can_t_i_use_periods_when_searching_from_the_location_bar" id="why_can_t_i_use_periods_when_searching_from_the_location_bar">Why can&#039;t I use periods when searching from the location bar?<\/a><\/h4>$/;"	a
why_does_google_mailcalendarmaps_facebook_not_work_or_show_mobile_version	data/faq.html	/^<h4><a name="why_does_google_mailcalendarmaps_facebook_not_work_or_show_mobile_version" id="why_does_google_mailcalendarmaps_facebook_not_work_or_show_mobile_version">Why does Google Mail\/ Calendar\/ Maps, Facebook not work or show mobile version?<\/a><\/h4>$/;"	a
why_does_google_mailcalendarmaps_facebook_not_work_or_show_mobile_version	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="why_does_google_mailcalendarmaps_facebook_not_work_or_show_mobile_version" id="why_does_google_mailcalendarmaps_facebook_not_work_or_show_mobile_version">Why does Google Mail\/ Calendar\/ Maps, Facebook not work or show mobile version?<\/a><\/h4>$/;"	a
why_does_google_mailcalendarmaps_facebook_not_work_or_show_mobile_version	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="why_does_google_mailcalendarmaps_facebook_not_work_or_show_mobile_version" id="why_does_google_mailcalendarmaps_facebook_not_work_or_show_mobile_version">Why does Google Mail\/ Calendar\/ Maps, Facebook not work or show mobile version?<\/a><\/h4>$/;"	a
why_doesn_t_google_live_search_work	data/faq.html	/^<h4><a name="why_doesn_t_google_live_search_work" id="why_doesn_t_google_live_search_work">Why doesn&#039;t Google &quot;live search&quot; work?<\/a><\/h4>$/;"	a
why_doesn_t_google_live_search_work	debian/midori/usr/share/doc/midori/faq.html	/^<h4><a name="why_doesn_t_google_live_search_work" id="why_doesn_t_google_live_search_work">Why doesn&#039;t Google &quot;live search&quot; work?<\/a><\/h4>$/;"	a
why_doesn_t_google_live_search_work	debian/tmp/usr/share/doc/midori/faq.html	/^<h4><a name="why_doesn_t_google_live_search_work" id="why_doesn_t_google_live_search_work">Why doesn&#039;t Google &quot;live search&quot; work?<\/a><\/h4>$/;"	a
widget	katze/katze-utils.c	/^     GtkWidget* widget;$/;"	m	struct:__anon35	file:
widget	midori/midori-panedaction.c	/^    GtkWidget* widget;$/;"	m	struct:_MidoriPanedActionChild	file:
width	katze/katze-throbber.c	/^    gint width;$/;"	m	struct:_KatzeThrobber	file:
window	midori/gtkiconentry.c	/^  GdkWindow *window;$/;"	m	struct:__anon54	file:
window_object_cleared	midori/midori-browser.h	/^    (*window_object_cleared)   (MidoriBrowser*       browser,$/;"	m	struct:_MidoriBrowserClass
winrc_str	waf-modules/wafadmin/Tools/winres.py	/^winrc_str='${WINRC} ${_CPPDEFFLAGS} ${_CCDEFFLAGS} ${WINRCFLAGS} ${_CPPINCFLAGS} ${_CCINCFLAGS} ${WINRC_TGT_F} ${TGT} ${WINRC_SRC_F} ${SRC}'$/;"	v
wlock	waf-modules/wafadmin/ansiterm.py	/^	wlock=threading.Lock()$/;"	v
wrap	waf-modules/wafadmin/Tools/ar.py	/^def wrap(self):$/;"	f
wrap	waf-modules/wafadmin/Utils.py	/^	def wrap(k):$/;"	f	function:run_once
write	waf-modules/wafadmin/ansiterm.py	/^		def write(self,text):$/;"	m	class:AnsiTerm
write_config_header	waf-modules/wafadmin/Tools/config_c.py	/^def write_config_header(self,configfile='',env='',guard='',top=False):$/;"	f
write_cookie	katze/katze-http-cookies.c	/^write_cookie (FILE *out, SoupCookie *cookie)$/;"	f	file:
x	extensions/mouse-gestures.c	/^    double x;$/;"	m	struct:MouseGestureNode	file:
x_file	waf-modules/wafadmin/TaskGen.py	/^	def x_file(self,node):$/;"	f	function:declare_chain
xlc_common_flags	waf-modules/wafadmin/Tools/xlc.py	/^def xlc_common_flags(conf):$/;"	f
xlcxx_common_flags	waf-modules/wafadmin/Tools/xlcxx.py	/^def xlcxx_common_flags(conf):$/;"	f
xml_to_taskgen	waf-modules/wafadmin/Tools/gnome.py	/^class xml_to_taskgen(TaskGen.task_gen):$/;"	c
xsubpp_file	waf-modules/wafadmin/Tools/perl.py	/^def xsubpp_file(self,node):$/;"	f
xsubpp_str	waf-modules/wafadmin/Tools/perl.py	/^xsubpp_str='${PERL} ${XSUBPP} -noprototypes -typemap ${EXTUTILS_TYPEMAP} ${SRC} > ${TGT}'$/;"	v
y	extensions/mouse-gestures.c	/^    double y;$/;"	m	struct:MouseGestureNode	file:
zip_folder	waf-modules/wafadmin/Utils.py	/^def zip_folder(dir,zip_file_name,prefix):$/;"	f
zones	waf-modules/wafadmin/Logs.py	/^zones=''$/;"	v
zoom_levels	extensions/statusbar-features.c	/^const ZoomLevel zoom_levels[] =$/;"	v
zoom_text_and_images	midori/midori-websettings.c	/^    gboolean zoom_text_and_images : 1;$/;"	m	struct:_MidoriWebSettings	file:
